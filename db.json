{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/yilia/source/main.0cf68a.css","path":"main.0cf68a.css","modified":1,"renderable":1},{"_id":"themes/yilia/source/slider.e37972.js","path":"slider.e37972.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/main.0cf68a.js","path":"main.0cf68a.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/mobile.992cbe.js","path":"mobile.992cbe.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/default-skin.b257fa.svg","path":"fonts/default-skin.b257fa.svg","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.16acc2.ttf","path":"fonts/iconfont.16acc2.ttf","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/tooltip.4004ff.svg","path":"fonts/tooltip.4004ff.svg","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.8c627f.woff","path":"fonts/iconfont.8c627f.woff","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.45d7ee.svg","path":"fonts/iconfont.45d7ee.svg","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.b322fa.eot","path":"fonts/iconfont.b322fa.eot","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/default-skin.png","path":"img/default-skin.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/favicon.ico","path":"img/favicon.ico","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/preloader.gif","path":"img/preloader.gif","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/head.jpg","path":"img/head.jpg","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","path":"img/scrollbar_arrow.png","modified":1,"renderable":1}],"Cache":[{"_id":"themes/yilia/.babelrc","hash":"db600d40e93e6d8023737a65d58d3be7370e5e30","modified":1546237258000},{"_id":"themes/yilia/.editorconfig","hash":"daaa8757fac18f8735fadd0a37a42c06f421ca14","modified":1546237258000},{"_id":"themes/yilia/.gitignore","hash":"d5fc575329853ff620b50fc62ad4b18fa09a308a","modified":1546237258000},{"_id":"themes/yilia/.eslintignore","hash":"ed9d8911ca08c3dd5072c48dd0be4d06f8897730","modified":1546237258000},{"_id":"themes/yilia/.eslintrc.js","hash":"303d25adf02ad65720e537a16a4a137d14bb755f","modified":1546237258000},{"_id":"themes/yilia/.gitattributes","hash":"758cfbecfa7919e99abddf3297f37cde7e3d8d4e","modified":1546237258000},{"_id":"themes/yilia/README.md","hash":"1bf755806af9d8874bd22e1abbdaaa24328ef4dc","modified":1546237258000},{"_id":"themes/yilia/_config.yml","hash":"d5799c0d371450c4e4838de82087652eeeafe044","modified":1568127892000},{"_id":"themes/yilia/package.json","hash":"ee6aa61f1cb89fd549e3e087c0232207a9c9ee30","modified":1546237258000},{"_id":"themes/yilia/webpack.config.js","hash":"da7657347109ddb4ab8602b219778117254677fe","modified":1546237260000},{"_id":"source/404/index.md","hash":"ad0b6e6b09181dc9bde78fa98b2490c43e0aaca2","modified":1589819700475},{"_id":"source/_posts/Android Studio 常用快捷键.md","hash":"05b4f19dfcf4c4dc41f327ff70f04fecc6230bc5","modified":1589819700476},{"_id":"source/_posts/AutoJs.md","hash":"fc2bd01dcfccb13c93f739b918b97ca400647b5c","modified":1589819700476},{"_id":"source/_posts/AnyProxy抓取http、https请求.md","hash":"2e3637f27499786ff2de73060b1af9ea017b385d","modified":1589819700476},{"_id":"source/_posts/Dayjs API.md","hash":"a71f10d95d07bedaceaf12fd674c88a092f30e34","modified":1589819700477},{"_id":"source/_posts/CSS鼠标点击穿透Div.md","hash":"fef6aa81f8141ed102335ec5a87ee4e08da88def","modified":1589819700477},{"_id":"source/_posts/Axios解决post请求数据错误的问题.md","hash":"eb6fa31b3d10572aa7b06b66f66b5af3602782e7","modified":1589819700477},{"_id":"source/_posts/IOS端微信页面下拉刷新会触发滚动事件.md","hash":"063b3f7da2ed5c811dcbdfd19598b3a8dec07820","modified":1589819700478},{"_id":"source/_posts/Git拉取远程最新代码，并与当前分支合并.md","hash":"673bbbcf7205941d4b4f50ffa0d104111ffc7345","modified":1589819700478},{"_id":"source/_posts/Mac 下配置Flutter.md","hash":"1bc5d3b8071d0e58a3e55ae6557ff6e462f48f12","modified":1589819700478},{"_id":"source/_posts/Mac 管理Node版本工-n.md","hash":"b3753725e6da7fef03d47b8b2503cec17a80c877","modified":1589819700479},{"_id":"source/_posts/Markdown基本语法.md","hash":"f9a040e9413b5d4fc88e88aa3dcd9070571f1143","modified":1589819700479},{"_id":"source/_posts/Vue使用路由的钩子函改变单页面的颜色.md","hash":"f04412b8ce469696564084f73b42a1818a52cd81","modified":1589819700479},{"_id":"source/_posts/Moment.js常见用法总结.md","hash":"8b8de7ad7a7e0159a1cef416470f56a9bdc91574","modified":1589819700479},{"_id":"source/_posts/Vue插件集合.md","hash":"b810a6bd70819f7161d20f3aff6b77b10aaf8ea4","modified":1589819700480},{"_id":"source/_posts/Web端使用jquerer-emoji表情.md","hash":"8a0604ca23f8ae063390a465a14479c5c94ebc22","modified":1589819700480},{"_id":"source/_posts/Threejs导出GLTF.md","hash":"13260c061848acf166532e782d7001e5a9f39758","modified":1608016262725},{"_id":"source/_posts/ag-grid.md","hash":"add02d193e15341e3fc76a316fb1e4b31bac3133","modified":1589819700481},{"_id":"source/_posts/bootstrap导航缩小折叠问题.md","hash":"dba8bf5d9d3523425a79ef319af80b9226493ceb","modified":1589819700481},{"_id":"source/_posts/axios-mockjs在vue中使用.md","hash":"ef61fb65dd7e77064eb2790e0368db5dbc438abe","modified":1589819700481},{"_id":"source/_posts/git clone 太慢.md","hash":"00d0fb60943d503ea0905081768bfd0fb81db7c7","modified":1589819700481},{"_id":"source/_posts/git 简写.md","hash":"4698c2dcb85ffd5701aa6394b4a41f3fd7af118c","modified":1589819700482},{"_id":"source/_posts/github搭建hexo博客.md","hash":"2c1040959eb7b872f4f095214f805aa044bb91e2","modified":1589819700482},{"_id":"source/_posts/Windows环境下安装最新MySQL服务.md","hash":"74b0eb9a143b028f6faab8897b3741640de54bb1","modified":1589819700480},{"_id":"source/_posts/git分支的创建与使用.md","hash":"7e0fbbdb87299ec1efd358042ace4043b624edbe","modified":1589819700482},{"_id":"source/_posts/hexo添加Gitalik评论.md","hash":"86950c793c63f4086e2a17a6e0527af03704d66c","modified":1589819700482},{"_id":"source/_posts/pulltorefresh-js插件滚动重复刷新.md","hash":"f6ae4a9f432a0bab89807902ffae6f1fcf0e64bc","modified":1589819700483},{"_id":"source/_posts/jQuer-动画篇.md","hash":"959e608d6497b38c77c8ea38aae9448d5baa9206","modified":1589819700483},{"_id":"source/_posts/sublime编辑器Ctrl-E快捷键无效.md","hash":"cab8a5d172c06d6e23ad7ac401ee67054e7ce7e6","modified":1589819700483},{"_id":"source/_posts/js或jquery如何获取父、子、兄元素.md","hash":"89a66ffe781c7aedb5426b0c4b1c5df381a31fb6","modified":1589819700483},{"_id":"source/_posts/vue-router-query和params传参-接收参数-的区别.md","hash":"95eb25a3120410f155a2bb1ad853a9ddc339986d","modified":1589819700484},{"_id":"source/_posts/vue-cli3下的Axios封装.md","hash":"8036312694dad91e7ac3f6dbf8bdfd6d21ea823f","modified":1589819700484},{"_id":"source/_posts/webstorm永久激活.md","hash":"9a18ed6cf765b0f1ca48b0d63090694032148499","modified":1589819700484},{"_id":"source/_posts/下拉刷新上拉加载组件.md","hash":"5612cf71fd8e850c52a12df5679608a790f0f7db","modified":1589819700484},{"_id":"source/_posts/为啥 await 不能用在 forEach 中.md","hash":"6f11e3155b58593e6b8fd9a6e39e3078db7b2caf","modified":1589819700484},{"_id":"source/_posts/关于Node计算出现浮点数.md","hash":"144377823232541d6b51eb53932a7f3936ef1c70","modified":1589819700485},{"_id":"source/_posts/后端数据优化.md","hash":"43eca8f730dcdfe8fc02ab3f93c59927c075443d","modified":1589819700485},{"_id":"source/_posts/关于PC端缩小浏览器窗口，右边背景空白并出现滚动条.md","hash":"908aca23e36f5c70433984969a654096e14a999d","modified":1589819700485},{"_id":"source/_posts/在Chrome中模拟微信浏览器.md","hash":"649d19a72b71b7e4ba1bcebb92ba01e2dd249520","modified":1589819700485},{"_id":"source/_posts/垂直居中的几种方法.md","hash":"28e42d4a6fe54455bd231384b3c8a85810890992","modified":1589819700486},{"_id":"source/_posts/多行文本溢出隐藏.md","hash":"29977a0fc8094c4b7f291b7917c4817953c23640","modified":1589819700486},{"_id":"source/_posts/安装Docker.md","hash":"97286ee39855ffa29b3838069bf4776090bfb558","modified":1589819700486},{"_id":"source/_posts/小程序wxml页面进行数据替换.md","hash":"a5d32f0d0a8d3704baed2b58da8e88ada9771193","modified":1589819700486},{"_id":"source/_posts/小程序反编译.md","hash":"b9e0a6baf30147f42e7a3273933a363e9ab835f4","modified":1589819700486},{"_id":"source/_posts/小程序开发问题集.md","hash":"155cc9bc0bc34f9e375a10b7f1eeaff4e4b11211","modified":1589819700487},{"_id":"source/_posts/常用Git命令清单.md","hash":"1b40c82d5ac5c59544c938cbcfc92846cc2a8ebc","modified":1589819700487},{"_id":"source/_posts/微信小程序父子组件通讯.md","hash":"be929d39e96a1a319b932bb487d6aad0afcaf80e","modified":1589819700487},{"_id":"source/_posts/正则表达式获取URL参数.md","hash":"4d33598cdeef637810abe9ea10f84bde70563b08","modified":1589819700488},{"_id":"source/_posts/快速搭建Flutter环境-Mac.md","hash":"a116f69835fad8595c86b267a31dcce4b97bda59","modified":1589819700487},{"_id":"source/_posts/网页结构命名.md","hash":"ed60c0914adfa2c7f87bfd6287f837267b911b3f","modified":1589819700488},{"_id":"source/_posts/解决微信小程序使用switchTab跳转后页面不刷新的问题.md","hash":"418d61302b0b6734a05cf9aec0ecb5b85c309876","modified":1589819700488},{"_id":"themes/yilia/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1546237258000},{"_id":"themes/yilia/.git/config","hash":"316bc92d9936dc739c39161838a28fb4641cbea2","modified":1546237258000},{"_id":"themes/yilia/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1546237244000},{"_id":"themes/yilia/.git/index","hash":"eb8ce489ff0f9af763e5555f697240e3193977af","modified":1546237260000},{"_id":"themes/yilia/.git/packed-refs","hash":"76b1aa9479dd3de329935b6d94a6624c5f716d23","modified":1546237258000},{"_id":"themes/yilia/languages/default.yml","hash":"f26a34a7983d4bc17c65c7f0f14da598e62ce66d","modified":1546237258000},{"_id":"themes/yilia/languages/fr.yml","hash":"b4be1c1592a72012e48df2b3ec41cc9685573e50","modified":1546237258000},{"_id":"themes/yilia/languages/nl.yml","hash":"3d82ec703d0b3287739d7cb4750a715ae83bfcb3","modified":1546237258000},{"_id":"themes/yilia/languages/no.yml","hash":"ddf2035e920a5ecb9076138c184257d9f51896a7","modified":1546237258000},{"_id":"themes/yilia/languages/ru.yml","hash":"2a476b4c6e04900914c81378941640ac5d58a1f0","modified":1546237258000},{"_id":"themes/yilia/languages/zh-CN.yml","hash":"b057f389c6713010f97d461e48ec959b0b6f3b44","modified":1546237258000},{"_id":"themes/yilia/languages/zh-tw.yml","hash":"f5f0ca88185da7a8457760d84bf221781473bd7c","modified":1546237258000},{"_id":"themes/yilia/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1546237258000},{"_id":"themes/yilia/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1546237258000},{"_id":"themes/yilia/layout/index.ejs","hash":"ec498c6c0606acde997ce195dad97b267418d980","modified":1546237258000},{"_id":"themes/yilia/layout/layout.ejs","hash":"b471ab706d48e0be3f783eab1c94bf5878ef5a94","modified":1546237258000},{"_id":"themes/yilia/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1546237258000},{"_id":"themes/yilia/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1546237258000},{"_id":"themes/yilia/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1546237258000},{"_id":"themes/yilia/source-src/css.ejs","hash":"cf7eab48d626433120d1ef9697f719a359817018","modified":1546237258000},{"_id":"themes/yilia/source/main.0cf68a.css","hash":"ddf6e2c6b953c2c59a3c271e6070010a4cc81cf9","modified":1546237260000},{"_id":"themes/yilia/source/slider.e37972.js","hash":"ce5eac88301fe4f2fce0fb6203adfd58eb8313ac","modified":1546237260000},{"_id":"themes/yilia/source-src/script.ejs","hash":"28abac2426761d7e715b38aadd86ce6549c8ae77","modified":1546237258000},{"_id":"themes/yilia/layout/_partial/toc.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1546237258000},{"_id":"themes/yilia/source/main.0cf68a.js","hash":"283ae27ea37ac3e0e45b2e05c2482a4c594b9c25","modified":1546237260000},{"_id":"themes/yilia/source/mobile.992cbe.js","hash":"1801ef448909ea23c0a48e9d63b80d0cfd5534ce","modified":1546237260000},{"_id":"themes/yilia/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1546237244000},{"_id":"themes/yilia/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1546237244000},{"_id":"themes/yilia/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1546237244000},{"_id":"themes/yilia/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1546237244000},{"_id":"themes/yilia/.git/hooks/pre-commit.sample","hash":"33729ad4ce51acda35094e581e4088f3167a0af8","modified":1546237244000},{"_id":"themes/yilia/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1546237244000},{"_id":"themes/yilia/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1546237244000},{"_id":"themes/yilia/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1546237244000},{"_id":"themes/yilia/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1546237244000},{"_id":"themes/yilia/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1546237244000},{"_id":"themes/yilia/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1546237244000},{"_id":"themes/yilia/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1546237244000},{"_id":"themes/yilia/.git/logs/HEAD","hash":"92efd048b91605b815a1b1e834a474d0fd66c0be","modified":1546237258000},{"_id":"themes/yilia/layout/_partial/archive-post.ejs","hash":"edc0154b30a4127acda10297bec6aacf754b4ac4","modified":1546237258000},{"_id":"themes/yilia/layout/_partial/after-footer.ejs","hash":"c70f367f54064a441e574c913f5e0ea121d0f899","modified":1546237258000},{"_id":"themes/yilia/layout/_partial/archive.ejs","hash":"a4eacc2bc1278095a0ef99f904b0634c78f980eb","modified":1546237258000},{"_id":"themes/yilia/layout/_partial/article.ejs","hash":"b000ada66db9fafad2ac72bb1fd1537fc4191acd","modified":1546243252000},{"_id":"themes/yilia/layout/_partial/aside.ejs","hash":"751e5deab5365348be5243688b419c82d337ab9a","modified":1546237258000},{"_id":"themes/yilia/layout/_partial/baidu-analytics.ejs","hash":"155327c23607f69989b58845f24d842a54e504b8","modified":1546237258000},{"_id":"themes/yilia/layout/_partial/css.ejs","hash":"236f8a377b2e4e35754319c3029bcd4a4115431d","modified":1546237258000},{"_id":"themes/yilia/layout/_partial/footer.ejs","hash":"871f81cacd5d41cb2eb001cd56254217a857dc2f","modified":1546237258000},{"_id":"themes/yilia/layout/_partial/google-analytics.ejs","hash":"1ccc627d7697e68fddc367c73ac09920457e5b35","modified":1546237258000},{"_id":"themes/yilia/layout/_partial/head.ejs","hash":"12ca7d8dba56bc767b9309dda9526dcbaffc1614","modified":1546237258000},{"_id":"themes/yilia/layout/_partial/header.ejs","hash":"b69855e07b65117769adc515cb64b803932068c9","modified":1546237258000},{"_id":"themes/yilia/layout/_partial/left-col.ejs","hash":"fb1b8457b9eb15b55da1bf7b133e12c375dd26f8","modified":1546237258000},{"_id":"themes/yilia/layout/_partial/mathjax.ejs","hash":"11550a418921d330e6553be0569a94ab5a217967","modified":1546237258000},{"_id":"themes/yilia/layout/_partial/mobile-nav.ejs","hash":"ccec1fc70f021cb50ac85b524e7949878ab93a18","modified":1546237258000},{"_id":"themes/yilia/layout/_partial/tools.ejs","hash":"0ffcb251b79e8a920c9b4cb6bb7a96a808816165","modified":1546237258000},{"_id":"themes/yilia/layout/_partial/viewer.ejs","hash":"cc1c39903aed0a0601d104238d2bbd13ad2a36f3","modified":1546237258000},{"_id":"themes/yilia/source/fonts/default-skin.b257fa.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1546237260000},{"_id":"themes/yilia/source/fonts/iconfont.16acc2.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1546237260000},{"_id":"themes/yilia/source/fonts/tooltip.4004ff.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1546237260000},{"_id":"themes/yilia/source/fonts/iconfont.8c627f.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1546237260000},{"_id":"themes/yilia/source/fonts/iconfont.45d7ee.svg","hash":"75767c904d483d9b93469afb6b92bb6bdface639","modified":1546237260000},{"_id":"themes/yilia/source/fonts/iconfont.b322fa.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1546237260000},{"_id":"themes/yilia/source/img/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1546237260000},{"_id":"themes/yilia/source/img/favicon.ico","hash":"273114705adbdf6dce00e3ae3c45c273ea139908","modified":1546238514000},{"_id":"themes/yilia/source/img/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1546237260000},{"_id":"themes/yilia/source/img/head.jpg","hash":"707b10407c969c04e8fa7126accff7037abbd1af","modified":1546238534000},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1546237260000},{"_id":"themes/yilia/source-src/css/_core.scss","hash":"29ba600e98ed55f7af4ade8038272c84cba21188","modified":1546237258000},{"_id":"themes/yilia/source-src/css/_function.scss","hash":"ce227b6f5a9af194fd5d455200630f32c05e151f","modified":1546237258000},{"_id":"themes/yilia/source-src/css/archive.scss","hash":"d6a7dd88404b383b5b94e4c7ec675a410c41f3cc","modified":1546237258000},{"_id":"themes/yilia/source-src/css/article-main.scss","hash":"1577a2336b3ad122f49f60dff2bc1a97d4e7b18b","modified":1546237258000},{"_id":"themes/yilia/source-src/css/article-nav.scss","hash":"8f82fe898ba1c1bd00c24a7d8270feddc7eba3bc","modified":1546237258000},{"_id":"themes/yilia/source-src/css/article-inner.scss","hash":"f7388f5c11370ef462f7cb913d8f72edf24ecaf9","modified":1546237258000},{"_id":"themes/yilia/source-src/css/article.scss","hash":"55d082fec4c6bb341725567acaa29ce37d50320a","modified":1546237258000},{"_id":"themes/yilia/source-src/css/comment.scss","hash":"b85f344f2c66d43d7094746e0a9ccb21d0534201","modified":1546237258000},{"_id":"themes/yilia/source-src/css/aside.scss","hash":"07244c188f58ecfb90bb7c047b8cde977f1dc4b4","modified":1546237258000},{"_id":"themes/yilia/source-src/css/footer.scss","hash":"7ca837a4cc34db1c35f01baec85eb10ccc64ea86","modified":1546237258000},{"_id":"themes/yilia/source-src/css/global.scss","hash":"b4cb4f45a55d4250cd9056f76dab2a3c0dabcec4","modified":1546237258000},{"_id":"themes/yilia/source-src/css/highlight.scss","hash":"40e5aa5056dc0b3b9f51c5b387370b612e265d4e","modified":1546237258000},{"_id":"themes/yilia/source-src/css/main.scss","hash":"9eba1fcf4805256697528fcf3b767cf6dd8d0591","modified":1546237258000},{"_id":"themes/yilia/source-src/css/left.scss","hash":"80dac621e43581a254d0152d5df901e4d0b01c09","modified":1546237258000},{"_id":"themes/yilia/source-src/css/grid.scss","hash":"f53ea8270752b5919ec5d79224d22af91f2eda12","modified":1546237258000},{"_id":"themes/yilia/source-src/css/mobile-slider.scss","hash":"19f10fd2f0c3377aa4b165b3c2291ecf86dd9351","modified":1546237258000},{"_id":"themes/yilia/source-src/css/mobile.scss","hash":"d995dcd483a250fe61b426158afb61bf8923a927","modified":1546237258000},{"_id":"themes/yilia/source-src/css/reward.scss","hash":"a557a9ed244c82b8b71e9da9de3339d92783499f","modified":1546237258000},{"_id":"themes/yilia/source-src/css/scroll.scss","hash":"2495f7e4e3b055735c531f944b5f40a118a351ec","modified":1546237258000},{"_id":"themes/yilia/source-src/css/page.scss","hash":"244c4d75c375978ff9edb74acc68825e63c6b235","modified":1546237258000},{"_id":"themes/yilia/source-src/css/share.scss","hash":"9d6f6884f40c191882e56a1e1e1192400944a515","modified":1546237258000},{"_id":"themes/yilia/source-src/css/social.scss","hash":"a10a038a1dac8953cb4ffc7e04272eff9fac54e4","modified":1546237258000},{"_id":"themes/yilia/source-src/css/tags-cloud.scss","hash":"399744e98e7c67939ed9b23c2670d8baad044eda","modified":1546237258000},{"_id":"themes/yilia/source-src/css/tags.scss","hash":"915c93edd67c5326695cc7dc84b14c5f154dbcc8","modified":1546237258000},{"_id":"themes/yilia/source-src/css/tools.scss","hash":"2924fb6f77c4a9973cd928c2c7db0acb848ed483","modified":1546237258000},{"_id":"themes/yilia/source-src/css/tooltip.scss","hash":"b81cedbe31accca82e597801186911a7b5e6841c","modified":1546237258000},{"_id":"themes/yilia/source-src/js/anm.js","hash":"d18f6276a352b871390a4112d479b9e58b8cdbbe","modified":1546237258000},{"_id":"themes/yilia/source-src/js/aside.js","hash":"5e4c3c3d61f1e1ce2f09688d3aff25fadc851fff","modified":1546237258000},{"_id":"themes/yilia/source-src/js/browser.js","hash":"4dc04845cf27f350922b63f1813a9c82e6e33b05","modified":1546237258000},{"_id":"themes/yilia/source-src/js/main.js","hash":"fe98bf90ce61658fe16ae057f8b6a512a845af3b","modified":1546237258000},{"_id":"themes/yilia/source-src/js/fix.js","hash":"67b8819abb886c9d066fb3b0624ca15e06f63fe0","modified":1546237258000},{"_id":"themes/yilia/source-src/js/Q.js","hash":"e56d9710afa79b31ca6b9fbd845f6d1895f5214b","modified":1546237258000},{"_id":"themes/yilia/source-src/js/mobile.js","hash":"461c08ffcbc724d74ec7e0ff38e171eefe0f89fd","modified":1546237258000},{"_id":"themes/yilia/source-src/js/report.js","hash":"57680f9a23bd0a1eaafd64ae08cc33e20627ab15","modified":1546237258000},{"_id":"themes/yilia/source-src/js/share.js","hash":"d4ccff8266c37363b3904226f5d035b7db882c61","modified":1546237258000},{"_id":"themes/yilia/source-src/js/slider.js","hash":"0beaa112657ad57c723d9e773d5b79de60c1dd74","modified":1546237258000},{"_id":"themes/yilia/source-src/js/viewer.js","hash":"c699cf3c89409ec8f044258e0715a470861b5d5d","modified":1546237258000},{"_id":"themes/yilia/source-src/js/util.js","hash":"3bcdeb95072b85600874424e6929e3e22cfddaa0","modified":1546237258000},{"_id":"themes/yilia/layout/_partial/script.ejs","hash":"e98ec0b3b56f14d1d79af99ceb42727719a584f3","modified":1546237258000},{"_id":"themes/yilia/source-src/css/fonts.scss","hash":"96d7eb1d42c06fdcccb8ef969f6ecd30c3194903","modified":1546237258000},{"_id":"themes/yilia/.git/refs/heads/master","hash":"4ed77da1a2617db0e77c3e3e190a1c79c16dfb9a","modified":1546237258000},{"_id":"themes/yilia/.git/objects/pack/pack-f994eba0f7d577ba8d3a5e4c575abc5f5ad399f2.idx","hash":"9dae4a9a7d7b2a42230ebac7d1fdc99782076178","modified":1546237258000},{"_id":"themes/yilia/layout/_partial/post/changyan.ejs","hash":"086c8a88fd3bcae7ec13258df58e25d6354af2fa","modified":1546237258000},{"_id":"themes/yilia/layout/_partial/post/category.ejs","hash":"e777cbf959b11c4dfda649c562799899b90ab4a3","modified":1546237258000},{"_id":"themes/yilia/layout/_partial/post/date.ejs","hash":"aae96de18d48cd3b9b7bf6fed0100e15b53cca97","modified":1546237258000},{"_id":"themes/yilia/layout/_partial/post/duoshuo.ejs","hash":"f6b4c4eaafb5ac386273354b5f64a26139b7a3b0","modified":1546237258000},{"_id":"themes/yilia/layout/_partial/post/gitalk.ejs","hash":"5b7193bc087429e22d493b8d142af08094f62de9","modified":1546329064000},{"_id":"themes/yilia/layout/_partial/post/gitment.ejs","hash":"25655016773aa5d0774c56115ae1736a9fc9ea1f","modified":1546237258000},{"_id":"themes/yilia/layout/_partial/post/nav.ejs","hash":"b6a97043f9ec37e571aacacfedcda1d4d75e3c7c","modified":1546237258000},{"_id":"themes/yilia/layout/_partial/post/share.ejs","hash":"345b262e3c3b75c0cd9a93d9ecabcf06e33e54ff","modified":1546237258000},{"_id":"themes/yilia/layout/_partial/post/tag.ejs","hash":"2c4e4ca36c9bb4318506c38aca7127f1f44d827f","modified":1546237258000},{"_id":"themes/yilia/layout/_partial/post/title.ejs","hash":"d4a460a35e2112d0c7414fd5e19b3a16093f1caf","modified":1546237258000},{"_id":"themes/yilia/layout/_partial/post/wangyiyun.ejs","hash":"fb022502c741b4a26bad6b2ad37245c10ede3f1a","modified":1546237258000},{"_id":"themes/yilia/source-src/css/core/_animation.scss","hash":"1834c3ed8560716e63bb3a50be94cac87fbbeaf3","modified":1546237258000},{"_id":"themes/yilia/source-src/css/core/_media-queries.scss","hash":"262ffcd88775080b7f511db37f58d2bcb1b2bfc7","modified":1546237258000},{"_id":"themes/yilia/source-src/css/core/_mixin.scss","hash":"91db061c9c17628291a005e5bd4936cf9d35a6c4","modified":1546237258000},{"_id":"themes/yilia/source-src/css/core/_reset.scss","hash":"398a49913b4a47d928103562b1ce94520be4026a","modified":1546237258000},{"_id":"themes/yilia/source-src/css/core/_variables.scss","hash":"6e75bdaa46de83094ba0873099c6e7d656a22453","modified":1546237258000},{"_id":"themes/yilia/source-src/css/fonts/iconfont.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1546237258000},{"_id":"themes/yilia/source-src/css/fonts/iconfont.svg","hash":"75767c904d483d9b93469afb6b92bb6bdface639","modified":1546237258000},{"_id":"themes/yilia/source-src/css/fonts/iconfont.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1546237258000},{"_id":"themes/yilia/source-src/css/fonts/iconfont.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1546237258000},{"_id":"themes/yilia/source-src/css/img/checkered-pattern.png","hash":"049262fa0886989d750637b264bed34ab51c23c8","modified":1546237258000},{"_id":"themes/yilia/source-src/css/img/tooltip.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1546237258000},{"_id":"themes/yilia/source-src/css/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1546237258000},{"_id":"themes/yilia/.git/logs/refs/heads/master","hash":"92efd048b91605b815a1b1e834a474d0fd66c0be","modified":1546237258000},{"_id":"themes/yilia/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1546237258000},{"_id":"themes/yilia/.git/logs/refs/remotes/origin/HEAD","hash":"92efd048b91605b815a1b1e834a474d0fd66c0be","modified":1546237258000},{"_id":"themes/yilia/.git/objects/pack/pack-f994eba0f7d577ba8d3a5e4c575abc5f5ad399f2.pack","hash":"e735987fded6ac17cd083dcdd0e09d76334d723c","modified":1546237258000},{"_id":"public/content.json","hash":"3990253fcbe2c2391bdb3c1252dcc1d05fc36e3a","modified":1661413054697},{"_id":"public/404/index.html","hash":"d8641823d270997d1e4eb51caad21d94c670b962","modified":1661413055408},{"_id":"public/post/f781f6cc.html","hash":"f853c5e925bb8f7df41b6baf1185cd03fa86a9e0","modified":1661413055409},{"_id":"public/post/adk7e5ef.html","hash":"60719dca0e826e43731263ac62e02755fce8726e","modified":1661413055409},{"_id":"public/post/adj7e5ef.html","hash":"e82bfe3b2661958afc0218a079cc8a9283990210","modified":1661413055409},{"_id":"public/post/adh7e5ef.html","hash":"9bbe321de7cacffa7594a60804ebcfd5177d922d","modified":1661413055409},{"_id":"public/post/adf7e5ef.html","hash":"6a426133d2f8553908abd9869c44bb56d0022b0b","modified":1661413055409},{"_id":"public/post/adg7e5ef.html","hash":"826d3c62e88b200a045dee70ab649281a637d8bc","modified":1661413055409},{"_id":"public/post/add7e5ef.html","hash":"210ea191f09cec3e1e87628c5fdac6c7b94e96b5","modified":1661413055409},{"_id":"public/post/ads7e5ef.html","hash":"d052be7c4eb5b63f132b1faaf326f3d3e96a1d23","modified":1661413055409},{"_id":"public/post/ada7e5ef.html","hash":"8e963775e404ad8dc2210364ebe92de8a2c9befa","modified":1661413055410},{"_id":"public/post/adp7e5ef.html","hash":"4dae29e46ec7033a25c95a3738691780bdfc3cd6","modified":1661413055410},{"_id":"public/post/ado7e5ef.html","hash":"aac8357631b44a9d7be8b26d097210b18c518dfd","modified":1661413055410},{"_id":"public/post/adu7e5ef.html","hash":"d1dabb990b53801c8caa84ae1eec26969bec5aad","modified":1661413055410},{"_id":"public/post/ady7e5ef.html","hash":"56d53122f761c1328b02c5d81d193dcb83dca358","modified":1661413055410},{"_id":"public/post/adt7e5ef.html","hash":"23af62caec21ae661a1f6a1ce07138931e2eb73b","modified":1661413055410},{"_id":"public/post/adr7e5ef.html","hash":"3adaf81b82ce17433c05a0abbb10694978683794","modified":1661413055411},{"_id":"public/post/adi7e5ef.html","hash":"44899bd8c0d7100c5737b0bc09484c2ecba75e80","modified":1661413055411},{"_id":"public/post/b72i3fe5.html","hash":"5c2c0d05739e6ad509ba773acde02bd55096a244","modified":1661413055412},{"_id":"public/post/9a98d699.html","hash":"f57faac9fc243f9096181cd9b594aaa01461ac48","modified":1661413055412},{"_id":"public/post/e235697f.html","hash":"3298459914896ae7d0614849ef0dd4ebab5b845d","modified":1661413055413},{"_id":"public/post/fc17f2c8.html","hash":"94417c0c919044240002df5cfba2a9f4262f4142","modified":1661413055413},{"_id":"public/post/2df016a3.html","hash":"57895e25b72857b1ec81d8a7f68c25daadfb208a","modified":1661413055413},{"_id":"public/post/276258a.html","hash":"a4c176562c40c92ff6753c5d1d4c22ddbc9fd7cb","modified":1661413055413},{"_id":"public/post/36597039.html","hash":"f78193a3ec8e483abd13e298425b278270650f92","modified":1661413055414},{"_id":"public/post/a2dbbd02.html","hash":"f37e06f518a32425c8bcd020123852f38ea132b3","modified":1661413055414},{"_id":"public/post/e4ed1a3d.html","hash":"1d6c5db46567eb1c429b6551e2a78322b26a4eda","modified":1661413055414},{"_id":"public/post/adc7e5ef.html","hash":"5879543b0213d707b2010065e864f59efb54cb76","modified":1661413055414},{"_id":"public/post/9bbb323.html","hash":"bb1067fba2e46c933443269e85e139be1234b2dc","modified":1661413055414},{"_id":"public/post/c64071c3.html","hash":"d52930eb139dc0b975c92dff86f8ee738b97dcfa","modified":1661413055415},{"_id":"public/post/9b47786.html","hash":"1715cd31fb58b6d838dfa22377f8827b1d006396","modified":1661413055415},{"_id":"public/post/b72c2fe5.html","hash":"3a86b6c02e77c030e8a7a3102b85498116d2b038","modified":1661413055415},{"_id":"public/post/d9939f07.html","hash":"cf03e2e312c8cadfebc55cd76e4a60e35bb473bd","modified":1661413055415},{"_id":"public/post/d177a72b.html","hash":"9cff69576ef7e0eb178a9619d63f6ae19a469578","modified":1661413055415},{"_id":"public/post/3f741c8d.html","hash":"8ffe1ea5a9387a4725fb21e58885348dd9132090","modified":1661413055416},{"_id":"public/post/2665f262.html","hash":"205a44765de921b514ec1cb3f501b4e787fb963a","modified":1661413055416},{"_id":"public/post/34da003d.html","hash":"3c5377915c8b697973fb4bf3019fe0e20ba17b41","modified":1661413055416},{"_id":"public/post/c37c62e0.html","hash":"f4c17f7ddac256b2f94e2c45368e99fafa3b5149","modified":1661413055416},{"_id":"public/post/488e492e.html","hash":"ca438dd8c86edf0a29ef1e276a79ce22602b39f6","modified":1661413055416},{"_id":"public/post/0.html","hash":"a6ac71b78b528a102502f57636fa94996d8bfb5f","modified":1661413055417},{"_id":"public/post/59c352fb.html","hash":"f14ef7a08b2a99dbc7dde302fec664a2711d2471","modified":1661413055417},{"_id":"public/post/21b2441f.html","hash":"402955bce78266c5ed65a28b91cf57a86c23a5ff","modified":1661413055417},{"_id":"public/post/8280745d.html","hash":"e0cfa136c2be6e366fc73f85dbeb97b4662da107","modified":1661413055417},{"_id":"public/post/81a571d4.html","hash":"77a4f18c4ecf1350c4a92e73e5dd5ec4ec2ccb9a","modified":1661413055417},{"_id":"public/post/1021e908.html","hash":"1e546edb05984686cec652fc22f9bb5941f09199","modified":1661413055418},{"_id":"public/post/4d08fea4.html","hash":"60a4da695a0b448b19669840f250d31101837f57","modified":1661413055418},{"_id":"public/post/cd5ef747.html","hash":"126738152d8b5647bee7b487fb796a1752f347dc","modified":1661413055418},{"_id":"public/post/undefined.html","hash":"7cf4327a31a1e86930e330e1a1d71eb48008c0a3","modified":1661413055418},{"_id":"public/post/d5466a5b.html","hash":"16d757bfa3eb74cca2997a10115ce6d0eed70987","modified":1661413055418},{"_id":"public/post/724c121.html","hash":"5ebd65e4dbed8c7373dbf518412bcdb86b8b7734","modified":1661413055419},{"_id":"public/post/9a98d601.html","hash":"26e61457004db455aebf918eb9b024fe6ebbf19d","modified":1661413055419},{"_id":"public/categories/AnyProxy/index.html","hash":"d044b0dfdc46120ed02c9fd938422718ff282011","modified":1661413055419},{"_id":"public/categories/JavaScript/index.html","hash":"411f532eb452d39df95a0d57ca59b40c97a04c2d","modified":1661413055419},{"_id":"public/categories/JavaScript/page/2/index.html","hash":"752e46c7870625929daee890b1c9cbebf0fcdeb8","modified":1661413055419},{"_id":"public/categories/CSS/index.html","hash":"d34b2ca6adcbe3655ca1620f3d5ae8cc9e28ac58","modified":1661413055419},{"_id":"public/categories/AndroidStudio/index.html","hash":"bf6b1e8472aacb773219e45262439f8a743889b6","modified":1661413055420},{"_id":"public/categories/Vue/index.html","hash":"d7f4b6276c54c1b7ca89e52dbe1a529e92c4b194","modified":1661413055420},{"_id":"public/categories/Vue/page/2/index.html","hash":"936433b604af5ec8eff5ac12370ec5ea483b0b8a","modified":1661413055420},{"_id":"public/categories/Git/index.html","hash":"f517111a0291141ddf08829641ebc7375f2edbaa","modified":1661413055420},{"_id":"public/categories/Flutter/index.html","hash":"e28dcea676d903010f06887224ba888aff17b3a5","modified":1661413055420},{"_id":"public/categories/Mac/index.html","hash":"748b05acd47049630ba3e33c06a5ba15ca0ba000","modified":1661413055420},{"_id":"public/categories/Markdown/index.html","hash":"ed9c8481d95c4d74f82bc45bdab4e4818848d833","modified":1661413055421},{"_id":"public/categories/Moment/index.html","hash":"4cf83e1d8626888955a35d4c206712e0b83939c2","modified":1661413055421},{"_id":"public/categories/jQuer/index.html","hash":"5e25377475184171de4e8cffe488ccc37ce5a134","modified":1661413055422},{"_id":"public/categories/ThreeJs/index.html","hash":"e04caddc2d8b4606b67f855f1741e81844523a08","modified":1661413055422},{"_id":"public/categories/MySQL/index.html","hash":"c82e878f7281078964316f1785d5a7948bfc147d","modified":1661413055422},{"_id":"public/categories/Sublime/index.html","hash":"cf410bb0c940735a90e15e3dc2407e0350946bc9","modified":1661413055422},{"_id":"public/categories/JavaScript/Vue/index.html","hash":"102dfa326898f3fa489e915a0db5674f34b1a234","modified":1661413055423},{"_id":"public/categories/Webstorm/index.html","hash":"af474b3e360c819a33f4cea9aa3dc717bc61d881","modified":1661413055423},{"_id":"public/categories/jQuer/JS插件/index.html","hash":"1f8f337432f8fdb4f0398a6c8215dc610e44c81d","modified":1661413055423},{"_id":"public/categories/Node/index.html","hash":"5648b9682d407c57b08a7abe33219c30f10dc685","modified":1661413055423},{"_id":"public/categories/微信/index.html","hash":"39418c975fdf98ba1c3219f039fb2d207601261f","modified":1661413055424},{"_id":"public/categories/Docker/index.html","hash":"09f3b97983b24590b57ee1b248a2889de193e8d7","modified":1661413055424},{"_id":"public/categories/小程序/index.html","hash":"9641461c784250716ba48ad7854924275dc9e948","modified":1661413055424},{"_id":"public/categories/HTML/index.html","hash":"6604e3e6e5b0af5c75adfd40966fd971223ee2ed","modified":1661413055424},{"_id":"public/categories/微信/调试工具/index.html","hash":"0e9930dea54fa0451935c4c913d21233adebc23d","modified":1661413055424},{"_id":"public/categories/Dayjs/index.html","hash":"baddd7f07b1bd52c42237826ddd1dbebc48ddb8f","modified":1661413055424},{"_id":"public/categories/Blog/index.html","hash":"9d7fc311d3b17e4203e60e350de78d21570c24ce","modified":1661413055425},{"_id":"public/categories/JavaScript·/index.html","hash":"3649d340e9e17ff9fd520dd5d9cb613fc06302b4","modified":1661413055425},{"_id":"public/archives/index.html","hash":"c16ed00758657ece74bbbfc94ca7d138481abf85","modified":1661413055425},{"_id":"public/archives/page/2/index.html","hash":"0c8ba190ca9429e68d8f44c55c3c5794a03bc068","modified":1661413055425},{"_id":"public/archives/page/3/index.html","hash":"b931f6943846dd9e848a7518035af9cfebdd2aa3","modified":1661413055426},{"_id":"public/archives/page/4/index.html","hash":"c2ba3894b3df33319c2d3a11d8c4a730fa9b27b8","modified":1661413055426},{"_id":"public/archives/page/5/index.html","hash":"72fa63d64df92b53eb3f106d25bdf23958101651","modified":1661413055426},{"_id":"public/archives/page/6/index.html","hash":"cdee3be06a4814010b2663b6a8704540650b30d5","modified":1661413055426},{"_id":"public/archives/page/7/index.html","hash":"2c9ea9c50cda426bd459361e05b6c82935fd143b","modified":1661413055426},{"_id":"public/archives/page/8/index.html","hash":"662ba990237c6b78969a0a7ef029a9fc9cad2351","modified":1661413055426},{"_id":"public/archives/page/9/index.html","hash":"2ba08df972a84cb735e8a5cc3f019ca74f1ebd91","modified":1661413055427},{"_id":"public/archives/page/10/index.html","hash":"1c1a28375f8bbb0aa2371f1976dd7d754fc189c5","modified":1661413055427},{"_id":"public/archives/2018/index.html","hash":"f12ac078af9aad2006f03efb7ada8d1186acb279","modified":1661413055427},{"_id":"public/archives/2018/page/2/index.html","hash":"b48c9cadcfd6ea83ef7a8f4cc262160aa946f6a0","modified":1661413055427},{"_id":"public/archives/2018/page/3/index.html","hash":"ee355877aa4871f56817bdd18aab0f021a6c2cb4","modified":1661413055427},{"_id":"public/archives/2018/10/index.html","hash":"c4fbc9f5970e5f7b42c89705521ed7bcdf0aa959","modified":1661413055427},{"_id":"public/archives/2018/10/page/2/index.html","hash":"956c71967e5f641c235f7d55ec9e2f79ffd73dcf","modified":1661413055428},{"_id":"public/archives/2018/10/page/3/index.html","hash":"75d658e74c9112a85b1a450fc607574757935c6f","modified":1661413055428},{"_id":"public/archives/2018/11/index.html","hash":"ff402ba73ca79468d99e3d6cc5c63f19d276e0bd","modified":1661413055428},{"_id":"public/archives/2019/index.html","hash":"e2f90a61bb8f50baa1e9ee783b13334e8b74796c","modified":1661413055428},{"_id":"public/archives/2019/page/2/index.html","hash":"6a8ee4d9218d59995702d09762e669ccdafe0b77","modified":1661413055428},{"_id":"public/archives/2019/page/3/index.html","hash":"cfb8cc5bc08c2b0447c6fc9fdc151cb790879ac6","modified":1661413055429},{"_id":"public/archives/2019/page/4/index.html","hash":"fa47ea09cd8df41f87ee23bd8698610427661009","modified":1661413055429},{"_id":"public/archives/2019/page/5/index.html","hash":"ba8c1529171c5fdf3e60f7f48a72b20ee1fd5e31","modified":1661413055429},{"_id":"public/archives/2019/03/index.html","hash":"9d5f17f6f5f4a9e5f53c1207a720f79db8524818","modified":1661413055429},{"_id":"public/archives/2019/03/page/2/index.html","hash":"55cda04edae14bb2b27776ea5ce17b283e692d3f","modified":1661413055429},{"_id":"public/archives/2019/03/page/3/index.html","hash":"361f5bdc1eb31affba34f645981fe7ce25fbda0b","modified":1661413055430},{"_id":"public/archives/2019/03/page/4/index.html","hash":"5963894d2b6cdc1ea44297990b0c41619def64da","modified":1661413055430},{"_id":"public/archives/2019/04/index.html","hash":"702137165bb5a015a5cc830b57b517fae4e7956c","modified":1661413055430},{"_id":"public/archives/2019/09/index.html","hash":"b614595e1bbf387204c078ef274114c590c1c98b","modified":1661413055430},{"_id":"public/archives/2019/10/index.html","hash":"4eb9e519c72d19448ed2ebdee5b57731f6c721d8","modified":1661413055430},{"_id":"public/archives/2019/11/index.html","hash":"f664d56c9d847f76e8a8f865ab6ff7ed75e8eba1","modified":1661413055430},{"_id":"public/archives/2020/index.html","hash":"fc3deca127c713af8d59e966c1e78989d84d171d","modified":1661413055430},{"_id":"public/archives/2020/page/2/index.html","hash":"803da7f972ac75328538df27baee44ad0a4b630e","modified":1661413055430},{"_id":"public/archives/2020/page/3/index.html","hash":"9ae01583dfcd62a29a0e200733b8f14e38236b68","modified":1661413055431},{"_id":"public/archives/2020/01/index.html","hash":"b0d1c3768bdf519edbf50cf33f0a9730b0e25479","modified":1661413055431},{"_id":"public/archives/2020/02/index.html","hash":"1a9cd49bf1acd710f840b5e69e93cfcd4709b19a","modified":1661413055431},{"_id":"public/archives/2020/03/index.html","hash":"cffdf8c5e6f2923a8ad3ef9837e7290b3a132883","modified":1661413055431},{"_id":"public/archives/2020/04/index.html","hash":"fee4393b53d9303e5923cdb046cf80a0a990a28a","modified":1661413055431},{"_id":"public/archives/2020/12/index.html","hash":"bc72b2eb8185165de2209fa22b8e09e22a2925fc","modified":1661413055432},{"_id":"public/index.html","hash":"a475fb8c9c12e7ec0b9b3915b379818ea7fce6e2","modified":1661413055432},{"_id":"public/page/2/index.html","hash":"7c398c809687b5516ea5d814da0555f138dccff6","modified":1661413055433},{"_id":"public/page/3/index.html","hash":"efb886c63a4ae2d31a40bcff5971a2b56d6d34e1","modified":1661413055433},{"_id":"public/page/4/index.html","hash":"a488d1d66fc8a05231f8387f23a0c4787524c026","modified":1661413055434},{"_id":"public/page/5/index.html","hash":"95f87555fb3b9eacdb5b7f1f24aa02a11e37effe","modified":1661413055434},{"_id":"public/tags/AnyProxy/index.html","hash":"42a997a14b3aa790d6e52ecad858fc3beb95b9ea","modified":1661413055434},{"_id":"public/tags/Thor/index.html","hash":"a634a48b3610db0099479ba0db3df431a3ea94aa","modified":1661413055434},{"_id":"public/tags/抓包/index.html","hash":"48b3dd65a85bfd0ae483439bf9349b0be61b17d6","modified":1661413055435},{"_id":"public/tags/AutoJs/index.html","hash":"f1c5c9d11e4a984837f84793cf46ba925d9fcc11","modified":1661413055435},{"_id":"public/tags/CSS技巧/index.html","hash":"8a3fd660f19da591fed945acfadb3884b11fdff8","modified":1661413055435},{"_id":"public/tags/AndroidStudio/index.html","hash":"df1f2dda0a00b920dba250b1815fbee2dfd083f7","modified":1661413055435},{"_id":"public/tags/Vue/index.html","hash":"e08ee418b346750c4b12d82804b6b8aa8cefc809","modified":1661413055435},{"_id":"public/tags/Axios/index.html","hash":"928aa30d56c107c00a4519eff96a3c1f076d77de","modified":1661413055436},{"_id":"public/tags/JavaScript/index.html","hash":"6c712fd1d20f0b3a9526b4ff7a056aa3fda9bb5a","modified":1661413055436},{"_id":"public/tags/JavaScript/page/2/index.html","hash":"60e9f0dbeef87f99ba686798d1d631b09585edb9","modified":1661413055436},{"_id":"public/tags/Git/index.html","hash":"a17e79aa0bb30f2f35c902bf73a5981cdcd18989","modified":1661413055436},{"_id":"public/tags/Flutter/index.html","hash":"aee709d1a2618034841fb13976861bc75b84e24c","modified":1661413055436},{"_id":"public/tags/Mac/index.html","hash":"3c2cfca3027e5157b39fc98c20ef6e8d5ca54edb","modified":1661413055436},{"_id":"public/tags/Node/index.html","hash":"76c5371d6e3d360f4f54da6c591d3599e580fb9d","modified":1661413055436},{"_id":"public/tags/Markdown/index.html","hash":"efaf110d209469049f572cf6652fe0d875fd6b55","modified":1661413055436},{"_id":"public/tags/vue/index.html","hash":"84d930794ff90e2b5a6345b2b0632debe07be9ae","modified":1661413055437},{"_id":"public/tags/Moment/index.html","hash":"7fc5945168fd327b1636e7e7ac7d48fd29f2cbf8","modified":1661413055437},{"_id":"public/tags/JS插件/index.html","hash":"5eda3179d3ed5668f48eacf463889c8c3015fb2a","modified":1661413055437},{"_id":"public/tags/ThreeJs/index.html","hash":"998ad9b2608025d8a03983ecadaa2f1ee2700e86","modified":1661413055437},{"_id":"public/tags/Bootstrap/index.html","hash":"8cebac8fd1343abf4fa7375c08497b3004bdc5e9","modified":1661413055437},{"_id":"public/tags/CSS/index.html","hash":"3791214a81ccc657e48af8a95207d608508f399b","modified":1661413055437},{"_id":"public/tags/mockjs/index.html","hash":"d7e2effd545b678e539ec394f19647eeddc99996","modified":1661413055437},{"_id":"public/tags/axios/index.html","hash":"ee96aa01628cfee2f59eea9a440d3505e157a4a0","modified":1661413055438},{"_id":"public/tags/MySQL/index.html","hash":"d959b092b58842db9e4b80aa1e34055cdfedb6e7","modified":1661413055438},{"_id":"public/tags/js插件/index.html","hash":"450d58361dc56e513cac64fc360843e44ddd891c","modified":1661413055438},{"_id":"public/tags/Sublime/index.html","hash":"4eca137873f398f5dfe08ea8956812781f8bd926","modified":1661413055438},{"_id":"public/tags/vue-router/index.html","hash":"0d8944a1d1eea2f546ba469e6baf2dc3a7a31938","modified":1661413055439},{"_id":"public/tags/vue-cli3/index.html","hash":"21be55e84b70fc35c22244a0cb62a9a5c78611b1","modified":1661413055439},{"_id":"public/tags/Webstrom/index.html","hash":"f372017b9e403d89adbcf9a7486e092fc12cbb94","modified":1661413055440},{"_id":"public/tags/数据优化/index.html","hash":"6f1520d180d7fa5204f264b8aad33f41546aaba7","modified":1661413055440},{"_id":"public/tags/微信/index.html","hash":"73dc221e440ea78ef725424d5a1b9d89ee11bf74","modified":1661413055440},{"_id":"public/tags/调试/index.html","hash":"b8b81c2479b928ee639deca03c6483f6fb8bba37","modified":1661413055440},{"_id":"public/tags/Docker/index.html","hash":"1a89db088a9e24b3b732b38eb322a9e2e1d46c5e","modified":1661413055440},{"_id":"public/tags/小程序/index.html","hash":"e43f81958901b04fd37f6f1f816f537383cab600","modified":1661413055441},{"_id":"public/tags/小程序反编译/index.html","hash":"3c100232684f9eafb117c2df362f6f596abef0fd","modified":1661413055441},{"_id":"public/tags/正则表达式/index.html","hash":"b82fb6a1f3f9b0cab58ffc257850e8372164c9a6","modified":1661413055441},{"_id":"public/tags/HTML/index.html","hash":"054fe67eb299007fbc2c97bcdc2ff84b52036d07","modified":1661413055441},{"_id":"public/tags/Dayjs/index.html","hash":"9e8b4e2ea4ae64d2025666734bcf3e23bf7605dd","modified":1661413055441},{"_id":"public/tags/ag-grid/index.html","hash":"f597e614f242f5f65b945f8d731207af2c55259e","modified":1661413055442},{"_id":"public/tags/Blog/index.html","hash":"8377b32379f19b62b39e0cf85f377935ba36d953","modified":1661413055442},{"_id":"public/tags/Github/index.html","hash":"3c73b80556310bcab4c516515dac7cb1f475c815","modified":1661413055442},{"_id":"public/tags/jQuer/index.html","hash":"22e20b57f2e7566dd71171ee2b1c0d5727dd8655","modified":1661413055442},{"_id":"public/tags/jQuer动画/index.html","hash":"135051221368238768658af6b42e9d12d0a50706","modified":1661413055442},{"_id":"public/tags/Vue插件/index.html","hash":"61a93985ccf6b1d5742fb3e6bfa32a43f6a97603","modified":1661413055443},{"_id":"public/fonts/default-skin.b257fa.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1661413055451},{"_id":"public/fonts/iconfont.16acc2.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1661413055451},{"_id":"public/fonts/tooltip.4004ff.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1661413055451},{"_id":"public/fonts/iconfont.8c627f.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1661413055451},{"_id":"public/fonts/iconfont.b322fa.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1661413055451},{"_id":"public/fonts/iconfont.45d7ee.svg","hash":"75767c904d483d9b93469afb6b92bb6bdface639","modified":1661413055451},{"_id":"public/img/favicon.ico","hash":"273114705adbdf6dce00e3ae3c45c273ea139908","modified":1661413055452},{"_id":"public/img/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1661413055452},{"_id":"public/img/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1661413055452},{"_id":"public/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1661413055452},{"_id":"public/img/head.jpg","hash":"707b10407c969c04e8fa7126accff7037abbd1af","modified":1661413055452},{"_id":"public/slider.e37972.js","hash":"6dec4e220c89049037eebc44404abd8455d22ad7","modified":1661413055508},{"_id":"public/main.0cf68a.css","hash":"ddf6e2c6b953c2c59a3c271e6070010a4cc81cf9","modified":1661413055512},{"_id":"public/main.0cf68a.js","hash":"993fadeb5f6d296e9d997a49ee20dc97333ceab7","modified":1661413055513},{"_id":"public/mobile.992cbe.js","hash":"01b35e71e37aa2849664eb5daf26daede2278398","modified":1661413055520}],"Category":[{"name":"AnyProxy","_id":"cl78qfoo60003qic9r2z8vao8"},{"name":"JavaScript","_id":"cl78qfoob0008qic9y2tg734a"},{"name":"CSS","_id":"cl78qfooe000dqic9as91dhwl"},{"name":"AndroidStudio","_id":"cl78qfooj000iqic9z0t4e5z0"},{"name":"Vue","_id":"cl78qfoom000qqic98sg9tdfu"},{"name":"Git","_id":"cl78qfoop000yqic9xa7orxko"},{"name":"Flutter","_id":"cl78qfoos0014qic9yk60vcje"},{"name":"Mac","_id":"cl78qfoou001aqic9abrajuvd"},{"name":"Markdown","_id":"cl78qfoow001gqic95xkz321u"},{"name":"Moment","_id":"cl78qfop4001xqic92cq6w538"},{"name":"jQuer","_id":"cl78qfop70025qic96j278x2j"},{"name":"ThreeJs","_id":"cl78qfop9002cqic9o08doe8c"},{"name":"MySQL","_id":"cl78qfopb002jqic9zdqit9ph"},{"name":"Sublime","_id":"cl78qfopi002zqic94pg87g6o"},{"name":"Vue","parent":"cl78qfoob0008qic9y2tg734a","_id":"cl78qfopk0036qic9qjgqtdxh"},{"name":"Webstorm","_id":"cl78qfopm003cqic9n8kq30ps"},{"name":"JS插件","parent":"cl78qfop70025qic96j278x2j","_id":"cl78qfopp003iqic9bq2zw0c3"},{"name":"Node","_id":"cl78qfopq003qqic9si61v4me"},{"name":"微信","_id":"cl78qfops003yqic92ekyuamm"},{"name":"Docker","_id":"cl78qfopt0043qic9zjcipvg2"},{"name":"小程序","_id":"cl78qfopv0048qic90kp6dpwp"},{"name":"HTML","_id":"cl78qfopz004rqic9hhdu1985"},{"name":"调试工具","parent":"cl78qfops003yqic92ekyuamm","_id":"cl78qfoq1004yqic9kbpezz1t"},{"name":"Dayjs","_id":"cl78qfoqi006lqic9aj5eqiyy"},{"name":"Blog","_id":"cl78qfoqn006rqic9w44of7p3"},{"name":"JavaScript·","_id":"cl78qfoqo006xqic9jla5koxi"}],"Data":[],"Page":[{"title":"404","date":"2018-10-05T14:09:43.000Z","_content":"404","source":"404/index.md","raw":"---\ntitle: 404\ndate: 2018-10-05 22:09:43\n---\n404","updated":"2020-05-18T16:35:00.475Z","path":"404/index.html","comments":1,"layout":"page","_id":"cl78qfonx0000qic9id1zljwc","content":"<p>404</p>\n","site":{"data":{}},"excerpt":"","more":"<p>404</p>\n"}],"Post":[{"title":"AnyProxy抓取http、https请求与Thor IOS抓包工具","comments":1,"abbrlink":"adi7e5ef","date":"2019-10-08T08:02:06.000Z","_content":"\n### AnyProxy Web和移动抓包工具\n[文档](https://www.jianshu.com/p/a1c53fab95ac)\n\n[官方文档](https://github.com/alibaba/anyproxy/blob/master/docs/cn/src_doc.md)\n\n[anyproxy学习1-windows平台安装和抓手机app上https请求](https://www.cnblogs.com/yoyoketang/p/10867050.html)\n\n[anyproxy学习2-rule模块实现接口mock功能](https://www.cnblogs.com/yoyoketang/p/10873026.html)\n\n[anyproxy学习3-修改返回内容(beforeSendResponse)](https://www.cnblogs.com/yoyoketang/p/10878193.html)\n\n[anyproxy学习4-Linux（Centos）搭建anyproxy环境](https://www.cnblogs.com/yoyoketang/p/10879404.html)\n\n\n### Thor IOS抓包工具\n[使用教程](https://www.jianshu.com/p/bb8231f48a07)\n","source":"_posts/AnyProxy抓取http、https请求.md","raw":"---\ntitle: AnyProxy抓取http、https请求与Thor IOS抓包工具\ncomments: true\ncategories:\n  - AnyProxy\ntags:\n  - AnyProxy\n  - Thor\n  - 抓包\nabbrlink: adi7e5ef\ndate: 2019-10-08 16:02:06\n---\n\n### AnyProxy Web和移动抓包工具\n[文档](https://www.jianshu.com/p/a1c53fab95ac)\n\n[官方文档](https://github.com/alibaba/anyproxy/blob/master/docs/cn/src_doc.md)\n\n[anyproxy学习1-windows平台安装和抓手机app上https请求](https://www.cnblogs.com/yoyoketang/p/10867050.html)\n\n[anyproxy学习2-rule模块实现接口mock功能](https://www.cnblogs.com/yoyoketang/p/10873026.html)\n\n[anyproxy学习3-修改返回内容(beforeSendResponse)](https://www.cnblogs.com/yoyoketang/p/10878193.html)\n\n[anyproxy学习4-Linux（Centos）搭建anyproxy环境](https://www.cnblogs.com/yoyoketang/p/10879404.html)\n\n\n### Thor IOS抓包工具\n[使用教程](https://www.jianshu.com/p/bb8231f48a07)\n","slug":"AnyProxy抓取http、https请求","published":1,"updated":"2020-05-18T16:35:00.476Z","layout":"post","photos":[],"link":"","_id":"cl78qfonz0001qic9sev25okv","content":"<h3 id=\"AnyProxy-Web和移动抓包工具\"><a href=\"#AnyProxy-Web和移动抓包工具\" class=\"headerlink\" title=\"AnyProxy Web和移动抓包工具\"></a>AnyProxy Web和移动抓包工具</h3><p><a href=\"https://www.jianshu.com/p/a1c53fab95ac\" target=\"_blank\" rel=\"noopener\">文档</a></p>\n<p><a href=\"https://github.com/alibaba/anyproxy/blob/master/docs/cn/src_doc.md\" target=\"_blank\" rel=\"noopener\">官方文档</a></p>\n<p><a href=\"https://www.cnblogs.com/yoyoketang/p/10867050.html\" target=\"_blank\" rel=\"noopener\">anyproxy学习1-windows平台安装和抓手机app上https请求</a></p>\n<p><a href=\"https://www.cnblogs.com/yoyoketang/p/10873026.html\" target=\"_blank\" rel=\"noopener\">anyproxy学习2-rule模块实现接口mock功能</a></p>\n<p><a href=\"https://www.cnblogs.com/yoyoketang/p/10878193.html\" target=\"_blank\" rel=\"noopener\">anyproxy学习3-修改返回内容(beforeSendResponse)</a></p>\n<p><a href=\"https://www.cnblogs.com/yoyoketang/p/10879404.html\" target=\"_blank\" rel=\"noopener\">anyproxy学习4-Linux（Centos）搭建anyproxy环境</a></p>\n<h3 id=\"Thor-IOS抓包工具\"><a href=\"#Thor-IOS抓包工具\" class=\"headerlink\" title=\"Thor IOS抓包工具\"></a>Thor IOS抓包工具</h3><p><a href=\"https://www.jianshu.com/p/bb8231f48a07\" target=\"_blank\" rel=\"noopener\">使用教程</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"AnyProxy-Web和移动抓包工具\"><a href=\"#AnyProxy-Web和移动抓包工具\" class=\"headerlink\" title=\"AnyProxy Web和移动抓包工具\"></a>AnyProxy Web和移动抓包工具</h3><p><a href=\"https://www.jianshu.com/p/a1c53fab95ac\" target=\"_blank\" rel=\"noopener\">文档</a></p>\n<p><a href=\"https://github.com/alibaba/anyproxy/blob/master/docs/cn/src_doc.md\" target=\"_blank\" rel=\"noopener\">官方文档</a></p>\n<p><a href=\"https://www.cnblogs.com/yoyoketang/p/10867050.html\" target=\"_blank\" rel=\"noopener\">anyproxy学习1-windows平台安装和抓手机app上https请求</a></p>\n<p><a href=\"https://www.cnblogs.com/yoyoketang/p/10873026.html\" target=\"_blank\" rel=\"noopener\">anyproxy学习2-rule模块实现接口mock功能</a></p>\n<p><a href=\"https://www.cnblogs.com/yoyoketang/p/10878193.html\" target=\"_blank\" rel=\"noopener\">anyproxy学习3-修改返回内容(beforeSendResponse)</a></p>\n<p><a href=\"https://www.cnblogs.com/yoyoketang/p/10879404.html\" target=\"_blank\" rel=\"noopener\">anyproxy学习4-Linux（Centos）搭建anyproxy环境</a></p>\n<h3 id=\"Thor-IOS抓包工具\"><a href=\"#Thor-IOS抓包工具\" class=\"headerlink\" title=\"Thor IOS抓包工具\"></a>Thor IOS抓包工具</h3><p><a href=\"https://www.jianshu.com/p/bb8231f48a07\" target=\"_blank\" rel=\"noopener\">使用教程</a></p>\n"},{"title":"AutoJs学习","comments":1,"abbrlink":"adc7e5ef","date":"2019-03-24T08:02:06.000Z","_content":"\n### AutoJs学习\n\n> **不需要Root权限**的JavaScript自动化软件\n\n[官方文档](<https://hyb1996.github.io/AutoJs-Docs/#/>)\n[视频教学](<https://search.bilibili.com/all?keyword=autojs>)\n\n#### 常见单个控件\n\n```javascript\nTextView //文本控件\nImageView //图片控件\nCheckBox //勾选控件\nEditText //输入控件\nView //视图控件\n```\n\n- 有图片的不一定是图片控件\n\n#### 常见容器控件\n\n```javascript\nLinearLayout //线性布局容器\nRelativeLayout //相对布局容器\nFrameLayout //帧布局\nListView //列表容器\nRecyclerView //列表容器\nScrollView //滚动容器\n```\n\n- 容器与容器之间可以相互嵌套\n\n#### 单个控件的操作\n\n```javascript\nclick\t//点击\nlongClick //长按\nscroll... //滚动\nsetText\t//设置文本\nchildren //遍历\nfind\t//子控件查找\nparent\t// 父控件查找\n```\n\n#### 获取控件\n\n```javascript\nid(\"xxxx\").findOne(1000)\nclassName(\"xxxx\").findOne(1000).find(id(\"xxxx\"))\ntext(\"xxx\")\ndesc(\"xxx\")\n\n//完全匹配\nContains //包含\nStartWith //开头\nEndWith //结尾\nMatches //正则\n\n```\n\n#### 打印\n\n```javascript\nlog(\"xxxx\") //控制面板输出\ntoast(\"xxxx\") //手机屏幕上输出\n```\n\n#### 基础\n\n```javascript\nauto.waitFor()\nauto();// 自动打开无障碍服务\nlaunchApp(\"app名字\")\n```\n\n\n\n#### 问题\n\n1. 有时候手机重新连接vs code总是连接不上，应该是没有正常退出占用端口，最简单的是重启电脑","source":"_posts/AutoJs.md","raw":"---\ntitle: AutoJs学习\ncomments: true\ncategories:\n  - JavaScript\ntags:\n  - AutoJs\nabbrlink: adc7e5ef\ndate: 2019-03-24 16:02:06\n---\n\n### AutoJs学习\n\n> **不需要Root权限**的JavaScript自动化软件\n\n[官方文档](<https://hyb1996.github.io/AutoJs-Docs/#/>)\n[视频教学](<https://search.bilibili.com/all?keyword=autojs>)\n\n#### 常见单个控件\n\n```javascript\nTextView //文本控件\nImageView //图片控件\nCheckBox //勾选控件\nEditText //输入控件\nView //视图控件\n```\n\n- 有图片的不一定是图片控件\n\n#### 常见容器控件\n\n```javascript\nLinearLayout //线性布局容器\nRelativeLayout //相对布局容器\nFrameLayout //帧布局\nListView //列表容器\nRecyclerView //列表容器\nScrollView //滚动容器\n```\n\n- 容器与容器之间可以相互嵌套\n\n#### 单个控件的操作\n\n```javascript\nclick\t//点击\nlongClick //长按\nscroll... //滚动\nsetText\t//设置文本\nchildren //遍历\nfind\t//子控件查找\nparent\t// 父控件查找\n```\n\n#### 获取控件\n\n```javascript\nid(\"xxxx\").findOne(1000)\nclassName(\"xxxx\").findOne(1000).find(id(\"xxxx\"))\ntext(\"xxx\")\ndesc(\"xxx\")\n\n//完全匹配\nContains //包含\nStartWith //开头\nEndWith //结尾\nMatches //正则\n\n```\n\n#### 打印\n\n```javascript\nlog(\"xxxx\") //控制面板输出\ntoast(\"xxxx\") //手机屏幕上输出\n```\n\n#### 基础\n\n```javascript\nauto.waitFor()\nauto();// 自动打开无障碍服务\nlaunchApp(\"app名字\")\n```\n\n\n\n#### 问题\n\n1. 有时候手机重新连接vs code总是连接不上，应该是没有正常退出占用端口，最简单的是重启电脑","slug":"AutoJs","published":1,"updated":"2020-05-18T16:35:00.476Z","layout":"post","photos":[],"link":"","_id":"cl78qfoo40002qic9hecjfudy","content":"<h3 id=\"AutoJs学习\"><a href=\"#AutoJs学习\" class=\"headerlink\" title=\"AutoJs学习\"></a>AutoJs学习</h3><blockquote>\n<p><strong>不需要Root权限</strong>的JavaScript自动化软件</p>\n</blockquote>\n<p><a href=\"https://hyb1996.github.io/AutoJs-Docs/#/\" target=\"_blank\" rel=\"noopener\">官方文档</a><br><a href=\"https://search.bilibili.com/all?keyword=autojs\" target=\"_blank\" rel=\"noopener\">视频教学</a></p>\n<h4 id=\"常见单个控件\"><a href=\"#常见单个控件\" class=\"headerlink\" title=\"常见单个控件\"></a>常见单个控件</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">TextView <span class=\"comment\">//文本控件</span></span><br><span class=\"line\">ImageView <span class=\"comment\">//图片控件</span></span><br><span class=\"line\">CheckBox <span class=\"comment\">//勾选控件</span></span><br><span class=\"line\">EditText <span class=\"comment\">//输入控件</span></span><br><span class=\"line\">View <span class=\"comment\">//视图控件</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>有图片的不一定是图片控件</li>\n</ul>\n<h4 id=\"常见容器控件\"><a href=\"#常见容器控件\" class=\"headerlink\" title=\"常见容器控件\"></a>常见容器控件</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LinearLayout <span class=\"comment\">//线性布局容器</span></span><br><span class=\"line\">RelativeLayout <span class=\"comment\">//相对布局容器</span></span><br><span class=\"line\">FrameLayout <span class=\"comment\">//帧布局</span></span><br><span class=\"line\">ListView <span class=\"comment\">//列表容器</span></span><br><span class=\"line\">RecyclerView <span class=\"comment\">//列表容器</span></span><br><span class=\"line\">ScrollView <span class=\"comment\">//滚动容器</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>容器与容器之间可以相互嵌套</li>\n</ul>\n<h4 id=\"单个控件的操作\"><a href=\"#单个控件的操作\" class=\"headerlink\" title=\"单个控件的操作\"></a>单个控件的操作</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">click\t<span class=\"comment\">//点击</span></span><br><span class=\"line\">longClick <span class=\"comment\">//长按</span></span><br><span class=\"line\">scroll... <span class=\"comment\">//滚动</span></span><br><span class=\"line\">setText\t<span class=\"comment\">//设置文本</span></span><br><span class=\"line\">children <span class=\"comment\">//遍历</span></span><br><span class=\"line\">find\t<span class=\"comment\">//子控件查找</span></span><br><span class=\"line\">parent\t<span class=\"comment\">// 父控件查找</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"获取控件\"><a href=\"#获取控件\" class=\"headerlink\" title=\"获取控件\"></a>获取控件</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">id(<span class=\"string\">\"xxxx\"</span>).findOne(<span class=\"number\">1000</span>)</span><br><span class=\"line\">className(<span class=\"string\">\"xxxx\"</span>).findOne(<span class=\"number\">1000</span>).find(id(<span class=\"string\">\"xxxx\"</span>))</span><br><span class=\"line\">text(<span class=\"string\">\"xxx\"</span>)</span><br><span class=\"line\">desc(<span class=\"string\">\"xxx\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//完全匹配</span></span><br><span class=\"line\">Contains <span class=\"comment\">//包含</span></span><br><span class=\"line\">StartWith <span class=\"comment\">//开头</span></span><br><span class=\"line\">EndWith <span class=\"comment\">//结尾</span></span><br><span class=\"line\">Matches <span class=\"comment\">//正则</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"打印\"><a href=\"#打印\" class=\"headerlink\" title=\"打印\"></a>打印</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">log(<span class=\"string\">\"xxxx\"</span>) <span class=\"comment\">//控制面板输出</span></span><br><span class=\"line\">toast(<span class=\"string\">\"xxxx\"</span>) <span class=\"comment\">//手机屏幕上输出</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"基础\"><a href=\"#基础\" class=\"headerlink\" title=\"基础\"></a>基础</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">auto.waitFor()</span><br><span class=\"line\">auto();<span class=\"comment\">// 自动打开无障碍服务</span></span><br><span class=\"line\">launchApp(<span class=\"string\">\"app名字\"</span>)</span><br></pre></td></tr></table></figure>\n<h4 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h4><ol>\n<li>有时候手机重新连接vs code总是连接不上，应该是没有正常退出占用端口，最简单的是重启电脑</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"AutoJs学习\"><a href=\"#AutoJs学习\" class=\"headerlink\" title=\"AutoJs学习\"></a>AutoJs学习</h3><blockquote>\n<p><strong>不需要Root权限</strong>的JavaScript自动化软件</p>\n</blockquote>\n<p><a href=\"https://hyb1996.github.io/AutoJs-Docs/#/\" target=\"_blank\" rel=\"noopener\">官方文档</a><br><a href=\"https://search.bilibili.com/all?keyword=autojs\" target=\"_blank\" rel=\"noopener\">视频教学</a></p>\n<h4 id=\"常见单个控件\"><a href=\"#常见单个控件\" class=\"headerlink\" title=\"常见单个控件\"></a>常见单个控件</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">TextView <span class=\"comment\">//文本控件</span></span><br><span class=\"line\">ImageView <span class=\"comment\">//图片控件</span></span><br><span class=\"line\">CheckBox <span class=\"comment\">//勾选控件</span></span><br><span class=\"line\">EditText <span class=\"comment\">//输入控件</span></span><br><span class=\"line\">View <span class=\"comment\">//视图控件</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>有图片的不一定是图片控件</li>\n</ul>\n<h4 id=\"常见容器控件\"><a href=\"#常见容器控件\" class=\"headerlink\" title=\"常见容器控件\"></a>常见容器控件</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LinearLayout <span class=\"comment\">//线性布局容器</span></span><br><span class=\"line\">RelativeLayout <span class=\"comment\">//相对布局容器</span></span><br><span class=\"line\">FrameLayout <span class=\"comment\">//帧布局</span></span><br><span class=\"line\">ListView <span class=\"comment\">//列表容器</span></span><br><span class=\"line\">RecyclerView <span class=\"comment\">//列表容器</span></span><br><span class=\"line\">ScrollView <span class=\"comment\">//滚动容器</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>容器与容器之间可以相互嵌套</li>\n</ul>\n<h4 id=\"单个控件的操作\"><a href=\"#单个控件的操作\" class=\"headerlink\" title=\"单个控件的操作\"></a>单个控件的操作</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">click\t<span class=\"comment\">//点击</span></span><br><span class=\"line\">longClick <span class=\"comment\">//长按</span></span><br><span class=\"line\">scroll... <span class=\"comment\">//滚动</span></span><br><span class=\"line\">setText\t<span class=\"comment\">//设置文本</span></span><br><span class=\"line\">children <span class=\"comment\">//遍历</span></span><br><span class=\"line\">find\t<span class=\"comment\">//子控件查找</span></span><br><span class=\"line\">parent\t<span class=\"comment\">// 父控件查找</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"获取控件\"><a href=\"#获取控件\" class=\"headerlink\" title=\"获取控件\"></a>获取控件</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">id(<span class=\"string\">\"xxxx\"</span>).findOne(<span class=\"number\">1000</span>)</span><br><span class=\"line\">className(<span class=\"string\">\"xxxx\"</span>).findOne(<span class=\"number\">1000</span>).find(id(<span class=\"string\">\"xxxx\"</span>))</span><br><span class=\"line\">text(<span class=\"string\">\"xxx\"</span>)</span><br><span class=\"line\">desc(<span class=\"string\">\"xxx\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//完全匹配</span></span><br><span class=\"line\">Contains <span class=\"comment\">//包含</span></span><br><span class=\"line\">StartWith <span class=\"comment\">//开头</span></span><br><span class=\"line\">EndWith <span class=\"comment\">//结尾</span></span><br><span class=\"line\">Matches <span class=\"comment\">//正则</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"打印\"><a href=\"#打印\" class=\"headerlink\" title=\"打印\"></a>打印</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">log(<span class=\"string\">\"xxxx\"</span>) <span class=\"comment\">//控制面板输出</span></span><br><span class=\"line\">toast(<span class=\"string\">\"xxxx\"</span>) <span class=\"comment\">//手机屏幕上输出</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"基础\"><a href=\"#基础\" class=\"headerlink\" title=\"基础\"></a>基础</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">auto.waitFor()</span><br><span class=\"line\">auto();<span class=\"comment\">// 自动打开无障碍服务</span></span><br><span class=\"line\">launchApp(<span class=\"string\">\"app名字\"</span>)</span><br></pre></td></tr></table></figure>\n<h4 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h4><ol>\n<li>有时候手机重新连接vs code总是连接不上，应该是没有正常退出占用端口，最简单的是重启电脑</li>\n</ol>\n"},{"title":"CSS鼠标点击穿透Div","comments":1,"abbrlink":"cd5ef747","date":"2018-10-05T14:31:54.000Z","_content":"\n有些时候网页中用到了一些绝对定位的Div，因为需要事先这个Div是隐藏的，但是它所在的位置会遮挡住鼠标点击事件。这个时候可以用CCS3中的pointer-events属性来解决。\n\n---\n\n### 穿透该层\n\n`pointer-events:none;`\n\n\n\n### 恢复点击处理\n\n`pointer-events:auto;`\n\n根据情况来动态修改Div的pointer-events属性即可。\n\n\n\n### 例如用JQuery可以这样写：\n\n穿透该层\n\n`$('#dvTest').css('pointer-events', 'none'); `\n\n或者\n\n恢复点击处理\n\n`$('#dvTest').css('pointer-events', 'auto'); `","source":"_posts/CSS鼠标点击穿透Div.md","raw":"---\ntitle: CSS鼠标点击穿透Div\ncomments: true\ncategories:\n  - CSS\ntags:\n  - CSS技巧\nabbrlink: cd5ef747\ndate: 2018-10-05 22:31:54\n---\n\n有些时候网页中用到了一些绝对定位的Div，因为需要事先这个Div是隐藏的，但是它所在的位置会遮挡住鼠标点击事件。这个时候可以用CCS3中的pointer-events属性来解决。\n\n---\n\n### 穿透该层\n\n`pointer-events:none;`\n\n\n\n### 恢复点击处理\n\n`pointer-events:auto;`\n\n根据情况来动态修改Div的pointer-events属性即可。\n\n\n\n### 例如用JQuery可以这样写：\n\n穿透该层\n\n`$('#dvTest').css('pointer-events', 'none'); `\n\n或者\n\n恢复点击处理\n\n`$('#dvTest').css('pointer-events', 'auto'); `","slug":"CSS鼠标点击穿透Div","published":1,"updated":"2020-05-18T16:35:00.477Z","layout":"post","photos":[],"link":"","_id":"cl78qfoo80005qic9w9lua5ie","content":"<p>有些时候网页中用到了一些绝对定位的Div，因为需要事先这个Div是隐藏的，但是它所在的位置会遮挡住鼠标点击事件。这个时候可以用CCS3中的pointer-events属性来解决。</p>\n<hr>\n<h3 id=\"穿透该层\"><a href=\"#穿透该层\" class=\"headerlink\" title=\"穿透该层\"></a>穿透该层</h3><p><code>pointer-events:none;</code></p>\n<h3 id=\"恢复点击处理\"><a href=\"#恢复点击处理\" class=\"headerlink\" title=\"恢复点击处理\"></a>恢复点击处理</h3><p><code>pointer-events:auto;</code></p>\n<p>根据情况来动态修改Div的pointer-events属性即可。</p>\n<h3 id=\"例如用JQuery可以这样写：\"><a href=\"#例如用JQuery可以这样写：\" class=\"headerlink\" title=\"例如用JQuery可以这样写：\"></a>例如用JQuery可以这样写：</h3><p>穿透该层</p>\n<p><code>$(&#39;#dvTest&#39;).css(&#39;pointer-events&#39;, &#39;none&#39;);</code></p>\n<p>或者</p>\n<p>恢复点击处理</p>\n<p><code>$(&#39;#dvTest&#39;).css(&#39;pointer-events&#39;, &#39;auto&#39;);</code></p>\n","site":{"data":{}},"excerpt":"","more":"<p>有些时候网页中用到了一些绝对定位的Div，因为需要事先这个Div是隐藏的，但是它所在的位置会遮挡住鼠标点击事件。这个时候可以用CCS3中的pointer-events属性来解决。</p>\n<hr>\n<h3 id=\"穿透该层\"><a href=\"#穿透该层\" class=\"headerlink\" title=\"穿透该层\"></a>穿透该层</h3><p><code>pointer-events:none;</code></p>\n<h3 id=\"恢复点击处理\"><a href=\"#恢复点击处理\" class=\"headerlink\" title=\"恢复点击处理\"></a>恢复点击处理</h3><p><code>pointer-events:auto;</code></p>\n<p>根据情况来动态修改Div的pointer-events属性即可。</p>\n<h3 id=\"例如用JQuery可以这样写：\"><a href=\"#例如用JQuery可以这样写：\" class=\"headerlink\" title=\"例如用JQuery可以这样写：\"></a>例如用JQuery可以这样写：</h3><p>穿透该层</p>\n<p><code>$(&#39;#dvTest&#39;).css(&#39;pointer-events&#39;, &#39;none&#39;);</code></p>\n<p>或者</p>\n<p>恢复点击处理</p>\n<p><code>$(&#39;#dvTest&#39;).css(&#39;pointer-events&#39;, &#39;auto&#39;);</code></p>\n"},{"title":"Android Studio 常用快捷键","comments":1,"abbrlink":"add7e5ef","date":"2020-03-18T11:02:06.000Z","_content":"\n- 当前文件查找/替换\n\ncmd + F / cmd + R 使用cmd + G，sft + cmd + G，跳到下一个/上一个高亮的变量\n- 全局查找/替换\n\nsft + cmd + F / sft + cmd + R\n- 全局搜索类\n\ncmd + O\n- 快速生成getter／setter方法，构造方法，toString()方法等\n\ncmd + N\n- 行尾自动添加分号，if后面自动加“(){ }”\n\nsft + cmd + enter\n- 注释与取消注释，注释效果 //…\n\ncmd + /\n- 注释与取消注释，注释效果 /…/\n\nopt + cmd + /\n- 格式化代码\n\nopt + cmd + L\n\n- 清除无效包引用\nopt + ctr + O\n","source":"_posts/Android Studio 常用快捷键.md","raw":"---\ntitle: Android Studio 常用快捷键\ncomments: true\ncategories:\n  - AndroidStudio\ntags:\n  - AndroidStudio\nabbrlink: add7e5ef\ndate: 2020-03-18 19:02:06\n---\n\n- 当前文件查找/替换\n\ncmd + F / cmd + R 使用cmd + G，sft + cmd + G，跳到下一个/上一个高亮的变量\n- 全局查找/替换\n\nsft + cmd + F / sft + cmd + R\n- 全局搜索类\n\ncmd + O\n- 快速生成getter／setter方法，构造方法，toString()方法等\n\ncmd + N\n- 行尾自动添加分号，if后面自动加“(){ }”\n\nsft + cmd + enter\n- 注释与取消注释，注释效果 //…\n\ncmd + /\n- 注释与取消注释，注释效果 /…/\n\nopt + cmd + /\n- 格式化代码\n\nopt + cmd + L\n\n- 清除无效包引用\nopt + ctr + O\n","slug":"Android Studio 常用快捷键","published":1,"updated":"2020-05-18T16:35:00.476Z","layout":"post","photos":[],"link":"","_id":"cl78qfoo90006qic9dl352bge","content":"<ul>\n<li>当前文件查找/替换</li>\n</ul>\n<p>cmd + F / cmd + R 使用cmd + G，sft + cmd + G，跳到下一个/上一个高亮的变量</p>\n<ul>\n<li>全局查找/替换</li>\n</ul>\n<p>sft + cmd + F / sft + cmd + R</p>\n<ul>\n<li>全局搜索类</li>\n</ul>\n<p>cmd + O</p>\n<ul>\n<li>快速生成getter／setter方法，构造方法，toString()方法等</li>\n</ul>\n<p>cmd + N</p>\n<ul>\n<li>行尾自动添加分号，if后面自动加“(){ }”</li>\n</ul>\n<p>sft + cmd + enter</p>\n<ul>\n<li>注释与取消注释，注释效果 //…</li>\n</ul>\n<p>cmd + /</p>\n<ul>\n<li>注释与取消注释，注释效果 /…/</li>\n</ul>\n<p>opt + cmd + /</p>\n<ul>\n<li>格式化代码</li>\n</ul>\n<p>opt + cmd + L</p>\n<ul>\n<li>清除无效包引用<br>opt + ctr + O</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li>当前文件查找/替换</li>\n</ul>\n<p>cmd + F / cmd + R 使用cmd + G，sft + cmd + G，跳到下一个/上一个高亮的变量</p>\n<ul>\n<li>全局查找/替换</li>\n</ul>\n<p>sft + cmd + F / sft + cmd + R</p>\n<ul>\n<li>全局搜索类</li>\n</ul>\n<p>cmd + O</p>\n<ul>\n<li>快速生成getter／setter方法，构造方法，toString()方法等</li>\n</ul>\n<p>cmd + N</p>\n<ul>\n<li>行尾自动添加分号，if后面自动加“(){ }”</li>\n</ul>\n<p>sft + cmd + enter</p>\n<ul>\n<li>注释与取消注释，注释效果 //…</li>\n</ul>\n<p>cmd + /</p>\n<ul>\n<li>注释与取消注释，注释效果 /…/</li>\n</ul>\n<p>opt + cmd + /</p>\n<ul>\n<li>格式化代码</li>\n</ul>\n<p>opt + cmd + L</p>\n<ul>\n<li>清除无效包引用<br>opt + ctr + O</li>\n</ul>\n"},{"title":"Axios解决post请求数据错误的问题","comments":1,"abbrlink":"e4ed1a3d","date":"2019-03-24T13:05:15.000Z","_content":"\n在请求的过程中使用的json数据提交给后台，导致一直请求不到数据，最后请求设置为fromdata请求成功。\n\n先在文档引入`import qs from 'qs'`在axios.js配置文件里加上\n\n```javascript\n// 添加请求拦截器\n\nservice.interceptors.request.use(\n\n  (config) => {\n\n    if (config.method === 'post' || config.method === 'put') {\n\n      config.data = qs.stringify(config.data) //转换为表单模式\n\n      config.headers['Content-Type'] = 'application/x-www-form-urlencoded'\n\n    }\n\n    // 请求发送前进行处理\n\n    return config\n\n  },\n\n  (error) => {\n\n   // 请求错误处理\n\n   return Promise.reject(error)\n\n  }\n\n)\n\n```\n\n","source":"_posts/Axios解决post请求数据错误的问题.md","raw":"---\ntitle: Axios解决post请求数据错误的问题\ncomments: true\ncategories:\n  - Vue\ntags:\n  - Vue\n  - Axios\nabbrlink: e4ed1a3d\ndate: 2019-03-24 21:05:15\n---\n\n在请求的过程中使用的json数据提交给后台，导致一直请求不到数据，最后请求设置为fromdata请求成功。\n\n先在文档引入`import qs from 'qs'`在axios.js配置文件里加上\n\n```javascript\n// 添加请求拦截器\n\nservice.interceptors.request.use(\n\n  (config) => {\n\n    if (config.method === 'post' || config.method === 'put') {\n\n      config.data = qs.stringify(config.data) //转换为表单模式\n\n      config.headers['Content-Type'] = 'application/x-www-form-urlencoded'\n\n    }\n\n    // 请求发送前进行处理\n\n    return config\n\n  },\n\n  (error) => {\n\n   // 请求错误处理\n\n   return Promise.reject(error)\n\n  }\n\n)\n\n```\n\n","slug":"Axios解决post请求数据错误的问题","published":1,"updated":"2020-05-18T16:35:00.477Z","layout":"post","photos":[],"link":"","_id":"cl78qfoob0007qic9fqsn456r","content":"<p>在请求的过程中使用的json数据提交给后台，导致一直请求不到数据，最后请求设置为fromdata请求成功。</p>\n<p>先在文档引入<code>import qs from &#39;qs&#39;</code>在axios.js配置文件里加上</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 添加请求拦截器</span></span><br><span class=\"line\"></span><br><span class=\"line\">service.interceptors.request.use(</span><br><span class=\"line\"></span><br><span class=\"line\">  (config) =&gt; &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (config.method === <span class=\"string\">'post'</span> || config.method === <span class=\"string\">'put'</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">      config.data = qs.stringify(config.data) <span class=\"comment\">//转换为表单模式</span></span><br><span class=\"line\"></span><br><span class=\"line\">      config.headers[<span class=\"string\">'Content-Type'</span>] = <span class=\"string\">'application/x-www-form-urlencoded'</span></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 请求发送前进行处理</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> config</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">  (error) =&gt; &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">// 请求错误处理</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.reject(error)</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>在请求的过程中使用的json数据提交给后台，导致一直请求不到数据，最后请求设置为fromdata请求成功。</p>\n<p>先在文档引入<code>import qs from &#39;qs&#39;</code>在axios.js配置文件里加上</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 添加请求拦截器</span></span><br><span class=\"line\"></span><br><span class=\"line\">service.interceptors.request.use(</span><br><span class=\"line\"></span><br><span class=\"line\">  (config) =&gt; &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (config.method === <span class=\"string\">'post'</span> || config.method === <span class=\"string\">'put'</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">      config.data = qs.stringify(config.data) <span class=\"comment\">//转换为表单模式</span></span><br><span class=\"line\"></span><br><span class=\"line\">      config.headers[<span class=\"string\">'Content-Type'</span>] = <span class=\"string\">'application/x-www-form-urlencoded'</span></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 请求发送前进行处理</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> config</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">  (error) =&gt; &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">// 请求错误处理</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.reject(error)</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n"},{"title":"IOS端微信页面下拉刷新会触发滚动事件","comments":1,"abbrlink":"9b47786","date":"2019-03-21T15:02:08.000Z","_content":"在开发的过程中如果设置了滚动加载数据，在ios微信端下拉触发了滚动事件因此重复加载了一次数据。\n\n解决：判断当前文档的高度有没有大于浏览器视口高度\n\n```javascript\nvar token = true;\n    $(window).scroll(function(){\n        let AllHeight = $(document).height(); //整个文档高度\n        let  visual = $(window).height() // 浏览器的高度\n        let heightNow = $(window).scrollTop(); // 滚动卷去的高度\n        if((AllHeight - heightNow) < visual+150 && token && AllHeight > visual){\n            token = false;\n            getList();\n        }\n        return false;\n    });\n```\n\n","source":"_posts/IOS端微信页面下拉刷新会触发滚动事件.md","raw":"---\ntitle: IOS端微信页面下拉刷新会触发滚动事件\ncomments: true\ncategories:\n  - JavaScript\ntags:\n  - JavaScript\nabbrlink: 9b47786\ndate: 2019-03-21 23:02:08\n---\n在开发的过程中如果设置了滚动加载数据，在ios微信端下拉触发了滚动事件因此重复加载了一次数据。\n\n解决：判断当前文档的高度有没有大于浏览器视口高度\n\n```javascript\nvar token = true;\n    $(window).scroll(function(){\n        let AllHeight = $(document).height(); //整个文档高度\n        let  visual = $(window).height() // 浏览器的高度\n        let heightNow = $(window).scrollTop(); // 滚动卷去的高度\n        if((AllHeight - heightNow) < visual+150 && token && AllHeight > visual){\n            token = false;\n            getList();\n        }\n        return false;\n    });\n```\n\n","slug":"IOS端微信页面下拉刷新会触发滚动事件","published":1,"updated":"2020-05-18T16:35:00.478Z","layout":"post","photos":[],"link":"","_id":"cl78qfooc000aqic9uds2da2z","content":"<p>在开发的过程中如果设置了滚动加载数据，在ios微信端下拉触发了滚动事件因此重复加载了一次数据。</p>\n<p>解决：判断当前文档的高度有没有大于浏览器视口高度</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> token = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    $(<span class=\"built_in\">window</span>).scroll(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> AllHeight = $(<span class=\"built_in\">document</span>).height(); <span class=\"comment\">//整个文档高度</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span>  visual = $(<span class=\"built_in\">window</span>).height() <span class=\"comment\">// 浏览器的高度</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> heightNow = $(<span class=\"built_in\">window</span>).scrollTop(); <span class=\"comment\">// 滚动卷去的高度</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>((AllHeight - heightNow) &lt; visual+<span class=\"number\">150</span> &amp;&amp; token &amp;&amp; AllHeight &gt; visual)&#123;</span><br><span class=\"line\">            token = <span class=\"literal\">false</span>;</span><br><span class=\"line\">            getList();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;);</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>在开发的过程中如果设置了滚动加载数据，在ios微信端下拉触发了滚动事件因此重复加载了一次数据。</p>\n<p>解决：判断当前文档的高度有没有大于浏览器视口高度</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> token = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    $(<span class=\"built_in\">window</span>).scroll(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> AllHeight = $(<span class=\"built_in\">document</span>).height(); <span class=\"comment\">//整个文档高度</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span>  visual = $(<span class=\"built_in\">window</span>).height() <span class=\"comment\">// 浏览器的高度</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> heightNow = $(<span class=\"built_in\">window</span>).scrollTop(); <span class=\"comment\">// 滚动卷去的高度</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>((AllHeight - heightNow) &lt; visual+<span class=\"number\">150</span> &amp;&amp; token &amp;&amp; AllHeight &gt; visual)&#123;</span><br><span class=\"line\">            token = <span class=\"literal\">false</span>;</span><br><span class=\"line\">            getList();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;);</span><br></pre></td></tr></table></figure>\n"},{"title":"Git拉取远程最新代码，并与当前分支合并","comments":1,"abbrlink":"e235697f","date":"2019-04-03T13:30:41.000Z","_content":"\n在团队开发中，git的使用已经很常见了，在多人协同开发中，我们经常会遇到这样的问题：A在本地开发完成后，将代码推送到远程，这时候B的本地代码的版本就低于远程代码的版本，这时候B该如何从远程拉取最新的代码，并与自己的本地代码合并呢？ 具体步骤如下：\n\n#### 查看远程仓库:\n\n```\ngit remote -v\n```\n\n#### 看到远程有一个叫origin的仓库，我们可以使用如下命令从origin远程仓库获取最新版本的代码\n\n```\ngit fetch origin master:temp\n```\n\n- 上面代码的意思是：从远程的origin仓库的master分支下载到本地master并新建一个temp分支\n\n- 注意：不建议使用pull拉取最新代码，因为pull拉取下来后会自动和本地分支合并\n\n  获取最新版本  有两种  拉取 和 获取 pull 和 fetch\n\n> git  pull     从远程拉取最新版本 到本地  自动合并 merge `git pull origin master`\n>\n> git  fetch   从远程获取最新版本 到本地   不会自动合并 merge    `git fetch  origin master`       `git log  -p master ../origin/master `    `git merge orgin/master`\n>\n> 实际使用中  使用git fetch 更安全    在merge之前可以看清楚 更新情况  再决定是否合并\n\n#### 查看temp分支与本地原有分支的不同\n\n```\ngit diff temp\n```\n\n#### 将temp分支和本地的master分支合并\n\n```\ngit merge temp\n```\n\n#### 删除temp分支\n\n```\ngit branch -D temp\n```\n\n","source":"_posts/Git拉取远程最新代码，并与当前分支合并.md","raw":"---\ntitle: Git拉取远程最新代码，并与当前分支合并\ncomments: true\ncategories:\n  - Git\ntags:\n  - Git\nabbrlink: e235697f\ndate: 2019-04-03 21:30:41\n---\n\n在团队开发中，git的使用已经很常见了，在多人协同开发中，我们经常会遇到这样的问题：A在本地开发完成后，将代码推送到远程，这时候B的本地代码的版本就低于远程代码的版本，这时候B该如何从远程拉取最新的代码，并与自己的本地代码合并呢？ 具体步骤如下：\n\n#### 查看远程仓库:\n\n```\ngit remote -v\n```\n\n#### 看到远程有一个叫origin的仓库，我们可以使用如下命令从origin远程仓库获取最新版本的代码\n\n```\ngit fetch origin master:temp\n```\n\n- 上面代码的意思是：从远程的origin仓库的master分支下载到本地master并新建一个temp分支\n\n- 注意：不建议使用pull拉取最新代码，因为pull拉取下来后会自动和本地分支合并\n\n  获取最新版本  有两种  拉取 和 获取 pull 和 fetch\n\n> git  pull     从远程拉取最新版本 到本地  自动合并 merge `git pull origin master`\n>\n> git  fetch   从远程获取最新版本 到本地   不会自动合并 merge    `git fetch  origin master`       `git log  -p master ../origin/master `    `git merge orgin/master`\n>\n> 实际使用中  使用git fetch 更安全    在merge之前可以看清楚 更新情况  再决定是否合并\n\n#### 查看temp分支与本地原有分支的不同\n\n```\ngit diff temp\n```\n\n#### 将temp分支和本地的master分支合并\n\n```\ngit merge temp\n```\n\n#### 删除temp分支\n\n```\ngit branch -D temp\n```\n\n","slug":"Git拉取远程最新代码，并与当前分支合并","published":1,"updated":"2020-05-18T16:35:00.478Z","layout":"post","photos":[],"link":"","_id":"cl78qfood000bqic9ehrsno38","content":"<p>在团队开发中，git的使用已经很常见了，在多人协同开发中，我们经常会遇到这样的问题：A在本地开发完成后，将代码推送到远程，这时候B的本地代码的版本就低于远程代码的版本，这时候B该如何从远程拉取最新的代码，并与自己的本地代码合并呢？ 具体步骤如下：</p>\n<h4 id=\"查看远程仓库\"><a href=\"#查看远程仓库\" class=\"headerlink\" title=\"查看远程仓库:\"></a>查看远程仓库:</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote -v</span><br></pre></td></tr></table></figure>\n<h4 id=\"看到远程有一个叫origin的仓库，我们可以使用如下命令从origin远程仓库获取最新版本的代码\"><a href=\"#看到远程有一个叫origin的仓库，我们可以使用如下命令从origin远程仓库获取最新版本的代码\" class=\"headerlink\" title=\"看到远程有一个叫origin的仓库，我们可以使用如下命令从origin远程仓库获取最新版本的代码\"></a>看到远程有一个叫origin的仓库，我们可以使用如下命令从origin远程仓库获取最新版本的代码</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git fetch origin master:temp</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>上面代码的意思是：从远程的origin仓库的master分支下载到本地master并新建一个temp分支</p>\n</li>\n<li><p>注意：不建议使用pull拉取最新代码，因为pull拉取下来后会自动和本地分支合并</p>\n<p>获取最新版本  有两种  拉取 和 获取 pull 和 fetch</p>\n</li>\n</ul>\n<blockquote>\n<p>git  pull     从远程拉取最新版本 到本地  自动合并 merge <code>git pull origin master</code></p>\n<p>git  fetch   从远程获取最新版本 到本地   不会自动合并 merge    <code>git fetch  origin master</code>       <code>git log  -p master ../origin/master</code>    <code>git merge orgin/master</code></p>\n<p>实际使用中  使用git fetch 更安全    在merge之前可以看清楚 更新情况  再决定是否合并</p>\n</blockquote>\n<h4 id=\"查看temp分支与本地原有分支的不同\"><a href=\"#查看temp分支与本地原有分支的不同\" class=\"headerlink\" title=\"查看temp分支与本地原有分支的不同\"></a>查看temp分支与本地原有分支的不同</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git diff temp</span><br></pre></td></tr></table></figure>\n<h4 id=\"将temp分支和本地的master分支合并\"><a href=\"#将temp分支和本地的master分支合并\" class=\"headerlink\" title=\"将temp分支和本地的master分支合并\"></a>将temp分支和本地的master分支合并</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git merge temp</span><br></pre></td></tr></table></figure>\n<h4 id=\"删除temp分支\"><a href=\"#删除temp分支\" class=\"headerlink\" title=\"删除temp分支\"></a>删除temp分支</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch -D temp</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>在团队开发中，git的使用已经很常见了，在多人协同开发中，我们经常会遇到这样的问题：A在本地开发完成后，将代码推送到远程，这时候B的本地代码的版本就低于远程代码的版本，这时候B该如何从远程拉取最新的代码，并与自己的本地代码合并呢？ 具体步骤如下：</p>\n<h4 id=\"查看远程仓库\"><a href=\"#查看远程仓库\" class=\"headerlink\" title=\"查看远程仓库:\"></a>查看远程仓库:</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote -v</span><br></pre></td></tr></table></figure>\n<h4 id=\"看到远程有一个叫origin的仓库，我们可以使用如下命令从origin远程仓库获取最新版本的代码\"><a href=\"#看到远程有一个叫origin的仓库，我们可以使用如下命令从origin远程仓库获取最新版本的代码\" class=\"headerlink\" title=\"看到远程有一个叫origin的仓库，我们可以使用如下命令从origin远程仓库获取最新版本的代码\"></a>看到远程有一个叫origin的仓库，我们可以使用如下命令从origin远程仓库获取最新版本的代码</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git fetch origin master:temp</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>上面代码的意思是：从远程的origin仓库的master分支下载到本地master并新建一个temp分支</p>\n</li>\n<li><p>注意：不建议使用pull拉取最新代码，因为pull拉取下来后会自动和本地分支合并</p>\n<p>获取最新版本  有两种  拉取 和 获取 pull 和 fetch</p>\n</li>\n</ul>\n<blockquote>\n<p>git  pull     从远程拉取最新版本 到本地  自动合并 merge <code>git pull origin master</code></p>\n<p>git  fetch   从远程获取最新版本 到本地   不会自动合并 merge    <code>git fetch  origin master</code>       <code>git log  -p master ../origin/master</code>    <code>git merge orgin/master</code></p>\n<p>实际使用中  使用git fetch 更安全    在merge之前可以看清楚 更新情况  再决定是否合并</p>\n</blockquote>\n<h4 id=\"查看temp分支与本地原有分支的不同\"><a href=\"#查看temp分支与本地原有分支的不同\" class=\"headerlink\" title=\"查看temp分支与本地原有分支的不同\"></a>查看temp分支与本地原有分支的不同</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git diff temp</span><br></pre></td></tr></table></figure>\n<h4 id=\"将temp分支和本地的master分支合并\"><a href=\"#将temp分支和本地的master分支合并\" class=\"headerlink\" title=\"将temp分支和本地的master分支合并\"></a>将temp分支和本地的master分支合并</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git merge temp</span><br></pre></td></tr></table></figure>\n<h4 id=\"删除temp分支\"><a href=\"#删除temp分支\" class=\"headerlink\" title=\"删除temp分支\"></a>删除temp分支</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch -D temp</span><br></pre></td></tr></table></figure>\n"},{"title":"Mac 下配置Flutter","comments":1,"abbrlink":"adh7e5ef","date":"2020-04-16T11:02:06.000Z","_content":"\n\n> https://segmentfault.com/a/1190000014845833\n\nflutter中文网https://flutterchina.club\n\n## 系统环境要求\nmacOS (64-bit)\n硬盘空间: 700 MB (不包含android studio等编辑器工具).\n命令行工具:bash, mkdir, rm, git, curl, unzip, which,brew需要保证上述命令在命令行下能使用，\n\n如果没有安装brew，那么需要先安装：参考：https://segmentfault.com/a/1190000013317511\n## 下载flutter\n推荐去官网下载，速度并不慢，网址：\nhttps://flutter.io/setup-macos/\n## 设置flutter镜像\n运行:\n```\nvim ~/.bash_profile\n```\n增加\n```\nexport PUB_HOSTED_URL=https://pub.flutter-io.cn\nexport FLUTTER_STORAGE_BASE_URL=https://storage.flutter-io.cn\n```\n然后运行\n```\nsource ~/.bash_profile\n```\n## 配置环境变量\n先把刚才下载的解压缩，笔者选择使用的目录是Desktop下的flutter文件夹\n![image](http://note.youdao.com/yws/res/255/WEBRESOURCE1e5a3a8733ba0ec9901abd6ee1eef564)\n配置环境变量,这里笔者使用命令行：\n```\nvim ~/.bash_profile\n```\n将flutter工具添加到您的路径：\n```\nexport PATH=\"$PATH:/Users/safran/Desktop/flutter/bin\"\n```\n这个时候应该能运行flutter命令了，我们运行命令行：\n```\nflutter -h\n```\n## 检查环境\n运行以下命令以查看是否需要安装任何依赖项来完成设置（对于详细输出，添加-v标志）：\n```\nflutter doctor\n```\n![image](http://note.youdao.com/yws/res/270/WEBRESOURCEf2f8e0838e159a29d02fc0af172c23b1)\n按照检测结果的说明，如果有[!] ✗ 标志，表示本行检测不通过，需要做一些设置或者安装一些软件。\n![image](http://note.youdao.com/yws/res/274/WEBRESOURCE0b98956a584dcc9460cce0097a821131)\n如果android studio没有安装，那么可以先装下，并使用android studio下载最新的android sdk。android studio下载地址:http://www.android-studio.org/\n下载完打开\n如果有安装，那么很有可能看到：\n```\n[!]Android toolchain - develop for Android devices (Android SDK version 29.0.0)\n```\n```\n! Some Android licenses not accepted.  To resolve this, run: flutter doctor --android-licens\n\n```\n需要运行\n```\nflutter doctor --android-licenses\n```\n一路输入y就行\n","source":"_posts/Mac 下配置Flutter.md","raw":"---\ntitle: Mac 下配置Flutter\ncomments: true\ncategories:\n  - Flutter\ntags:\n  - Flutter\nabbrlink: adh7e5ef\ndate: 2020-04-16 19:02:06\n---\n\n\n> https://segmentfault.com/a/1190000014845833\n\nflutter中文网https://flutterchina.club\n\n## 系统环境要求\nmacOS (64-bit)\n硬盘空间: 700 MB (不包含android studio等编辑器工具).\n命令行工具:bash, mkdir, rm, git, curl, unzip, which,brew需要保证上述命令在命令行下能使用，\n\n如果没有安装brew，那么需要先安装：参考：https://segmentfault.com/a/1190000013317511\n## 下载flutter\n推荐去官网下载，速度并不慢，网址：\nhttps://flutter.io/setup-macos/\n## 设置flutter镜像\n运行:\n```\nvim ~/.bash_profile\n```\n增加\n```\nexport PUB_HOSTED_URL=https://pub.flutter-io.cn\nexport FLUTTER_STORAGE_BASE_URL=https://storage.flutter-io.cn\n```\n然后运行\n```\nsource ~/.bash_profile\n```\n## 配置环境变量\n先把刚才下载的解压缩，笔者选择使用的目录是Desktop下的flutter文件夹\n![image](http://note.youdao.com/yws/res/255/WEBRESOURCE1e5a3a8733ba0ec9901abd6ee1eef564)\n配置环境变量,这里笔者使用命令行：\n```\nvim ~/.bash_profile\n```\n将flutter工具添加到您的路径：\n```\nexport PATH=\"$PATH:/Users/safran/Desktop/flutter/bin\"\n```\n这个时候应该能运行flutter命令了，我们运行命令行：\n```\nflutter -h\n```\n## 检查环境\n运行以下命令以查看是否需要安装任何依赖项来完成设置（对于详细输出，添加-v标志）：\n```\nflutter doctor\n```\n![image](http://note.youdao.com/yws/res/270/WEBRESOURCEf2f8e0838e159a29d02fc0af172c23b1)\n按照检测结果的说明，如果有[!] ✗ 标志，表示本行检测不通过，需要做一些设置或者安装一些软件。\n![image](http://note.youdao.com/yws/res/274/WEBRESOURCE0b98956a584dcc9460cce0097a821131)\n如果android studio没有安装，那么可以先装下，并使用android studio下载最新的android sdk。android studio下载地址:http://www.android-studio.org/\n下载完打开\n如果有安装，那么很有可能看到：\n```\n[!]Android toolchain - develop for Android devices (Android SDK version 29.0.0)\n```\n```\n! Some Android licenses not accepted.  To resolve this, run: flutter doctor --android-licens\n\n```\n需要运行\n```\nflutter doctor --android-licenses\n```\n一路输入y就行\n","slug":"Mac 下配置Flutter","published":1,"updated":"2020-05-18T16:35:00.478Z","layout":"post","photos":[],"link":"","_id":"cl78qfoof000fqic92d3lcly1","content":"<blockquote>\n<p><a href=\"https://segmentfault.com/a/1190000014845833\" target=\"_blank\" rel=\"noopener\">https://segmentfault.com/a/1190000014845833</a></p>\n</blockquote>\n<p>flutter中文网<a href=\"https://flutterchina.club\" target=\"_blank\" rel=\"noopener\">https://flutterchina.club</a></p>\n<h2 id=\"系统环境要求\"><a href=\"#系统环境要求\" class=\"headerlink\" title=\"系统环境要求\"></a>系统环境要求</h2><p>macOS (64-bit)<br>硬盘空间: 700 MB (不包含android studio等编辑器工具).<br>命令行工具:bash, mkdir, rm, git, curl, unzip, which,brew需要保证上述命令在命令行下能使用，</p>\n<p>如果没有安装brew，那么需要先安装：参考：<a href=\"https://segmentfault.com/a/1190000013317511\" target=\"_blank\" rel=\"noopener\">https://segmentfault.com/a/1190000013317511</a></p>\n<h2 id=\"下载flutter\"><a href=\"#下载flutter\" class=\"headerlink\" title=\"下载flutter\"></a>下载flutter</h2><p>推荐去官网下载，速度并不慢，网址：<br><a href=\"https://flutter.io/setup-macos/\" target=\"_blank\" rel=\"noopener\">https://flutter.io/setup-macos/</a></p>\n<h2 id=\"设置flutter镜像\"><a href=\"#设置flutter镜像\" class=\"headerlink\" title=\"设置flutter镜像\"></a>设置flutter镜像</h2><p>运行:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim ~/.bash_profile</span><br></pre></td></tr></table></figure></p>\n<p>增加<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export PUB_HOSTED_URL=https://pub.flutter-io.cn</span><br><span class=\"line\">export FLUTTER_STORAGE_BASE_URL=https://storage.flutter-io.cn</span><br></pre></td></tr></table></figure></p>\n<p>然后运行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source ~/.bash_profile</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"配置环境变量\"><a href=\"#配置环境变量\" class=\"headerlink\" title=\"配置环境变量\"></a>配置环境变量</h2><p>先把刚才下载的解压缩，笔者选择使用的目录是Desktop下的flutter文件夹<br><img src=\"http://note.youdao.com/yws/res/255/WEBRESOURCE1e5a3a8733ba0ec9901abd6ee1eef564\" alt=\"image\"><br>配置环境变量,这里笔者使用命令行：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim ~/.bash_profile</span><br></pre></td></tr></table></figure></p>\n<p>将flutter工具添加到您的路径：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export PATH=&quot;$PATH:/Users/safran/Desktop/flutter/bin&quot;</span><br></pre></td></tr></table></figure></p>\n<p>这个时候应该能运行flutter命令了，我们运行命令行：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flutter -h</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"检查环境\"><a href=\"#检查环境\" class=\"headerlink\" title=\"检查环境\"></a>检查环境</h2><p>运行以下命令以查看是否需要安装任何依赖项来完成设置（对于详细输出，添加-v标志）：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flutter doctor</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"http://note.youdao.com/yws/res/270/WEBRESOURCEf2f8e0838e159a29d02fc0af172c23b1\" alt=\"image\"><br>按照检测结果的说明，如果有[!] ✗ 标志，表示本行检测不通过，需要做一些设置或者安装一些软件。<br><img src=\"http://note.youdao.com/yws/res/274/WEBRESOURCE0b98956a584dcc9460cce0097a821131\" alt=\"image\"><br>如果android studio没有安装，那么可以先装下，并使用android studio下载最新的android sdk。android studio下载地址:<a href=\"http://www.android-studio.org/\" target=\"_blank\" rel=\"noopener\">http://www.android-studio.org/</a><br>下载完打开<br>如果有安装，那么很有可能看到：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[!]Android toolchain - develop for Android devices (Android SDK version 29.0.0)</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">! Some Android licenses not accepted.  To resolve this, run: flutter doctor --android-licens</span><br></pre></td></tr></table></figure>\n<p>需要运行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flutter doctor --android-licenses</span><br></pre></td></tr></table></figure></p>\n<p>一路输入y就行</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p><a href=\"https://segmentfault.com/a/1190000014845833\" target=\"_blank\" rel=\"noopener\">https://segmentfault.com/a/1190000014845833</a></p>\n</blockquote>\n<p>flutter中文网<a href=\"https://flutterchina.club\" target=\"_blank\" rel=\"noopener\">https://flutterchina.club</a></p>\n<h2 id=\"系统环境要求\"><a href=\"#系统环境要求\" class=\"headerlink\" title=\"系统环境要求\"></a>系统环境要求</h2><p>macOS (64-bit)<br>硬盘空间: 700 MB (不包含android studio等编辑器工具).<br>命令行工具:bash, mkdir, rm, git, curl, unzip, which,brew需要保证上述命令在命令行下能使用，</p>\n<p>如果没有安装brew，那么需要先安装：参考：<a href=\"https://segmentfault.com/a/1190000013317511\" target=\"_blank\" rel=\"noopener\">https://segmentfault.com/a/1190000013317511</a></p>\n<h2 id=\"下载flutter\"><a href=\"#下载flutter\" class=\"headerlink\" title=\"下载flutter\"></a>下载flutter</h2><p>推荐去官网下载，速度并不慢，网址：<br><a href=\"https://flutter.io/setup-macos/\" target=\"_blank\" rel=\"noopener\">https://flutter.io/setup-macos/</a></p>\n<h2 id=\"设置flutter镜像\"><a href=\"#设置flutter镜像\" class=\"headerlink\" title=\"设置flutter镜像\"></a>设置flutter镜像</h2><p>运行:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim ~/.bash_profile</span><br></pre></td></tr></table></figure></p>\n<p>增加<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export PUB_HOSTED_URL=https://pub.flutter-io.cn</span><br><span class=\"line\">export FLUTTER_STORAGE_BASE_URL=https://storage.flutter-io.cn</span><br></pre></td></tr></table></figure></p>\n<p>然后运行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source ~/.bash_profile</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"配置环境变量\"><a href=\"#配置环境变量\" class=\"headerlink\" title=\"配置环境变量\"></a>配置环境变量</h2><p>先把刚才下载的解压缩，笔者选择使用的目录是Desktop下的flutter文件夹<br><img src=\"http://note.youdao.com/yws/res/255/WEBRESOURCE1e5a3a8733ba0ec9901abd6ee1eef564\" alt=\"image\"><br>配置环境变量,这里笔者使用命令行：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim ~/.bash_profile</span><br></pre></td></tr></table></figure></p>\n<p>将flutter工具添加到您的路径：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export PATH=&quot;$PATH:/Users/safran/Desktop/flutter/bin&quot;</span><br></pre></td></tr></table></figure></p>\n<p>这个时候应该能运行flutter命令了，我们运行命令行：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flutter -h</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"检查环境\"><a href=\"#检查环境\" class=\"headerlink\" title=\"检查环境\"></a>检查环境</h2><p>运行以下命令以查看是否需要安装任何依赖项来完成设置（对于详细输出，添加-v标志）：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flutter doctor</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"http://note.youdao.com/yws/res/270/WEBRESOURCEf2f8e0838e159a29d02fc0af172c23b1\" alt=\"image\"><br>按照检测结果的说明，如果有[!] ✗ 标志，表示本行检测不通过，需要做一些设置或者安装一些软件。<br><img src=\"http://note.youdao.com/yws/res/274/WEBRESOURCE0b98956a584dcc9460cce0097a821131\" alt=\"image\"><br>如果android studio没有安装，那么可以先装下，并使用android studio下载最新的android sdk。android studio下载地址:<a href=\"http://www.android-studio.org/\" target=\"_blank\" rel=\"noopener\">http://www.android-studio.org/</a><br>下载完打开<br>如果有安装，那么很有可能看到：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[!]Android toolchain - develop for Android devices (Android SDK version 29.0.0)</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">! Some Android licenses not accepted.  To resolve this, run: flutter doctor --android-licens</span><br></pre></td></tr></table></figure>\n<p>需要运行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flutter doctor --android-licenses</span><br></pre></td></tr></table></figure></p>\n<p>一路输入y就行</p>\n"},{"title":"Mac 管理Node版本工-n","comments":1,"abbrlink":"b72i3fe5","date":"2019-09-21T14:55:37.000Z","_content":"\n### 安装\n\n`npm install -g n`\n\n### 安装/激活版本\n\n```\n只需执行n <version>即可安装node。如果<version>已经安装（通过n），n将激活该版本。\n例如：\n    $ n 8.16.2\n    $ n 12.12.0\n```\n### 选择\n\n> n单独执行是查看当前安装的版本，使用向上和向下箭头键导航并按enter或右箭头键进行选择，使用command+ C（控制+ C）退出选择屏幕。\n\n```\n$n\n    node/8.16.2\n  ο node/12.12.0\n    node/14.2.0\n```\n\n### 使用或安装最新的官方发布：\n\n```shell\n$n latest\n```\n\n### 使用或安装稳定的官方发布：\n\n```\n$n stable\n```\n\n### 使用或安装最新的LTS官方版本：\n\n```\n$n lts\n```\n\n### 删除版本，删除一些版本：\n\n```\n$n rm 8.16.2 v12.12.0\n```\n\n### 或者，您可以使用以下 - 代替rm：\n\n```\n$n - 0.9.4\n```\n\n### 相关用法也可以\n\n```\n$n --help\n```\n\n[官方文档](https://www.npmjs.com/package/n)\n\n[Node历史版本](https://nodejs.org/en/blog/release/)\n\n![image](http://nimit.io/images/n/n.gif)\n","source":"_posts/Mac 管理Node版本工-n.md","raw":"---\ntitle: Mac 管理Node版本工-n\ncomments: true\ncategories:\n  - Mac\ntags:\n  - Mac\n  - Node\nabbrlink: b72i3fe5\ndate: 2019-09-21 22:55:37\n---\n\n### 安装\n\n`npm install -g n`\n\n### 安装/激活版本\n\n```\n只需执行n <version>即可安装node。如果<version>已经安装（通过n），n将激活该版本。\n例如：\n    $ n 8.16.2\n    $ n 12.12.0\n```\n### 选择\n\n> n单独执行是查看当前安装的版本，使用向上和向下箭头键导航并按enter或右箭头键进行选择，使用command+ C（控制+ C）退出选择屏幕。\n\n```\n$n\n    node/8.16.2\n  ο node/12.12.0\n    node/14.2.0\n```\n\n### 使用或安装最新的官方发布：\n\n```shell\n$n latest\n```\n\n### 使用或安装稳定的官方发布：\n\n```\n$n stable\n```\n\n### 使用或安装最新的LTS官方版本：\n\n```\n$n lts\n```\n\n### 删除版本，删除一些版本：\n\n```\n$n rm 8.16.2 v12.12.0\n```\n\n### 或者，您可以使用以下 - 代替rm：\n\n```\n$n - 0.9.4\n```\n\n### 相关用法也可以\n\n```\n$n --help\n```\n\n[官方文档](https://www.npmjs.com/package/n)\n\n[Node历史版本](https://nodejs.org/en/blog/release/)\n\n![image](http://nimit.io/images/n/n.gif)\n","slug":"Mac 管理Node版本工-n","published":1,"updated":"2020-05-18T16:35:00.479Z","layout":"post","photos":[],"link":"","_id":"cl78qfooh000gqic9t7uzakl6","content":"<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><p><code>npm install -g n</code></p>\n<h3 id=\"安装-激活版本\"><a href=\"#安装-激活版本\" class=\"headerlink\" title=\"安装/激活版本\"></a>安装/激活版本</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">只需执行n &lt;version&gt;即可安装node。如果&lt;version&gt;已经安装（通过n），n将激活该版本。</span><br><span class=\"line\">例如：</span><br><span class=\"line\">    $ n 8.16.2</span><br><span class=\"line\">    $ n 12.12.0</span><br></pre></td></tr></table></figure>\n<h3 id=\"选择\"><a href=\"#选择\" class=\"headerlink\" title=\"选择\"></a>选择</h3><blockquote>\n<p>n单独执行是查看当前安装的版本，使用向上和向下箭头键导航并按enter或右箭头键进行选择，使用command+ C（控制+ C）退出选择屏幕。</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$n</span><br><span class=\"line\">    node/8.16.2</span><br><span class=\"line\">  ο node/12.12.0</span><br><span class=\"line\">    node/14.2.0</span><br></pre></td></tr></table></figure>\n<h3 id=\"使用或安装最新的官方发布：\"><a href=\"#使用或安装最新的官方发布：\" class=\"headerlink\" title=\"使用或安装最新的官方发布：\"></a>使用或安装最新的官方发布：</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>n latest</span><br></pre></td></tr></table></figure>\n<h3 id=\"使用或安装稳定的官方发布：\"><a href=\"#使用或安装稳定的官方发布：\" class=\"headerlink\" title=\"使用或安装稳定的官方发布：\"></a>使用或安装稳定的官方发布：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$n stable</span><br></pre></td></tr></table></figure>\n<h3 id=\"使用或安装最新的LTS官方版本：\"><a href=\"#使用或安装最新的LTS官方版本：\" class=\"headerlink\" title=\"使用或安装最新的LTS官方版本：\"></a>使用或安装最新的LTS官方版本：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$n lts</span><br></pre></td></tr></table></figure>\n<h3 id=\"删除版本，删除一些版本：\"><a href=\"#删除版本，删除一些版本：\" class=\"headerlink\" title=\"删除版本，删除一些版本：\"></a>删除版本，删除一些版本：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$n rm 8.16.2 v12.12.0</span><br></pre></td></tr></table></figure>\n<h3 id=\"或者，您可以使用以下-代替rm：\"><a href=\"#或者，您可以使用以下-代替rm：\" class=\"headerlink\" title=\"或者，您可以使用以下 - 代替rm：\"></a>或者，您可以使用以下 - 代替rm：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$n - 0.9.4</span><br></pre></td></tr></table></figure>\n<h3 id=\"相关用法也可以\"><a href=\"#相关用法也可以\" class=\"headerlink\" title=\"相关用法也可以\"></a>相关用法也可以</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$n --help</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://www.npmjs.com/package/n\" target=\"_blank\" rel=\"noopener\">官方文档</a></p>\n<p><a href=\"https://nodejs.org/en/blog/release/\" target=\"_blank\" rel=\"noopener\">Node历史版本</a></p>\n<p><img src=\"http://nimit.io/images/n/n.gif\" alt=\"image\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><p><code>npm install -g n</code></p>\n<h3 id=\"安装-激活版本\"><a href=\"#安装-激活版本\" class=\"headerlink\" title=\"安装/激活版本\"></a>安装/激活版本</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">只需执行n &lt;version&gt;即可安装node。如果&lt;version&gt;已经安装（通过n），n将激活该版本。</span><br><span class=\"line\">例如：</span><br><span class=\"line\">    $ n 8.16.2</span><br><span class=\"line\">    $ n 12.12.0</span><br></pre></td></tr></table></figure>\n<h3 id=\"选择\"><a href=\"#选择\" class=\"headerlink\" title=\"选择\"></a>选择</h3><blockquote>\n<p>n单独执行是查看当前安装的版本，使用向上和向下箭头键导航并按enter或右箭头键进行选择，使用command+ C（控制+ C）退出选择屏幕。</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$n</span><br><span class=\"line\">    node/8.16.2</span><br><span class=\"line\">  ο node/12.12.0</span><br><span class=\"line\">    node/14.2.0</span><br></pre></td></tr></table></figure>\n<h3 id=\"使用或安装最新的官方发布：\"><a href=\"#使用或安装最新的官方发布：\" class=\"headerlink\" title=\"使用或安装最新的官方发布：\"></a>使用或安装最新的官方发布：</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>n latest</span><br></pre></td></tr></table></figure>\n<h3 id=\"使用或安装稳定的官方发布：\"><a href=\"#使用或安装稳定的官方发布：\" class=\"headerlink\" title=\"使用或安装稳定的官方发布：\"></a>使用或安装稳定的官方发布：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$n stable</span><br></pre></td></tr></table></figure>\n<h3 id=\"使用或安装最新的LTS官方版本：\"><a href=\"#使用或安装最新的LTS官方版本：\" class=\"headerlink\" title=\"使用或安装最新的LTS官方版本：\"></a>使用或安装最新的LTS官方版本：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$n lts</span><br></pre></td></tr></table></figure>\n<h3 id=\"删除版本，删除一些版本：\"><a href=\"#删除版本，删除一些版本：\" class=\"headerlink\" title=\"删除版本，删除一些版本：\"></a>删除版本，删除一些版本：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$n rm 8.16.2 v12.12.0</span><br></pre></td></tr></table></figure>\n<h3 id=\"或者，您可以使用以下-代替rm：\"><a href=\"#或者，您可以使用以下-代替rm：\" class=\"headerlink\" title=\"或者，您可以使用以下 - 代替rm：\"></a>或者，您可以使用以下 - 代替rm：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$n - 0.9.4</span><br></pre></td></tr></table></figure>\n<h3 id=\"相关用法也可以\"><a href=\"#相关用法也可以\" class=\"headerlink\" title=\"相关用法也可以\"></a>相关用法也可以</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$n --help</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://www.npmjs.com/package/n\" target=\"_blank\" rel=\"noopener\">官方文档</a></p>\n<p><a href=\"https://nodejs.org/en/blog/release/\" target=\"_blank\" rel=\"noopener\">Node历史版本</a></p>\n<p><img src=\"http://nimit.io/images/n/n.gif\" alt=\"image\"></p>\n"},{"layout":"w","title":"Markdown基本语法","date":"2018-10-05T04:15:48.000Z","comments":1,"_content":"\nmarkdown是一种纯文本格式的标记语言。通过简单的标记语法，它可以使普通文本内容具有一定的格式。\n\n##  一、标题\n\n在想要设置为标题的文字前面加#来表示\n一个#是一级标题，二个#是二级标题，以此类推。支持六级标题。\n\n注：标准语法一般在#后跟个空格再写文字，貌似简书不加空格也行。\n\n示例：\n\n```\n# 这是一级标题\n## 这是二级标题\n### 这是三级标题\n#### 这是四级标题\n##### 这是五级标题\n###### 这是六级标题\n```\n\n## 二、字体\n\n- ##### 加粗\n\n要加粗的文字左右分别用两个*号包起来\n\n- ##### 斜体\n\n要倾斜的文字左右分别用一个*号包起来\n\n- ##### 斜体加粗\n\n要倾斜和加粗的文字左右分别用三个*号包起来\n\n- ##### 删除线\n\n要加删除线的文字左右分别用两个~~号包起来\n\n示例：\n\n```\n**这是加粗的文字**\n*这是倾斜的文字*`\n***这是斜体加粗的文字***\n~~这是加删除线的文字~~\n```\n\n效果：\n\n**这是加粗的文字**\n*这是倾斜的文字*`\n***这是斜体加粗的文字***\n~~这是加删除线的文字~~\n\n---\n\n## 三、引用\n\n在引用的文字前加>即可。引用也可以嵌套，如加两个>>三个>>>\nn个...\n貌似可以一直加下去，但没神马卵用\n\n示例：\n\n```\n>这是引用的内容\n>>这是引用的内容\n>>>这是引用的内容\n```\n\n效果如下：\n\n>这是引用的内容\n>>这是引用的内容\n>>\n>>>这是引用的内容\n\n---\n\n##  四、分割线\n\n三个或者三个以上的 - 或者 * 都可以。\n\n示例：\n\n```\n---\n----\n***\n*****\n```\n\n---\n----\n***\n*****\n\n## 五、图片\n\n语法：\n\n```\n![图片alt](图片地址 ''图片title'')\n\n图片alt就是显示在图片下面的文字，相当于对图片内容的解释。\n图片title是图片的标题，当鼠标移到图片上时显示的内容。title可加可不加\n```\n\n示例：\n\n","source":"_posts/Markdown基本语法.md","raw":"---\nlayout: w\ntitle: Markdown基本语法\ndate: 2018-10-05 12:15:48\ncomments: true\ncategories: \n- Markdown\ntags:\n- Markdown\n---\n\nmarkdown是一种纯文本格式的标记语言。通过简单的标记语法，它可以使普通文本内容具有一定的格式。\n\n##  一、标题\n\n在想要设置为标题的文字前面加#来表示\n一个#是一级标题，二个#是二级标题，以此类推。支持六级标题。\n\n注：标准语法一般在#后跟个空格再写文字，貌似简书不加空格也行。\n\n示例：\n\n```\n# 这是一级标题\n## 这是二级标题\n### 这是三级标题\n#### 这是四级标题\n##### 这是五级标题\n###### 这是六级标题\n```\n\n## 二、字体\n\n- ##### 加粗\n\n要加粗的文字左右分别用两个*号包起来\n\n- ##### 斜体\n\n要倾斜的文字左右分别用一个*号包起来\n\n- ##### 斜体加粗\n\n要倾斜和加粗的文字左右分别用三个*号包起来\n\n- ##### 删除线\n\n要加删除线的文字左右分别用两个~~号包起来\n\n示例：\n\n```\n**这是加粗的文字**\n*这是倾斜的文字*`\n***这是斜体加粗的文字***\n~~这是加删除线的文字~~\n```\n\n效果：\n\n**这是加粗的文字**\n*这是倾斜的文字*`\n***这是斜体加粗的文字***\n~~这是加删除线的文字~~\n\n---\n\n## 三、引用\n\n在引用的文字前加>即可。引用也可以嵌套，如加两个>>三个>>>\nn个...\n貌似可以一直加下去，但没神马卵用\n\n示例：\n\n```\n>这是引用的内容\n>>这是引用的内容\n>>>这是引用的内容\n```\n\n效果如下：\n\n>这是引用的内容\n>>这是引用的内容\n>>\n>>>这是引用的内容\n\n---\n\n##  四、分割线\n\n三个或者三个以上的 - 或者 * 都可以。\n\n示例：\n\n```\n---\n----\n***\n*****\n```\n\n---\n----\n***\n*****\n\n## 五、图片\n\n语法：\n\n```\n![图片alt](图片地址 ''图片title'')\n\n图片alt就是显示在图片下面的文字，相当于对图片内容的解释。\n图片title是图片的标题，当鼠标移到图片上时显示的内容。title可加可不加\n```\n\n示例：\n\n","slug":"Markdown基本语法","published":1,"updated":"2020-05-18T16:35:00.479Z","photos":[],"link":"","_id":"cl78qfooj000kqic9o9rk1aeq","content":"<p>markdown是一种纯文本格式的标记语言。通过简单的标记语法，它可以使普通文本内容具有一定的格式。</p>\n<h2 id=\"一、标题\"><a href=\"#一、标题\" class=\"headerlink\" title=\"一、标题\"></a>一、标题</h2><p>在想要设置为标题的文字前面加#来表示<br>一个#是一级标题，二个#是二级标题，以此类推。支持六级标题。</p>\n<p>注：标准语法一般在#后跟个空格再写文字，貌似简书不加空格也行。</p>\n<p>示例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 这是一级标题</span><br><span class=\"line\">## 这是二级标题</span><br><span class=\"line\">### 这是三级标题</span><br><span class=\"line\">#### 这是四级标题</span><br><span class=\"line\">##### 这是五级标题</span><br><span class=\"line\">###### 这是六级标题</span><br></pre></td></tr></table></figure>\n<h2 id=\"二、字体\"><a href=\"#二、字体\" class=\"headerlink\" title=\"二、字体\"></a>二、字体</h2><ul>\n<li><h5 id=\"加粗\"><a href=\"#加粗\" class=\"headerlink\" title=\"加粗\"></a>加粗</h5></li>\n</ul>\n<p>要加粗的文字左右分别用两个*号包起来</p>\n<ul>\n<li><h5 id=\"斜体\"><a href=\"#斜体\" class=\"headerlink\" title=\"斜体\"></a>斜体</h5></li>\n</ul>\n<p>要倾斜的文字左右分别用一个*号包起来</p>\n<ul>\n<li><h5 id=\"斜体加粗\"><a href=\"#斜体加粗\" class=\"headerlink\" title=\"斜体加粗\"></a>斜体加粗</h5></li>\n</ul>\n<p>要倾斜和加粗的文字左右分别用三个*号包起来</p>\n<ul>\n<li><h5 id=\"删除线\"><a href=\"#删除线\" class=\"headerlink\" title=\"删除线\"></a>删除线</h5></li>\n</ul>\n<p>要加删除线的文字左右分别用两个~~号包起来</p>\n<p>示例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">**这是加粗的文字**</span><br><span class=\"line\">*这是倾斜的文字*`</span><br><span class=\"line\">***这是斜体加粗的文字***</span><br><span class=\"line\">~~这是加删除线的文字~~</span><br></pre></td></tr></table></figure>\n<p>效果：</p>\n<p><strong>这是加粗的文字</strong><br><em>这是倾斜的文字</em>`<br><strong><em>这是斜体加粗的文字</em></strong><br><del>这是加删除线的文字</del></p>\n<hr>\n<h2 id=\"三、引用\"><a href=\"#三、引用\" class=\"headerlink\" title=\"三、引用\"></a>三、引用</h2><p>在引用的文字前加&gt;即可。引用也可以嵌套，如加两个&gt;&gt;三个&gt;&gt;&gt;<br>n个…<br>貌似可以一直加下去，但没神马卵用</p>\n<p>示例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;这是引用的内容</span><br><span class=\"line\">&gt;&gt;这是引用的内容</span><br><span class=\"line\">&gt;&gt;&gt;这是引用的内容</span><br></pre></td></tr></table></figure>\n<p>效果如下：</p>\n<blockquote>\n<p>这是引用的内容</p>\n<blockquote>\n<p>这是引用的内容</p>\n<blockquote>\n<p>这是引用的内容</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<hr>\n<h2 id=\"四、分割线\"><a href=\"#四、分割线\" class=\"headerlink\" title=\"四、分割线\"></a>四、分割线</h2><p>三个或者三个以上的 - 或者 * 都可以。</p>\n<p>示例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">----</span><br><span class=\"line\">***</span><br><span class=\"line\">*****</span><br></pre></td></tr></table></figure>\n<hr>\n<hr>\n<hr>\n<hr>\n<h2 id=\"五、图片\"><a href=\"#五、图片\" class=\"headerlink\" title=\"五、图片\"></a>五、图片</h2><p>语法：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![图片alt](图片地址 &apos;&apos;图片title&apos;&apos;)</span><br><span class=\"line\"></span><br><span class=\"line\">图片alt就是显示在图片下面的文字，相当于对图片内容的解释。</span><br><span class=\"line\">图片title是图片的标题，当鼠标移到图片上时显示的内容。title可加可不加</span><br></pre></td></tr></table></figure>\n<p>示例：</p>\n","site":{"data":{}},"excerpt":"","more":"<p>markdown是一种纯文本格式的标记语言。通过简单的标记语法，它可以使普通文本内容具有一定的格式。</p>\n<h2 id=\"一、标题\"><a href=\"#一、标题\" class=\"headerlink\" title=\"一、标题\"></a>一、标题</h2><p>在想要设置为标题的文字前面加#来表示<br>一个#是一级标题，二个#是二级标题，以此类推。支持六级标题。</p>\n<p>注：标准语法一般在#后跟个空格再写文字，貌似简书不加空格也行。</p>\n<p>示例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 这是一级标题</span><br><span class=\"line\">## 这是二级标题</span><br><span class=\"line\">### 这是三级标题</span><br><span class=\"line\">#### 这是四级标题</span><br><span class=\"line\">##### 这是五级标题</span><br><span class=\"line\">###### 这是六级标题</span><br></pre></td></tr></table></figure>\n<h2 id=\"二、字体\"><a href=\"#二、字体\" class=\"headerlink\" title=\"二、字体\"></a>二、字体</h2><ul>\n<li><h5 id=\"加粗\"><a href=\"#加粗\" class=\"headerlink\" title=\"加粗\"></a>加粗</h5></li>\n</ul>\n<p>要加粗的文字左右分别用两个*号包起来</p>\n<ul>\n<li><h5 id=\"斜体\"><a href=\"#斜体\" class=\"headerlink\" title=\"斜体\"></a>斜体</h5></li>\n</ul>\n<p>要倾斜的文字左右分别用一个*号包起来</p>\n<ul>\n<li><h5 id=\"斜体加粗\"><a href=\"#斜体加粗\" class=\"headerlink\" title=\"斜体加粗\"></a>斜体加粗</h5></li>\n</ul>\n<p>要倾斜和加粗的文字左右分别用三个*号包起来</p>\n<ul>\n<li><h5 id=\"删除线\"><a href=\"#删除线\" class=\"headerlink\" title=\"删除线\"></a>删除线</h5></li>\n</ul>\n<p>要加删除线的文字左右分别用两个~~号包起来</p>\n<p>示例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">**这是加粗的文字**</span><br><span class=\"line\">*这是倾斜的文字*`</span><br><span class=\"line\">***这是斜体加粗的文字***</span><br><span class=\"line\">~~这是加删除线的文字~~</span><br></pre></td></tr></table></figure>\n<p>效果：</p>\n<p><strong>这是加粗的文字</strong><br><em>这是倾斜的文字</em>`<br><strong><em>这是斜体加粗的文字</em></strong><br><del>这是加删除线的文字</del></p>\n<hr>\n<h2 id=\"三、引用\"><a href=\"#三、引用\" class=\"headerlink\" title=\"三、引用\"></a>三、引用</h2><p>在引用的文字前加&gt;即可。引用也可以嵌套，如加两个&gt;&gt;三个&gt;&gt;&gt;<br>n个…<br>貌似可以一直加下去，但没神马卵用</p>\n<p>示例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;这是引用的内容</span><br><span class=\"line\">&gt;&gt;这是引用的内容</span><br><span class=\"line\">&gt;&gt;&gt;这是引用的内容</span><br></pre></td></tr></table></figure>\n<p>效果如下：</p>\n<blockquote>\n<p>这是引用的内容</p>\n<blockquote>\n<p>这是引用的内容</p>\n<blockquote>\n<p>这是引用的内容</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<hr>\n<h2 id=\"四、分割线\"><a href=\"#四、分割线\" class=\"headerlink\" title=\"四、分割线\"></a>四、分割线</h2><p>三个或者三个以上的 - 或者 * 都可以。</p>\n<p>示例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">----</span><br><span class=\"line\">***</span><br><span class=\"line\">*****</span><br></pre></td></tr></table></figure>\n<hr>\n<hr>\n<hr>\n<hr>\n<h2 id=\"五、图片\"><a href=\"#五、图片\" class=\"headerlink\" title=\"五、图片\"></a>五、图片</h2><p>语法：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![图片alt](图片地址 &apos;&apos;图片title&apos;&apos;)</span><br><span class=\"line\"></span><br><span class=\"line\">图片alt就是显示在图片下面的文字，相当于对图片内容的解释。</span><br><span class=\"line\">图片title是图片的标题，当鼠标移到图片上时显示的内容。title可加可不加</span><br></pre></td></tr></table></figure>\n<p>示例：</p>\n"},{"title":"Vue使用路由的钩子函改变单页面的颜色","comments":1,"abbrlink":"276258a","date":"2019-03-31T13:47:25.000Z","_content":"\n[导航守卫](https://router.vuejs.org/zh/guide/advanced/navigation-guards.html)\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"UTF-8\">\n    <link href=\"http://cdn.bootcss.com/bootstrap/3.3.6/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n<body>\n    <div id=\"app\"></div>\n\n    <template id=\"main\">\n        <div id=\"app\">\n            <ul>\n                <li><router-link to=\"/\">Home</router-link></li>\n                <li><router-link to=\"/1\">Page1</router-link></li>\n                <li><router-link to=\"/2\">Page2</router-link></li>\n            </ul>\n            <router-view></router-view>\n        </div>\n    </template>\n\n    <script src=\"http://cdn.bootcss.com/vue/2.3.2/vue.min.js\"></script>\n    <script src=\"http://cdn.bootcss.com/vue-router/2.5.3/vue-router.min.js\"></script>\n\n    <script>\n        const Home = { template: '<div>Home</div>' }\n\n        const Page1 = {\n            template: '<div>Page1</div>',\n            beforeRouteEnter(to, from, next) {\n                window.document.body.style.backgroundColor = 'red';\n                next();\n            },\n            beforeRouteLeave(to, from, next) {\n                window.document.body.style.backgroundColor = '';\n                next();\n            }\n        }\n\n        const Page2 = {\n            template: '<div>Page2</div>',\n            beforeRouteEnter(to, from, next) {\n                window.document.body.style.backgroundColor = 'blue';\n                next();\n            },\n            beforeRouteLeave(to, from, next) {\n                window.document.body.style.backgroundColor = '';\n                next();\n            }\n        }\n\n        const router = new VueRouter({\n            routes: [\n              { path: '/', component: Home },\n              { path: '/1', component: Page1 },\n              { path: '/2', component: Page2 }\n            ]\n        })\n\n        new Vue({\n            router,\n            template: '#main'\n        }).$mount('#app')\n    </script>\n</body>\n</html>\n```\n\n在`main.js`添加\n\n```javascript\nrouter.beforeEach((to, form, next) => {\n  // 这里使用全局守卫\n  if (to.matched[0].name == \"login\") {\n    window.document.body.style.backgroundColor = 'white'\n    next();\n  } else {\n    window.document.body.style.backgroundColor = ''\n    next();\n  }\n})\n```\n\n使用组件内的守卫\n\n```javascript\nexport default {\n  beforeCreate: function() { // 单独更改页面的背景\n    document.body.style.backgroundColor = '#fff'\n  },\n  beforeDestroy: function() { // 删除添加的背景\n    document.body.removeAttribute(\"style\",\"backgroundColor\")\n  },\n}\n```\n\n","source":"_posts/Vue使用路由的钩子函改变单页面的颜色.md","raw":"---\ntitle: Vue使用路由的钩子函改变单页面的颜色\ncomments: true\ncategories:\n  - Vue\ntags:\n  - vue\nabbrlink: 276258a\ndate: 2019-03-31 21:47:25\n---\n\n[导航守卫](https://router.vuejs.org/zh/guide/advanced/navigation-guards.html)\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"UTF-8\">\n    <link href=\"http://cdn.bootcss.com/bootstrap/3.3.6/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n<body>\n    <div id=\"app\"></div>\n\n    <template id=\"main\">\n        <div id=\"app\">\n            <ul>\n                <li><router-link to=\"/\">Home</router-link></li>\n                <li><router-link to=\"/1\">Page1</router-link></li>\n                <li><router-link to=\"/2\">Page2</router-link></li>\n            </ul>\n            <router-view></router-view>\n        </div>\n    </template>\n\n    <script src=\"http://cdn.bootcss.com/vue/2.3.2/vue.min.js\"></script>\n    <script src=\"http://cdn.bootcss.com/vue-router/2.5.3/vue-router.min.js\"></script>\n\n    <script>\n        const Home = { template: '<div>Home</div>' }\n\n        const Page1 = {\n            template: '<div>Page1</div>',\n            beforeRouteEnter(to, from, next) {\n                window.document.body.style.backgroundColor = 'red';\n                next();\n            },\n            beforeRouteLeave(to, from, next) {\n                window.document.body.style.backgroundColor = '';\n                next();\n            }\n        }\n\n        const Page2 = {\n            template: '<div>Page2</div>',\n            beforeRouteEnter(to, from, next) {\n                window.document.body.style.backgroundColor = 'blue';\n                next();\n            },\n            beforeRouteLeave(to, from, next) {\n                window.document.body.style.backgroundColor = '';\n                next();\n            }\n        }\n\n        const router = new VueRouter({\n            routes: [\n              { path: '/', component: Home },\n              { path: '/1', component: Page1 },\n              { path: '/2', component: Page2 }\n            ]\n        })\n\n        new Vue({\n            router,\n            template: '#main'\n        }).$mount('#app')\n    </script>\n</body>\n</html>\n```\n\n在`main.js`添加\n\n```javascript\nrouter.beforeEach((to, form, next) => {\n  // 这里使用全局守卫\n  if (to.matched[0].name == \"login\") {\n    window.document.body.style.backgroundColor = 'white'\n    next();\n  } else {\n    window.document.body.style.backgroundColor = ''\n    next();\n  }\n})\n```\n\n使用组件内的守卫\n\n```javascript\nexport default {\n  beforeCreate: function() { // 单独更改页面的背景\n    document.body.style.backgroundColor = '#fff'\n  },\n  beforeDestroy: function() { // 删除添加的背景\n    document.body.removeAttribute(\"style\",\"backgroundColor\")\n  },\n}\n```\n\n","slug":"Vue使用路由的钩子函改变单页面的颜色","published":1,"updated":"2020-05-18T16:35:00.479Z","layout":"post","photos":[],"link":"","_id":"cl78qfook000nqic9gukzr3p3","content":"<p><a href=\"https://router.vuejs.org/zh/guide/advanced/navigation-guards.html\" target=\"_blank\" rel=\"noopener\">导航守卫</a></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">href</span>=<span class=\"string\">\"http://cdn.bootcss.com/bootstrap/3.3.6/css/bootstrap.min.css\"</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">id</span>=<span class=\"string\">\"main\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">to</span>=<span class=\"string\">\"/\"</span>&gt;</span>Home<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">to</span>=<span class=\"string\">\"/1\"</span>&gt;</span>Page1<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">to</span>=<span class=\"string\">\"/2\"</span>&gt;</span>Page2<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">router-view</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">router-view</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://cdn.bootcss.com/vue/2.3.2/vue.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://cdn.bootcss.com/vue-router/2.5.3/vue-router.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> Home = &#123; <span class=\"attr\">template</span>: <span class=\"string\">'&lt;div&gt;Home&lt;/div&gt;'</span> &#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> Page1 = &#123;</span></span><br><span class=\"line\"><span class=\"xml\">            template: '<span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>Page1<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span>',</span></span><br><span class=\"line\"><span class=\"javascript\">            beforeRouteEnter(to, <span class=\"keyword\">from</span>, next) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"built_in\">window</span>.document.body.style.backgroundColor = <span class=\"string\">'red'</span>;</span></span><br><span class=\"line\"><span class=\"undefined\">                next();</span></span><br><span class=\"line\"><span class=\"undefined\">            &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">            beforeRouteLeave(to, <span class=\"keyword\">from</span>, next) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"built_in\">window</span>.document.body.style.backgroundColor = <span class=\"string\">''</span>;</span></span><br><span class=\"line\"><span class=\"undefined\">                next();</span></span><br><span class=\"line\"><span class=\"undefined\">            &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> Page2 = &#123;</span></span><br><span class=\"line\"><span class=\"xml\">            template: '<span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>Page2<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span>',</span></span><br><span class=\"line\"><span class=\"javascript\">            beforeRouteEnter(to, <span class=\"keyword\">from</span>, next) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"built_in\">window</span>.document.body.style.backgroundColor = <span class=\"string\">'blue'</span>;</span></span><br><span class=\"line\"><span class=\"undefined\">                next();</span></span><br><span class=\"line\"><span class=\"undefined\">            &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">            beforeRouteLeave(to, <span class=\"keyword\">from</span>, next) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"built_in\">window</span>.document.body.style.backgroundColor = <span class=\"string\">''</span>;</span></span><br><span class=\"line\"><span class=\"undefined\">                next();</span></span><br><span class=\"line\"><span class=\"undefined\">            &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> router = <span class=\"keyword\">new</span> VueRouter(&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            routes: [</span></span><br><span class=\"line\"><span class=\"javascript\">              &#123; <span class=\"attr\">path</span>: <span class=\"string\">'/'</span>, <span class=\"attr\">component</span>: Home &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">              &#123; <span class=\"attr\">path</span>: <span class=\"string\">'/1'</span>, <span class=\"attr\">component</span>: Page1 &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">              &#123; <span class=\"attr\">path</span>: <span class=\"string\">'/2'</span>, <span class=\"attr\">component</span>: Page2 &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">            ]</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;)</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            router,</span></span><br><span class=\"line\"><span class=\"javascript\">            template: <span class=\"string\">'#main'</span></span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;).$mount(<span class=\"string\">'#app'</span>)</span></span><br><span class=\"line\"><span class=\"undefined\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>在<code>main.js</code>添加</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">router.beforeEach(<span class=\"function\">(<span class=\"params\">to, form, next</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 这里使用全局守卫</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (to.matched[<span class=\"number\">0</span>].name == <span class=\"string\">\"login\"</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">window</span>.document.body.style.backgroundColor = <span class=\"string\">'white'</span></span><br><span class=\"line\">    next();</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">window</span>.document.body.style.backgroundColor = <span class=\"string\">''</span></span><br><span class=\"line\">    next();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>使用组件内的守卫</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  beforeCreate: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123; <span class=\"comment\">// 单独更改页面的背景</span></span><br><span class=\"line\">    <span class=\"built_in\">document</span>.body.style.backgroundColor = <span class=\"string\">'#fff'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  beforeDestroy: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123; <span class=\"comment\">// 删除添加的背景</span></span><br><span class=\"line\">    <span class=\"built_in\">document</span>.body.removeAttribute(<span class=\"string\">\"style\"</span>,<span class=\"string\">\"backgroundColor\"</span>)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://router.vuejs.org/zh/guide/advanced/navigation-guards.html\" target=\"_blank\" rel=\"noopener\">导航守卫</a></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">href</span>=<span class=\"string\">\"http://cdn.bootcss.com/bootstrap/3.3.6/css/bootstrap.min.css\"</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">id</span>=<span class=\"string\">\"main\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">to</span>=<span class=\"string\">\"/\"</span>&gt;</span>Home<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">to</span>=<span class=\"string\">\"/1\"</span>&gt;</span>Page1<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">to</span>=<span class=\"string\">\"/2\"</span>&gt;</span>Page2<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">router-view</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">router-view</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://cdn.bootcss.com/vue/2.3.2/vue.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://cdn.bootcss.com/vue-router/2.5.3/vue-router.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> Home = &#123; <span class=\"attr\">template</span>: <span class=\"string\">'&lt;div&gt;Home&lt;/div&gt;'</span> &#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> Page1 = &#123;</span></span><br><span class=\"line\"><span class=\"xml\">            template: '<span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>Page1<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span>',</span></span><br><span class=\"line\"><span class=\"javascript\">            beforeRouteEnter(to, <span class=\"keyword\">from</span>, next) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"built_in\">window</span>.document.body.style.backgroundColor = <span class=\"string\">'red'</span>;</span></span><br><span class=\"line\"><span class=\"undefined\">                next();</span></span><br><span class=\"line\"><span class=\"undefined\">            &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">            beforeRouteLeave(to, <span class=\"keyword\">from</span>, next) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"built_in\">window</span>.document.body.style.backgroundColor = <span class=\"string\">''</span>;</span></span><br><span class=\"line\"><span class=\"undefined\">                next();</span></span><br><span class=\"line\"><span class=\"undefined\">            &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> Page2 = &#123;</span></span><br><span class=\"line\"><span class=\"xml\">            template: '<span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>Page2<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span>',</span></span><br><span class=\"line\"><span class=\"javascript\">            beforeRouteEnter(to, <span class=\"keyword\">from</span>, next) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"built_in\">window</span>.document.body.style.backgroundColor = <span class=\"string\">'blue'</span>;</span></span><br><span class=\"line\"><span class=\"undefined\">                next();</span></span><br><span class=\"line\"><span class=\"undefined\">            &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">            beforeRouteLeave(to, <span class=\"keyword\">from</span>, next) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"built_in\">window</span>.document.body.style.backgroundColor = <span class=\"string\">''</span>;</span></span><br><span class=\"line\"><span class=\"undefined\">                next();</span></span><br><span class=\"line\"><span class=\"undefined\">            &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> router = <span class=\"keyword\">new</span> VueRouter(&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            routes: [</span></span><br><span class=\"line\"><span class=\"javascript\">              &#123; <span class=\"attr\">path</span>: <span class=\"string\">'/'</span>, <span class=\"attr\">component</span>: Home &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">              &#123; <span class=\"attr\">path</span>: <span class=\"string\">'/1'</span>, <span class=\"attr\">component</span>: Page1 &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">              &#123; <span class=\"attr\">path</span>: <span class=\"string\">'/2'</span>, <span class=\"attr\">component</span>: Page2 &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">            ]</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;)</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            router,</span></span><br><span class=\"line\"><span class=\"javascript\">            template: <span class=\"string\">'#main'</span></span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;).$mount(<span class=\"string\">'#app'</span>)</span></span><br><span class=\"line\"><span class=\"undefined\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>在<code>main.js</code>添加</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">router.beforeEach(<span class=\"function\">(<span class=\"params\">to, form, next</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 这里使用全局守卫</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (to.matched[<span class=\"number\">0</span>].name == <span class=\"string\">\"login\"</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">window</span>.document.body.style.backgroundColor = <span class=\"string\">'white'</span></span><br><span class=\"line\">    next();</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">window</span>.document.body.style.backgroundColor = <span class=\"string\">''</span></span><br><span class=\"line\">    next();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>使用组件内的守卫</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  beforeCreate: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123; <span class=\"comment\">// 单独更改页面的背景</span></span><br><span class=\"line\">    <span class=\"built_in\">document</span>.body.style.backgroundColor = <span class=\"string\">'#fff'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  beforeDestroy: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123; <span class=\"comment\">// 删除添加的背景</span></span><br><span class=\"line\">    <span class=\"built_in\">document</span>.body.removeAttribute(<span class=\"string\">\"style\"</span>,<span class=\"string\">\"backgroundColor\"</span>)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"Moment.js常见用法总结","comments":1,"abbrlink":"adf7e5ef","date":"2020-03-25T11:02:06.000Z","_content":"\n下载地址：http://momentjs.cn/\n\nMoment.js是一个轻量级的JavaScript时间库，它方便了日常开发中对时间的操作，提高了开发效率。\n\n> 日常开发中，通常会对时间进行下面这几个操作：比如获取时间，设置时间，格式化时间，比较时间等等。接下来，我将按照这些操作对Moment.js中的Doc进行整理分类，方便学习和日后的查阅。\n\n### 获取时间\n\n\n- Start of Time\n```\nmoment().startOf(String)\n```\n\n\n- 获取今天0时0分0秒\n```\nmoment().startOf('day')\n```\n\n\n- 获取本周第一天(周日)0时0分0秒\n```\nmoment().startOf('week')\n```\n\n\n- 获取本周周一0时0分0秒\n```\nmoment().startOf('isoWeek')\n```\n\n- 获取当前月第一天0时0分0秒\n```\nmoment().startOf('month')\n```\n\n\nEnd of Time\n```\nmoment().endOf(String)\n```\n\n\n- 获取今天23时59分59秒\n```\nmoment().endOf('day')\n```\n\n\n- 获取本周最后一天(周六)23时59分59秒\n```\nmoment().endOf('week')\n```\n\n\n- 获取本周周日23时59分59秒\n```\nmoment().endOf('isoWeek')\n```\n\n\n- 获取当前月最后一天23时59分59秒\n```\nmoment().endOf('month')\n```\n\n\n\n\n- Days in Month\n```\nmoment().daysInMonth()\n```\n\n\n获取当前月的总天数\n```\nmoment().daysInMonth() \n```\n\n\nTimestamp\n\n\n- 获取时间戳(以秒为单位)\n\n```\nmoment().format('X') // 返回值为字符串类型\nmoment().unix() // 返回值为数值型\n```\n\n\n获取时间戳(以毫秒为单位)\n\n```\nmoment().format('x') // 返回值为字符串类型\nmoment().valueOf() // 返回值为数值型\n```\n\n\nGet Time\n\n\n获取年\n```\nmoment().year()\nmoment().get('year')\n```\n\n\n获取月份\n```\nmoment().month() (0~11, 0: January, 11: December)\nmoment().get('month')\n```\n\n\n获取一个月中的某一天\n```\nmoment().date()\nmoment().get('date')\n```\n\n\n获取一个星期中的某一天\n```\nmoment().day() (0~6, 0: Sunday, 6: Saturday)\nmoment().weekday() (0~6, 0: Sunday, 6: Saturday)\nmoment().isoWeekday() (1~7, 1: Monday, 7: Sunday)\nmoment().get('day')\nmment().get('weekday')\nmoment().get('isoWeekday')\n```\n\n\n获取小时\n```\nmoment().hours()\nmoment().get('hours')\n```\n\n\n获取分钟\n```\nmoment().minutes()\nmoment().get('minutes')\n```\n\n\n获取秒数\n```\nmoment().seconds()\nmoment().get('seconds')\n```\n\n\n获取当前的年月日时分秒\n```\nmoment().toArray() // [years, months, date, hours, minutes, seconds, milliseconds]\nmoment().toObject() // {years: xxxx, months: x, date: xx ...}\n```\n\n\n\n\n设置时间\n\n\nSet Time\n```\nmoment().year(Number), moment().month(Number)...\nmoment().set(String, Int)\nmoment().set(Object)\n```\n\n\n设置年份\n```\nmoment().year(2019)\nmoment().set('year', 2019)\nmoment().set({year: 2019})\n```\n\n\n设置月份\n```\nmoment().month(11) (0~11, 0: January, 11: December)\nmoment().set('month', 11) \n```\n\n\n设置某个月中的某一天\n```\nmoment().date(15)\nmoment().set('date', 15)\n```\n\n\n设置某个星期中的某一天\n```\nmoment().weekday(0) // 设置日期为本周第一天（周日）\nmoment().isoWeekday(1) // 设置日期为本周周一\nmoment().set('weekday', 0)\nmoment().set('isoWeekday', 1)\n```\n\n\n设置小时\n```\nmoment().hours(12)\nmoment().set('hours', 12)\n```\n\n\n设置分钟\n```\nmoment().minutes(30)\nmoment().set('minutes', 30)\n```\n\n\n设置秒数\n```\nmoment().seconds(30)\nmoment().set('seconds', 30)\n```\n\n\n\n\nAdd Time\n```\nmoment().add(Number, String)\nmoment().add(Object)\n```\n\n\n设置年份\n```\nmoment().add(1, 'years')\nmoment().add({years: 1})\n```\n\n\n设置月份\n```\nmoment().add(1, 'months')\n```\n\n\n设置日期\n```\nmoment().add(1, 'days')\n```\n\n\n设置星期\n```\nmoment().add(1, 'weeks')\n```\n\n\n设置小时\n```\nmoment().add(1, 'hours')\n```\n\n\n设置分钟\n```\nmoment().add(1, 'minutes')\n```\n\n\n设置秒数\n```\nmoment().add(1, 'seconds')\n```\n\n\n\n\nSubtract Time\n```\nmoment().subtract(Number, String)\nmoment().subtract(Object)\n```\n\n\n设置年份\n```\nmoment().subtract(1, 'years')\nmoment().subtract({years: 1})\n```\n\n\n设置月份\n```\nmoment().subtract(1, 'months')\n```\n\n\n设置日期\n```\nmoment().subtract(1, 'days')\n```\n\n\n设置星期\n```\nmoment().subtract(1, 'weeks')\n```\n\n\n设置小时\n```\nmoment().subtract(1, 'hours')\n```\n\n\n设置分钟\n```\nmoment().subtract(1, 'minutes')\n```\n\n\n设置秒数\n```\nmoment().subtract(1, 'seconds')\n```\n\n\n\n\n格式化时间\n\n\nFormat Time\n```\nmoment().format()\nmoment().format(String)\n```\n\n\n格式化年月日： 'xxxx年xx月xx日'\n```\nmoment().format('YYYY年MM月DD日')\n```\n\n\n格式化年月日： 'xxxx-xx-xx'\n```\nmoment().format('YYYY-MM-DD')\n```\n\n\n格式化时分秒(24小时制)： 'xx时xx分xx秒'\n```\nmoment().format('HH时mm分ss秒')\n```\n\n\n格式化时分秒(12小时制)：'xx:xx:xx am/pm'\n```\nmoment().format('hh:mm:ss a')\n```\n\n\n格式化时间戳(以秒为单位)\n```\nmoment().format('X') // 返回值为字符串类型\n```\n\n\n格式化时间戳(以毫秒为单位)\n```\nmoment().format('x') // 返回值为字符串类型\n```\n\n\n\n\n比较时间\n\n\nDifference\n```\nmoment().diff(Moment|String|Number|Date|Array)\n```\n\n\n获取两个日期之间的时间差\n```\nlet start_date = moment().subtract(1, 'weeks')\nlet end_date = moment()\n\nend_date.diff(start_date) // 返回毫秒数\n\nend_date.diff(start_date, 'months') // 0\nend_date.diff(start_date, 'weeks') // 1\nend_date.diff(start_date, 'days') // 7\nstart_date.diff(end_date, 'days') // -7\n```\n\n\n\n转化为JavaScript原生Date对象\n```\nmoment().toDate()\nnew Date(moment())\n```\n\n\n将Moment时间转换为JavaScript原生Date对象\n```\nlet m = moment()\nlet nativeDate1 = m.toDate()\nlet nativeDate2 = new Date(m)\n\nString(nativeDate1) === String(nativeDate2) // true\n```\n\n\n实战\n\n\n获取昨日0时0分0秒到昨日23时59分59秒， 格式：[milliseconds, milliseconds]\n\n\n获取上周一到上周日时间范围，格式: [seconds, seconds]\n\n\n获取上个月第一天和最后一天时间范围， 格式：[YYYY-MM-DD, YYYY-MM-DD]\n\n作者：zhouqichao\n链接：https://www.jianshu.com/p/9c10543420de\n来源：简书\n简书著作权归作者所有，任何形式的转载都请联系作者获得授权并注明出处。\n","source":"_posts/Moment.js常见用法总结.md","raw":"---\ntitle: Moment.js常见用法总结\ncomments: true\ncategories:\n  - Moment\ntags:\n  - Moment\nabbrlink: adf7e5ef\ndate: 2020-03-25 19:02:06\n---\n\n下载地址：http://momentjs.cn/\n\nMoment.js是一个轻量级的JavaScript时间库，它方便了日常开发中对时间的操作，提高了开发效率。\n\n> 日常开发中，通常会对时间进行下面这几个操作：比如获取时间，设置时间，格式化时间，比较时间等等。接下来，我将按照这些操作对Moment.js中的Doc进行整理分类，方便学习和日后的查阅。\n\n### 获取时间\n\n\n- Start of Time\n```\nmoment().startOf(String)\n```\n\n\n- 获取今天0时0分0秒\n```\nmoment().startOf('day')\n```\n\n\n- 获取本周第一天(周日)0时0分0秒\n```\nmoment().startOf('week')\n```\n\n\n- 获取本周周一0时0分0秒\n```\nmoment().startOf('isoWeek')\n```\n\n- 获取当前月第一天0时0分0秒\n```\nmoment().startOf('month')\n```\n\n\nEnd of Time\n```\nmoment().endOf(String)\n```\n\n\n- 获取今天23时59分59秒\n```\nmoment().endOf('day')\n```\n\n\n- 获取本周最后一天(周六)23时59分59秒\n```\nmoment().endOf('week')\n```\n\n\n- 获取本周周日23时59分59秒\n```\nmoment().endOf('isoWeek')\n```\n\n\n- 获取当前月最后一天23时59分59秒\n```\nmoment().endOf('month')\n```\n\n\n\n\n- Days in Month\n```\nmoment().daysInMonth()\n```\n\n\n获取当前月的总天数\n```\nmoment().daysInMonth() \n```\n\n\nTimestamp\n\n\n- 获取时间戳(以秒为单位)\n\n```\nmoment().format('X') // 返回值为字符串类型\nmoment().unix() // 返回值为数值型\n```\n\n\n获取时间戳(以毫秒为单位)\n\n```\nmoment().format('x') // 返回值为字符串类型\nmoment().valueOf() // 返回值为数值型\n```\n\n\nGet Time\n\n\n获取年\n```\nmoment().year()\nmoment().get('year')\n```\n\n\n获取月份\n```\nmoment().month() (0~11, 0: January, 11: December)\nmoment().get('month')\n```\n\n\n获取一个月中的某一天\n```\nmoment().date()\nmoment().get('date')\n```\n\n\n获取一个星期中的某一天\n```\nmoment().day() (0~6, 0: Sunday, 6: Saturday)\nmoment().weekday() (0~6, 0: Sunday, 6: Saturday)\nmoment().isoWeekday() (1~7, 1: Monday, 7: Sunday)\nmoment().get('day')\nmment().get('weekday')\nmoment().get('isoWeekday')\n```\n\n\n获取小时\n```\nmoment().hours()\nmoment().get('hours')\n```\n\n\n获取分钟\n```\nmoment().minutes()\nmoment().get('minutes')\n```\n\n\n获取秒数\n```\nmoment().seconds()\nmoment().get('seconds')\n```\n\n\n获取当前的年月日时分秒\n```\nmoment().toArray() // [years, months, date, hours, minutes, seconds, milliseconds]\nmoment().toObject() // {years: xxxx, months: x, date: xx ...}\n```\n\n\n\n\n设置时间\n\n\nSet Time\n```\nmoment().year(Number), moment().month(Number)...\nmoment().set(String, Int)\nmoment().set(Object)\n```\n\n\n设置年份\n```\nmoment().year(2019)\nmoment().set('year', 2019)\nmoment().set({year: 2019})\n```\n\n\n设置月份\n```\nmoment().month(11) (0~11, 0: January, 11: December)\nmoment().set('month', 11) \n```\n\n\n设置某个月中的某一天\n```\nmoment().date(15)\nmoment().set('date', 15)\n```\n\n\n设置某个星期中的某一天\n```\nmoment().weekday(0) // 设置日期为本周第一天（周日）\nmoment().isoWeekday(1) // 设置日期为本周周一\nmoment().set('weekday', 0)\nmoment().set('isoWeekday', 1)\n```\n\n\n设置小时\n```\nmoment().hours(12)\nmoment().set('hours', 12)\n```\n\n\n设置分钟\n```\nmoment().minutes(30)\nmoment().set('minutes', 30)\n```\n\n\n设置秒数\n```\nmoment().seconds(30)\nmoment().set('seconds', 30)\n```\n\n\n\n\nAdd Time\n```\nmoment().add(Number, String)\nmoment().add(Object)\n```\n\n\n设置年份\n```\nmoment().add(1, 'years')\nmoment().add({years: 1})\n```\n\n\n设置月份\n```\nmoment().add(1, 'months')\n```\n\n\n设置日期\n```\nmoment().add(1, 'days')\n```\n\n\n设置星期\n```\nmoment().add(1, 'weeks')\n```\n\n\n设置小时\n```\nmoment().add(1, 'hours')\n```\n\n\n设置分钟\n```\nmoment().add(1, 'minutes')\n```\n\n\n设置秒数\n```\nmoment().add(1, 'seconds')\n```\n\n\n\n\nSubtract Time\n```\nmoment().subtract(Number, String)\nmoment().subtract(Object)\n```\n\n\n设置年份\n```\nmoment().subtract(1, 'years')\nmoment().subtract({years: 1})\n```\n\n\n设置月份\n```\nmoment().subtract(1, 'months')\n```\n\n\n设置日期\n```\nmoment().subtract(1, 'days')\n```\n\n\n设置星期\n```\nmoment().subtract(1, 'weeks')\n```\n\n\n设置小时\n```\nmoment().subtract(1, 'hours')\n```\n\n\n设置分钟\n```\nmoment().subtract(1, 'minutes')\n```\n\n\n设置秒数\n```\nmoment().subtract(1, 'seconds')\n```\n\n\n\n\n格式化时间\n\n\nFormat Time\n```\nmoment().format()\nmoment().format(String)\n```\n\n\n格式化年月日： 'xxxx年xx月xx日'\n```\nmoment().format('YYYY年MM月DD日')\n```\n\n\n格式化年月日： 'xxxx-xx-xx'\n```\nmoment().format('YYYY-MM-DD')\n```\n\n\n格式化时分秒(24小时制)： 'xx时xx分xx秒'\n```\nmoment().format('HH时mm分ss秒')\n```\n\n\n格式化时分秒(12小时制)：'xx:xx:xx am/pm'\n```\nmoment().format('hh:mm:ss a')\n```\n\n\n格式化时间戳(以秒为单位)\n```\nmoment().format('X') // 返回值为字符串类型\n```\n\n\n格式化时间戳(以毫秒为单位)\n```\nmoment().format('x') // 返回值为字符串类型\n```\n\n\n\n\n比较时间\n\n\nDifference\n```\nmoment().diff(Moment|String|Number|Date|Array)\n```\n\n\n获取两个日期之间的时间差\n```\nlet start_date = moment().subtract(1, 'weeks')\nlet end_date = moment()\n\nend_date.diff(start_date) // 返回毫秒数\n\nend_date.diff(start_date, 'months') // 0\nend_date.diff(start_date, 'weeks') // 1\nend_date.diff(start_date, 'days') // 7\nstart_date.diff(end_date, 'days') // -7\n```\n\n\n\n转化为JavaScript原生Date对象\n```\nmoment().toDate()\nnew Date(moment())\n```\n\n\n将Moment时间转换为JavaScript原生Date对象\n```\nlet m = moment()\nlet nativeDate1 = m.toDate()\nlet nativeDate2 = new Date(m)\n\nString(nativeDate1) === String(nativeDate2) // true\n```\n\n\n实战\n\n\n获取昨日0时0分0秒到昨日23时59分59秒， 格式：[milliseconds, milliseconds]\n\n\n获取上周一到上周日时间范围，格式: [seconds, seconds]\n\n\n获取上个月第一天和最后一天时间范围， 格式：[YYYY-MM-DD, YYYY-MM-DD]\n\n作者：zhouqichao\n链接：https://www.jianshu.com/p/9c10543420de\n来源：简书\n简书著作权归作者所有，任何形式的转载都请联系作者获得授权并注明出处。\n","slug":"Moment.js常见用法总结","published":1,"updated":"2020-05-18T16:35:00.479Z","layout":"post","photos":[],"link":"","_id":"cl78qfoom000sqic94ka0ku1q","content":"<p>下载地址：<a href=\"http://momentjs.cn/\" target=\"_blank\" rel=\"noopener\">http://momentjs.cn/</a></p>\n<p>Moment.js是一个轻量级的JavaScript时间库，它方便了日常开发中对时间的操作，提高了开发效率。</p>\n<blockquote>\n<p>日常开发中，通常会对时间进行下面这几个操作：比如获取时间，设置时间，格式化时间，比较时间等等。接下来，我将按照这些操作对Moment.js中的Doc进行整理分类，方便学习和日后的查阅。</p>\n</blockquote>\n<h3 id=\"获取时间\"><a href=\"#获取时间\" class=\"headerlink\" title=\"获取时间\"></a>获取时间</h3><ul>\n<li><p>Start of Time</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().startOf(String)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>获取今天0时0分0秒</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().startOf(&apos;day&apos;)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>获取本周第一天(周日)0时0分0秒</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().startOf(&apos;week&apos;)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>获取本周周一0时0分0秒</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().startOf(&apos;isoWeek&apos;)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>获取当前月第一天0时0分0秒</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().startOf(&apos;month&apos;)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>End of Time<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().endOf(String)</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li><p>获取今天23时59分59秒</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().endOf(&apos;day&apos;)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>获取本周最后一天(周六)23时59分59秒</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().endOf(&apos;week&apos;)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>获取本周周日23时59分59秒</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().endOf(&apos;isoWeek&apos;)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>获取当前月最后一天23时59分59秒</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().endOf(&apos;month&apos;)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Days in Month</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().daysInMonth()</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>获取当前月的总天数<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().daysInMonth()</span><br></pre></td></tr></table></figure></p>\n<p>Timestamp</p>\n<ul>\n<li>获取时间戳(以秒为单位)</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().format(&apos;X&apos;) // 返回值为字符串类型</span><br><span class=\"line\">moment().unix() // 返回值为数值型</span><br></pre></td></tr></table></figure>\n<p>获取时间戳(以毫秒为单位)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().format(&apos;x&apos;) // 返回值为字符串类型</span><br><span class=\"line\">moment().valueOf() // 返回值为数值型</span><br></pre></td></tr></table></figure>\n<p>Get Time</p>\n<p>获取年<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().year()</span><br><span class=\"line\">moment().get(&apos;year&apos;)</span><br></pre></td></tr></table></figure></p>\n<p>获取月份<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().month() (0~11, 0: January, 11: December)</span><br><span class=\"line\">moment().get(&apos;month&apos;)</span><br></pre></td></tr></table></figure></p>\n<p>获取一个月中的某一天<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().date()</span><br><span class=\"line\">moment().get(&apos;date&apos;)</span><br></pre></td></tr></table></figure></p>\n<p>获取一个星期中的某一天<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().day() (0~6, 0: Sunday, 6: Saturday)</span><br><span class=\"line\">moment().weekday() (0~6, 0: Sunday, 6: Saturday)</span><br><span class=\"line\">moment().isoWeekday() (1~7, 1: Monday, 7: Sunday)</span><br><span class=\"line\">moment().get(&apos;day&apos;)</span><br><span class=\"line\">mment().get(&apos;weekday&apos;)</span><br><span class=\"line\">moment().get(&apos;isoWeekday&apos;)</span><br></pre></td></tr></table></figure></p>\n<p>获取小时<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().hours()</span><br><span class=\"line\">moment().get(&apos;hours&apos;)</span><br></pre></td></tr></table></figure></p>\n<p>获取分钟<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().minutes()</span><br><span class=\"line\">moment().get(&apos;minutes&apos;)</span><br></pre></td></tr></table></figure></p>\n<p>获取秒数<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().seconds()</span><br><span class=\"line\">moment().get(&apos;seconds&apos;)</span><br></pre></td></tr></table></figure></p>\n<p>获取当前的年月日时分秒<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().toArray() // [years, months, date, hours, minutes, seconds, milliseconds]</span><br><span class=\"line\">moment().toObject() // &#123;years: xxxx, months: x, date: xx ...&#125;</span><br></pre></td></tr></table></figure></p>\n<p>设置时间</p>\n<p>Set Time<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().year(Number), moment().month(Number)...</span><br><span class=\"line\">moment().set(String, Int)</span><br><span class=\"line\">moment().set(Object)</span><br></pre></td></tr></table></figure></p>\n<p>设置年份<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().year(2019)</span><br><span class=\"line\">moment().set(&apos;year&apos;, 2019)</span><br><span class=\"line\">moment().set(&#123;year: 2019&#125;)</span><br></pre></td></tr></table></figure></p>\n<p>设置月份<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().month(11) (0~11, 0: January, 11: December)</span><br><span class=\"line\">moment().set(&apos;month&apos;, 11)</span><br></pre></td></tr></table></figure></p>\n<p>设置某个月中的某一天<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().date(15)</span><br><span class=\"line\">moment().set(&apos;date&apos;, 15)</span><br></pre></td></tr></table></figure></p>\n<p>设置某个星期中的某一天<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().weekday(0) // 设置日期为本周第一天（周日）</span><br><span class=\"line\">moment().isoWeekday(1) // 设置日期为本周周一</span><br><span class=\"line\">moment().set(&apos;weekday&apos;, 0)</span><br><span class=\"line\">moment().set(&apos;isoWeekday&apos;, 1)</span><br></pre></td></tr></table></figure></p>\n<p>设置小时<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().hours(12)</span><br><span class=\"line\">moment().set(&apos;hours&apos;, 12)</span><br></pre></td></tr></table></figure></p>\n<p>设置分钟<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().minutes(30)</span><br><span class=\"line\">moment().set(&apos;minutes&apos;, 30)</span><br></pre></td></tr></table></figure></p>\n<p>设置秒数<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().seconds(30)</span><br><span class=\"line\">moment().set(&apos;seconds&apos;, 30)</span><br></pre></td></tr></table></figure></p>\n<p>Add Time<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().add(Number, String)</span><br><span class=\"line\">moment().add(Object)</span><br></pre></td></tr></table></figure></p>\n<p>设置年份<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().add(1, &apos;years&apos;)</span><br><span class=\"line\">moment().add(&#123;years: 1&#125;)</span><br></pre></td></tr></table></figure></p>\n<p>设置月份<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().add(1, &apos;months&apos;)</span><br></pre></td></tr></table></figure></p>\n<p>设置日期<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().add(1, &apos;days&apos;)</span><br></pre></td></tr></table></figure></p>\n<p>设置星期<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().add(1, &apos;weeks&apos;)</span><br></pre></td></tr></table></figure></p>\n<p>设置小时<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().add(1, &apos;hours&apos;)</span><br></pre></td></tr></table></figure></p>\n<p>设置分钟<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().add(1, &apos;minutes&apos;)</span><br></pre></td></tr></table></figure></p>\n<p>设置秒数<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().add(1, &apos;seconds&apos;)</span><br></pre></td></tr></table></figure></p>\n<p>Subtract Time<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().subtract(Number, String)</span><br><span class=\"line\">moment().subtract(Object)</span><br></pre></td></tr></table></figure></p>\n<p>设置年份<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().subtract(1, &apos;years&apos;)</span><br><span class=\"line\">moment().subtract(&#123;years: 1&#125;)</span><br></pre></td></tr></table></figure></p>\n<p>设置月份<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().subtract(1, &apos;months&apos;)</span><br></pre></td></tr></table></figure></p>\n<p>设置日期<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().subtract(1, &apos;days&apos;)</span><br></pre></td></tr></table></figure></p>\n<p>设置星期<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().subtract(1, &apos;weeks&apos;)</span><br></pre></td></tr></table></figure></p>\n<p>设置小时<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().subtract(1, &apos;hours&apos;)</span><br></pre></td></tr></table></figure></p>\n<p>设置分钟<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().subtract(1, &apos;minutes&apos;)</span><br></pre></td></tr></table></figure></p>\n<p>设置秒数<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().subtract(1, &apos;seconds&apos;)</span><br></pre></td></tr></table></figure></p>\n<p>格式化时间</p>\n<p>Format Time<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().format()</span><br><span class=\"line\">moment().format(String)</span><br></pre></td></tr></table></figure></p>\n<p>格式化年月日： ‘xxxx年xx月xx日’<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().format(&apos;YYYY年MM月DD日&apos;)</span><br></pre></td></tr></table></figure></p>\n<p>格式化年月日： ‘xxxx-xx-xx’<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().format(&apos;YYYY-MM-DD&apos;)</span><br></pre></td></tr></table></figure></p>\n<p>格式化时分秒(24小时制)： ‘xx时xx分xx秒’<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().format(&apos;HH时mm分ss秒&apos;)</span><br></pre></td></tr></table></figure></p>\n<p>格式化时分秒(12小时制)：’xx:xx:xx am/pm’<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().format(&apos;hh:mm:ss a&apos;)</span><br></pre></td></tr></table></figure></p>\n<p>格式化时间戳(以秒为单位)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().format(&apos;X&apos;) // 返回值为字符串类型</span><br></pre></td></tr></table></figure></p>\n<p>格式化时间戳(以毫秒为单位)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().format(&apos;x&apos;) // 返回值为字符串类型</span><br></pre></td></tr></table></figure></p>\n<p>比较时间</p>\n<p>Difference<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().diff(Moment|String|Number|Date|Array)</span><br></pre></td></tr></table></figure></p>\n<p>获取两个日期之间的时间差<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let start_date = moment().subtract(1, &apos;weeks&apos;)</span><br><span class=\"line\">let end_date = moment()</span><br><span class=\"line\"></span><br><span class=\"line\">end_date.diff(start_date) // 返回毫秒数</span><br><span class=\"line\"></span><br><span class=\"line\">end_date.diff(start_date, &apos;months&apos;) // 0</span><br><span class=\"line\">end_date.diff(start_date, &apos;weeks&apos;) // 1</span><br><span class=\"line\">end_date.diff(start_date, &apos;days&apos;) // 7</span><br><span class=\"line\">start_date.diff(end_date, &apos;days&apos;) // -7</span><br></pre></td></tr></table></figure></p>\n<p>转化为JavaScript原生Date对象<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().toDate()</span><br><span class=\"line\">new Date(moment())</span><br></pre></td></tr></table></figure></p>\n<p>将Moment时间转换为JavaScript原生Date对象<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let m = moment()</span><br><span class=\"line\">let nativeDate1 = m.toDate()</span><br><span class=\"line\">let nativeDate2 = new Date(m)</span><br><span class=\"line\"></span><br><span class=\"line\">String(nativeDate1) === String(nativeDate2) // true</span><br></pre></td></tr></table></figure></p>\n<p>实战</p>\n<p>获取昨日0时0分0秒到昨日23时59分59秒， 格式：[milliseconds, milliseconds]</p>\n<p>获取上周一到上周日时间范围，格式: [seconds, seconds]</p>\n<p>获取上个月第一天和最后一天时间范围， 格式：[YYYY-MM-DD, YYYY-MM-DD]</p>\n<p>作者：zhouqichao<br>链接：<a href=\"https://www.jianshu.com/p/9c10543420de\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/9c10543420de</a><br>来源：简书<br>简书著作权归作者所有，任何形式的转载都请联系作者获得授权并注明出处。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>下载地址：<a href=\"http://momentjs.cn/\" target=\"_blank\" rel=\"noopener\">http://momentjs.cn/</a></p>\n<p>Moment.js是一个轻量级的JavaScript时间库，它方便了日常开发中对时间的操作，提高了开发效率。</p>\n<blockquote>\n<p>日常开发中，通常会对时间进行下面这几个操作：比如获取时间，设置时间，格式化时间，比较时间等等。接下来，我将按照这些操作对Moment.js中的Doc进行整理分类，方便学习和日后的查阅。</p>\n</blockquote>\n<h3 id=\"获取时间\"><a href=\"#获取时间\" class=\"headerlink\" title=\"获取时间\"></a>获取时间</h3><ul>\n<li><p>Start of Time</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().startOf(String)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>获取今天0时0分0秒</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().startOf(&apos;day&apos;)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>获取本周第一天(周日)0时0分0秒</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().startOf(&apos;week&apos;)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>获取本周周一0时0分0秒</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().startOf(&apos;isoWeek&apos;)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>获取当前月第一天0时0分0秒</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().startOf(&apos;month&apos;)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>End of Time<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().endOf(String)</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li><p>获取今天23时59分59秒</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().endOf(&apos;day&apos;)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>获取本周最后一天(周六)23时59分59秒</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().endOf(&apos;week&apos;)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>获取本周周日23时59分59秒</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().endOf(&apos;isoWeek&apos;)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>获取当前月最后一天23时59分59秒</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().endOf(&apos;month&apos;)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Days in Month</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().daysInMonth()</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>获取当前月的总天数<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().daysInMonth()</span><br></pre></td></tr></table></figure></p>\n<p>Timestamp</p>\n<ul>\n<li>获取时间戳(以秒为单位)</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().format(&apos;X&apos;) // 返回值为字符串类型</span><br><span class=\"line\">moment().unix() // 返回值为数值型</span><br></pre></td></tr></table></figure>\n<p>获取时间戳(以毫秒为单位)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().format(&apos;x&apos;) // 返回值为字符串类型</span><br><span class=\"line\">moment().valueOf() // 返回值为数值型</span><br></pre></td></tr></table></figure>\n<p>Get Time</p>\n<p>获取年<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().year()</span><br><span class=\"line\">moment().get(&apos;year&apos;)</span><br></pre></td></tr></table></figure></p>\n<p>获取月份<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().month() (0~11, 0: January, 11: December)</span><br><span class=\"line\">moment().get(&apos;month&apos;)</span><br></pre></td></tr></table></figure></p>\n<p>获取一个月中的某一天<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().date()</span><br><span class=\"line\">moment().get(&apos;date&apos;)</span><br></pre></td></tr></table></figure></p>\n<p>获取一个星期中的某一天<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().day() (0~6, 0: Sunday, 6: Saturday)</span><br><span class=\"line\">moment().weekday() (0~6, 0: Sunday, 6: Saturday)</span><br><span class=\"line\">moment().isoWeekday() (1~7, 1: Monday, 7: Sunday)</span><br><span class=\"line\">moment().get(&apos;day&apos;)</span><br><span class=\"line\">mment().get(&apos;weekday&apos;)</span><br><span class=\"line\">moment().get(&apos;isoWeekday&apos;)</span><br></pre></td></tr></table></figure></p>\n<p>获取小时<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().hours()</span><br><span class=\"line\">moment().get(&apos;hours&apos;)</span><br></pre></td></tr></table></figure></p>\n<p>获取分钟<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().minutes()</span><br><span class=\"line\">moment().get(&apos;minutes&apos;)</span><br></pre></td></tr></table></figure></p>\n<p>获取秒数<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().seconds()</span><br><span class=\"line\">moment().get(&apos;seconds&apos;)</span><br></pre></td></tr></table></figure></p>\n<p>获取当前的年月日时分秒<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().toArray() // [years, months, date, hours, minutes, seconds, milliseconds]</span><br><span class=\"line\">moment().toObject() // &#123;years: xxxx, months: x, date: xx ...&#125;</span><br></pre></td></tr></table></figure></p>\n<p>设置时间</p>\n<p>Set Time<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().year(Number), moment().month(Number)...</span><br><span class=\"line\">moment().set(String, Int)</span><br><span class=\"line\">moment().set(Object)</span><br></pre></td></tr></table></figure></p>\n<p>设置年份<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().year(2019)</span><br><span class=\"line\">moment().set(&apos;year&apos;, 2019)</span><br><span class=\"line\">moment().set(&#123;year: 2019&#125;)</span><br></pre></td></tr></table></figure></p>\n<p>设置月份<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().month(11) (0~11, 0: January, 11: December)</span><br><span class=\"line\">moment().set(&apos;month&apos;, 11)</span><br></pre></td></tr></table></figure></p>\n<p>设置某个月中的某一天<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().date(15)</span><br><span class=\"line\">moment().set(&apos;date&apos;, 15)</span><br></pre></td></tr></table></figure></p>\n<p>设置某个星期中的某一天<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().weekday(0) // 设置日期为本周第一天（周日）</span><br><span class=\"line\">moment().isoWeekday(1) // 设置日期为本周周一</span><br><span class=\"line\">moment().set(&apos;weekday&apos;, 0)</span><br><span class=\"line\">moment().set(&apos;isoWeekday&apos;, 1)</span><br></pre></td></tr></table></figure></p>\n<p>设置小时<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().hours(12)</span><br><span class=\"line\">moment().set(&apos;hours&apos;, 12)</span><br></pre></td></tr></table></figure></p>\n<p>设置分钟<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().minutes(30)</span><br><span class=\"line\">moment().set(&apos;minutes&apos;, 30)</span><br></pre></td></tr></table></figure></p>\n<p>设置秒数<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().seconds(30)</span><br><span class=\"line\">moment().set(&apos;seconds&apos;, 30)</span><br></pre></td></tr></table></figure></p>\n<p>Add Time<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().add(Number, String)</span><br><span class=\"line\">moment().add(Object)</span><br></pre></td></tr></table></figure></p>\n<p>设置年份<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().add(1, &apos;years&apos;)</span><br><span class=\"line\">moment().add(&#123;years: 1&#125;)</span><br></pre></td></tr></table></figure></p>\n<p>设置月份<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().add(1, &apos;months&apos;)</span><br></pre></td></tr></table></figure></p>\n<p>设置日期<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().add(1, &apos;days&apos;)</span><br></pre></td></tr></table></figure></p>\n<p>设置星期<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().add(1, &apos;weeks&apos;)</span><br></pre></td></tr></table></figure></p>\n<p>设置小时<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().add(1, &apos;hours&apos;)</span><br></pre></td></tr></table></figure></p>\n<p>设置分钟<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().add(1, &apos;minutes&apos;)</span><br></pre></td></tr></table></figure></p>\n<p>设置秒数<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().add(1, &apos;seconds&apos;)</span><br></pre></td></tr></table></figure></p>\n<p>Subtract Time<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().subtract(Number, String)</span><br><span class=\"line\">moment().subtract(Object)</span><br></pre></td></tr></table></figure></p>\n<p>设置年份<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().subtract(1, &apos;years&apos;)</span><br><span class=\"line\">moment().subtract(&#123;years: 1&#125;)</span><br></pre></td></tr></table></figure></p>\n<p>设置月份<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().subtract(1, &apos;months&apos;)</span><br></pre></td></tr></table></figure></p>\n<p>设置日期<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().subtract(1, &apos;days&apos;)</span><br></pre></td></tr></table></figure></p>\n<p>设置星期<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().subtract(1, &apos;weeks&apos;)</span><br></pre></td></tr></table></figure></p>\n<p>设置小时<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().subtract(1, &apos;hours&apos;)</span><br></pre></td></tr></table></figure></p>\n<p>设置分钟<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().subtract(1, &apos;minutes&apos;)</span><br></pre></td></tr></table></figure></p>\n<p>设置秒数<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().subtract(1, &apos;seconds&apos;)</span><br></pre></td></tr></table></figure></p>\n<p>格式化时间</p>\n<p>Format Time<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().format()</span><br><span class=\"line\">moment().format(String)</span><br></pre></td></tr></table></figure></p>\n<p>格式化年月日： ‘xxxx年xx月xx日’<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().format(&apos;YYYY年MM月DD日&apos;)</span><br></pre></td></tr></table></figure></p>\n<p>格式化年月日： ‘xxxx-xx-xx’<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().format(&apos;YYYY-MM-DD&apos;)</span><br></pre></td></tr></table></figure></p>\n<p>格式化时分秒(24小时制)： ‘xx时xx分xx秒’<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().format(&apos;HH时mm分ss秒&apos;)</span><br></pre></td></tr></table></figure></p>\n<p>格式化时分秒(12小时制)：’xx:xx:xx am/pm’<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().format(&apos;hh:mm:ss a&apos;)</span><br></pre></td></tr></table></figure></p>\n<p>格式化时间戳(以秒为单位)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().format(&apos;X&apos;) // 返回值为字符串类型</span><br></pre></td></tr></table></figure></p>\n<p>格式化时间戳(以毫秒为单位)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().format(&apos;x&apos;) // 返回值为字符串类型</span><br></pre></td></tr></table></figure></p>\n<p>比较时间</p>\n<p>Difference<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().diff(Moment|String|Number|Date|Array)</span><br></pre></td></tr></table></figure></p>\n<p>获取两个日期之间的时间差<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let start_date = moment().subtract(1, &apos;weeks&apos;)</span><br><span class=\"line\">let end_date = moment()</span><br><span class=\"line\"></span><br><span class=\"line\">end_date.diff(start_date) // 返回毫秒数</span><br><span class=\"line\"></span><br><span class=\"line\">end_date.diff(start_date, &apos;months&apos;) // 0</span><br><span class=\"line\">end_date.diff(start_date, &apos;weeks&apos;) // 1</span><br><span class=\"line\">end_date.diff(start_date, &apos;days&apos;) // 7</span><br><span class=\"line\">start_date.diff(end_date, &apos;days&apos;) // -7</span><br></pre></td></tr></table></figure></p>\n<p>转化为JavaScript原生Date对象<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">moment().toDate()</span><br><span class=\"line\">new Date(moment())</span><br></pre></td></tr></table></figure></p>\n<p>将Moment时间转换为JavaScript原生Date对象<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let m = moment()</span><br><span class=\"line\">let nativeDate1 = m.toDate()</span><br><span class=\"line\">let nativeDate2 = new Date(m)</span><br><span class=\"line\"></span><br><span class=\"line\">String(nativeDate1) === String(nativeDate2) // true</span><br></pre></td></tr></table></figure></p>\n<p>实战</p>\n<p>获取昨日0时0分0秒到昨日23时59分59秒， 格式：[milliseconds, milliseconds]</p>\n<p>获取上周一到上周日时间范围，格式: [seconds, seconds]</p>\n<p>获取上个月第一天和最后一天时间范围， 格式：[YYYY-MM-DD, YYYY-MM-DD]</p>\n<p>作者：zhouqichao<br>链接：<a href=\"https://www.jianshu.com/p/9c10543420de\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/9c10543420de</a><br>来源：简书<br>简书著作权归作者所有，任何形式的转载都请联系作者获得授权并注明出处。</p>\n"},{"title":"Web端使用jquerer_emoji表情","comments":1,"abbrlink":"59c352fb","date":"2018-10-08T13:21:57.000Z","_content":"\n[参考emoji_jquery](https://github.com/eshengsky/jQuery-emoji)\n\n在使用这个插件的时候解析过程比较困扰，在`<textarea>`文本框的情况下无法解析他的值，因此找到手动解析的方法。\n\n### 安装install\n\n```shell\n$ npm install --save jQuery-emoji\n```\n\n### 页面引用\n\n- 首先在页面上引用css文件和js文件，css文件一般在`<head>`中添加，js文件一般在`</body>`之前添加。注意要先引用jquery和jquery.mCustomScrollbar，再引用该js。\n\n```html\n<head>\n    <!--the css for jquery.mCustomScrollbar-->\n    <link rel=\"stylesheet\" href=\"lib/css/jquery.mCustomScrollbar.min.css\"/>\n    <!--the css for this plugin-->\n    <link rel=\"stylesheet\" href=\"css/jquery.emoji.css\"/>\n</head>\n\n<body>   \n    <script src=\"http://cdn.bootcss.com/jquery/1.11.3/jquery.js\"></script>\n\t<!--(Optional) the js for jquery.mCustomScrollbar's addon-->\n\t<script src=\"lib/script/jquery.mousewheel-3.0.6.min.js\"></script>\n\t<!--the js for jquery.mCustomScrollbar-->\n\t<script src=\"lib/script/jquery.mCustomScrollbar.min.js\"></script>\n\t<!--the js for this plugin-->\n\t<script src=\"js/jquery.emoji.js\"></script>\n</body>\n```\n\n### 调用\n\n- 在文本框或可编辑div上初始化emoji\n\n```javascript\n$(\"#content\").emoji(options);\n```\n\n[options参数和方法](http://eshengsky.github.io/jQuery-emoji/)\n\n### 使用\n\n##### Html部分\n\n```html\n<div ic=\"content\"></div>\n<textarea id=\"message\" placeholder=\"请在此输入文本或上传图片\"></textarea>\n<input type=\"button\" id=\"btn\">\n```\n\n##### Js部分\n\n```javascript\n//给元素绑定表情 option里参数参照上面官方\n$(\"#message\").emoji({\n        button:\"#face\",\n        showTab: true,\n        animation: 'fade',\n        icons: [{\n            name: \"贴吧表情\",\n            path: \"lib/eshengsky-jQuery-emoji/dist/img/tieba/\",\n            maxNum: 50,\n            file: \".jpg\",\n            placeholder: \"[emoji_{alias}]\",\n\n        }, {\n            name: \"QQ高清\",\n            path: \"lib/eshengsky-jQuery-emoji/dist/img/qq/\",\n            maxNum: 91,\n            excludeNums: [41, 45, 54],\n            file: \".gif\",\n            placeholder: \"[qq_{alias}]\"\n        }, {\n            name: \"emoji高清\",\n            path: \"lib/eshengsky-jQuery-emoji/dist/img/emoji/\",\n            maxNum: 84,\n            file: \".png\",\n            placeholder: \"[em_{alias}]\"\n        }]\n    });\n// 解析方法\n$('#btn').click(funtion(){\n\tvar contents = $('#message').val();\n\tcontents = replace_em(contents);\n\tonsole.log(contents)；\n    $('#content').html(contents);\n})\n\n// 手动解析规则\nfunction replace_em(str){\n        str = str.replace(/\\</g,'&lt;');\n        str = str.replace(/\\>/g,'&gt;');\n        str = str.replace(/\\n/g,'<br/>');\n        str = str.replace(/\\[qq_([0-9]*)\\]/g,\"<img src='lib/eshengsky-jQuery-emoji/dist/img/qq/$1.gif' />\");\n        str = str.replace(/\\[em_([0-9]*)\\]/g,\"<img src='lib/eshengsky-jQuery-emoji/dist/img/emoji/$1.png'  />\");\n        str = str.replace(/\\[emoji_([0-9]*)\\]/g,\"<img src='lib/eshengsky-jQuery-emoji/dist/img/tieba/$1.jpg' />\");\n        return str;\n    }\n```\n\n官方转换方法有点复杂，转换不了`<textarea>`输入的值，可能要修改官方的解析方法。\n\n[延伸插件](https://github.com/li914/emoji_jQuery)","source":"_posts/Web端使用jquerer-emoji表情.md","raw":"---\ntitle: Web端使用jquerer_emoji表情\ncomments: true\ncategories:\n  - jQuer\n  - JS插件\ntags:\n  - JS插件\n  - JavaScript\nabbrlink: 59c352fb\ndate: 2018-10-08 21:21:57\n---\n\n[参考emoji_jquery](https://github.com/eshengsky/jQuery-emoji)\n\n在使用这个插件的时候解析过程比较困扰，在`<textarea>`文本框的情况下无法解析他的值，因此找到手动解析的方法。\n\n### 安装install\n\n```shell\n$ npm install --save jQuery-emoji\n```\n\n### 页面引用\n\n- 首先在页面上引用css文件和js文件，css文件一般在`<head>`中添加，js文件一般在`</body>`之前添加。注意要先引用jquery和jquery.mCustomScrollbar，再引用该js。\n\n```html\n<head>\n    <!--the css for jquery.mCustomScrollbar-->\n    <link rel=\"stylesheet\" href=\"lib/css/jquery.mCustomScrollbar.min.css\"/>\n    <!--the css for this plugin-->\n    <link rel=\"stylesheet\" href=\"css/jquery.emoji.css\"/>\n</head>\n\n<body>   \n    <script src=\"http://cdn.bootcss.com/jquery/1.11.3/jquery.js\"></script>\n\t<!--(Optional) the js for jquery.mCustomScrollbar's addon-->\n\t<script src=\"lib/script/jquery.mousewheel-3.0.6.min.js\"></script>\n\t<!--the js for jquery.mCustomScrollbar-->\n\t<script src=\"lib/script/jquery.mCustomScrollbar.min.js\"></script>\n\t<!--the js for this plugin-->\n\t<script src=\"js/jquery.emoji.js\"></script>\n</body>\n```\n\n### 调用\n\n- 在文本框或可编辑div上初始化emoji\n\n```javascript\n$(\"#content\").emoji(options);\n```\n\n[options参数和方法](http://eshengsky.github.io/jQuery-emoji/)\n\n### 使用\n\n##### Html部分\n\n```html\n<div ic=\"content\"></div>\n<textarea id=\"message\" placeholder=\"请在此输入文本或上传图片\"></textarea>\n<input type=\"button\" id=\"btn\">\n```\n\n##### Js部分\n\n```javascript\n//给元素绑定表情 option里参数参照上面官方\n$(\"#message\").emoji({\n        button:\"#face\",\n        showTab: true,\n        animation: 'fade',\n        icons: [{\n            name: \"贴吧表情\",\n            path: \"lib/eshengsky-jQuery-emoji/dist/img/tieba/\",\n            maxNum: 50,\n            file: \".jpg\",\n            placeholder: \"[emoji_{alias}]\",\n\n        }, {\n            name: \"QQ高清\",\n            path: \"lib/eshengsky-jQuery-emoji/dist/img/qq/\",\n            maxNum: 91,\n            excludeNums: [41, 45, 54],\n            file: \".gif\",\n            placeholder: \"[qq_{alias}]\"\n        }, {\n            name: \"emoji高清\",\n            path: \"lib/eshengsky-jQuery-emoji/dist/img/emoji/\",\n            maxNum: 84,\n            file: \".png\",\n            placeholder: \"[em_{alias}]\"\n        }]\n    });\n// 解析方法\n$('#btn').click(funtion(){\n\tvar contents = $('#message').val();\n\tcontents = replace_em(contents);\n\tonsole.log(contents)；\n    $('#content').html(contents);\n})\n\n// 手动解析规则\nfunction replace_em(str){\n        str = str.replace(/\\</g,'&lt;');\n        str = str.replace(/\\>/g,'&gt;');\n        str = str.replace(/\\n/g,'<br/>');\n        str = str.replace(/\\[qq_([0-9]*)\\]/g,\"<img src='lib/eshengsky-jQuery-emoji/dist/img/qq/$1.gif' />\");\n        str = str.replace(/\\[em_([0-9]*)\\]/g,\"<img src='lib/eshengsky-jQuery-emoji/dist/img/emoji/$1.png'  />\");\n        str = str.replace(/\\[emoji_([0-9]*)\\]/g,\"<img src='lib/eshengsky-jQuery-emoji/dist/img/tieba/$1.jpg' />\");\n        return str;\n    }\n```\n\n官方转换方法有点复杂，转换不了`<textarea>`输入的值，可能要修改官方的解析方法。\n\n[延伸插件](https://github.com/li914/emoji_jQuery)","slug":"Web端使用jquerer-emoji表情","published":1,"updated":"2020-05-18T16:35:00.480Z","layout":"post","photos":[],"link":"","_id":"cl78qfoon000uqic9udbmrdh9","content":"<p><a href=\"https://github.com/eshengsky/jQuery-emoji\" target=\"_blank\" rel=\"noopener\">参考emoji_jquery</a></p>\n<p>在使用这个插件的时候解析过程比较困扰，在<code>&lt;textarea&gt;</code>文本框的情况下无法解析他的值，因此找到手动解析的方法。</p>\n<h3 id=\"安装install\"><a href=\"#安装install\" class=\"headerlink\" title=\"安装install\"></a>安装install</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> npm install --save jQuery-emoji</span><br></pre></td></tr></table></figure>\n<h3 id=\"页面引用\"><a href=\"#页面引用\" class=\"headerlink\" title=\"页面引用\"></a>页面引用</h3><ul>\n<li>首先在页面上引用css文件和js文件，css文件一般在<code>&lt;head&gt;</code>中添加，js文件一般在<code>&lt;/body&gt;</code>之前添加。注意要先引用jquery和jquery.mCustomScrollbar，再引用该js。</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--the css for jquery.mCustomScrollbar--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"lib/css/jquery.mCustomScrollbar.min.css\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--the css for this plugin--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"css/jquery.emoji.css\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span>   </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://cdn.bootcss.com/jquery/1.11.3/jquery.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"comment\">&lt;!--(Optional) the js for jquery.mCustomScrollbar's addon--&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"lib/script/jquery.mousewheel-3.0.6.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"comment\">&lt;!--the js for jquery.mCustomScrollbar--&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"lib/script/jquery.mCustomScrollbar.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"comment\">&lt;!--the js for this plugin--&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"js/jquery.emoji.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"调用\"><a href=\"#调用\" class=\"headerlink\" title=\"调用\"></a>调用</h3><ul>\n<li>在文本框或可编辑div上初始化emoji</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">\"#content\"</span>).emoji(options);</span><br></pre></td></tr></table></figure>\n<p><a href=\"http://eshengsky.github.io/jQuery-emoji/\" target=\"_blank\" rel=\"noopener\">options参数和方法</a></p>\n<h3 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h3><h5 id=\"Html部分\"><a href=\"#Html部分\" class=\"headerlink\" title=\"Html部分\"></a>Html部分</h5><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">ic</span>=<span class=\"string\">\"content\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">textarea</span> <span class=\"attr\">id</span>=<span class=\"string\">\"message\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"请在此输入文本或上传图片\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">textarea</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"btn\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"Js部分\"><a href=\"#Js部分\" class=\"headerlink\" title=\"Js部分\"></a>Js部分</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//给元素绑定表情 option里参数参照上面官方</span></span><br><span class=\"line\">$(<span class=\"string\">\"#message\"</span>).emoji(&#123;</span><br><span class=\"line\">        button:<span class=\"string\">\"#face\"</span>,</span><br><span class=\"line\">        showTab: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        animation: <span class=\"string\">'fade'</span>,</span><br><span class=\"line\">        icons: [&#123;</span><br><span class=\"line\">            name: <span class=\"string\">\"贴吧表情\"</span>,</span><br><span class=\"line\">            path: <span class=\"string\">\"lib/eshengsky-jQuery-emoji/dist/img/tieba/\"</span>,</span><br><span class=\"line\">            maxNum: <span class=\"number\">50</span>,</span><br><span class=\"line\">            file: <span class=\"string\">\".jpg\"</span>,</span><br><span class=\"line\">            placeholder: <span class=\"string\">\"[emoji_&#123;alias&#125;]\"</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;, &#123;</span><br><span class=\"line\">            name: <span class=\"string\">\"QQ高清\"</span>,</span><br><span class=\"line\">            path: <span class=\"string\">\"lib/eshengsky-jQuery-emoji/dist/img/qq/\"</span>,</span><br><span class=\"line\">            maxNum: <span class=\"number\">91</span>,</span><br><span class=\"line\">            excludeNums: [<span class=\"number\">41</span>, <span class=\"number\">45</span>, <span class=\"number\">54</span>],</span><br><span class=\"line\">            file: <span class=\"string\">\".gif\"</span>,</span><br><span class=\"line\">            placeholder: <span class=\"string\">\"[qq_&#123;alias&#125;]\"</span></span><br><span class=\"line\">        &#125;, &#123;</span><br><span class=\"line\">            name: <span class=\"string\">\"emoji高清\"</span>,</span><br><span class=\"line\">            path: <span class=\"string\">\"lib/eshengsky-jQuery-emoji/dist/img/emoji/\"</span>,</span><br><span class=\"line\">            maxNum: <span class=\"number\">84</span>,</span><br><span class=\"line\">            file: <span class=\"string\">\".png\"</span>,</span><br><span class=\"line\">            placeholder: <span class=\"string\">\"[em_&#123;alias&#125;]\"</span></span><br><span class=\"line\">        &#125;]</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"><span class=\"comment\">// 解析方法</span></span><br><span class=\"line\">$(<span class=\"string\">'#btn'</span>).click(funtion()&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> contents = $(<span class=\"string\">'#message'</span>).val();</span><br><span class=\"line\">\tcontents = replace_em(contents);</span><br><span class=\"line\">\tonsole.log(contents)；</span><br><span class=\"line\">    $(<span class=\"string\">'#content'</span>).html(contents);</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 手动解析规则</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">replace_em</span>(<span class=\"params\">str</span>)</span>&#123;</span><br><span class=\"line\">        str = str.replace(<span class=\"regexp\">/\\&lt;/g</span>,<span class=\"string\">'&amp;lt;'</span>);</span><br><span class=\"line\">        str = str.replace(<span class=\"regexp\">/\\&gt;/g</span>,<span class=\"string\">'&amp;gt;'</span>);</span><br><span class=\"line\">        str = str.replace(<span class=\"regexp\">/\\n/g</span>,<span class=\"string\">'&lt;br/&gt;'</span>);</span><br><span class=\"line\">        str = str.replace(<span class=\"regexp\">/\\[qq_([0-9]*)\\]/g</span>,<span class=\"string\">\"&lt;img src='lib/eshengsky-jQuery-emoji/dist/img/qq/$1.gif' /&gt;\"</span>);</span><br><span class=\"line\">        str = str.replace(<span class=\"regexp\">/\\[em_([0-9]*)\\]/g</span>,<span class=\"string\">\"&lt;img src='lib/eshengsky-jQuery-emoji/dist/img/emoji/$1.png'  /&gt;\"</span>);</span><br><span class=\"line\">        str = str.replace(<span class=\"regexp\">/\\[emoji_([0-9]*)\\]/g</span>,<span class=\"string\">\"&lt;img src='lib/eshengsky-jQuery-emoji/dist/img/tieba/$1.jpg' /&gt;\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> str;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>官方转换方法有点复杂，转换不了<code>&lt;textarea&gt;</code>输入的值，可能要修改官方的解析方法。</p>\n<p><a href=\"https://github.com/li914/emoji_jQuery\" target=\"_blank\" rel=\"noopener\">延伸插件</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://github.com/eshengsky/jQuery-emoji\" target=\"_blank\" rel=\"noopener\">参考emoji_jquery</a></p>\n<p>在使用这个插件的时候解析过程比较困扰，在<code>&lt;textarea&gt;</code>文本框的情况下无法解析他的值，因此找到手动解析的方法。</p>\n<h3 id=\"安装install\"><a href=\"#安装install\" class=\"headerlink\" title=\"安装install\"></a>安装install</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> npm install --save jQuery-emoji</span><br></pre></td></tr></table></figure>\n<h3 id=\"页面引用\"><a href=\"#页面引用\" class=\"headerlink\" title=\"页面引用\"></a>页面引用</h3><ul>\n<li>首先在页面上引用css文件和js文件，css文件一般在<code>&lt;head&gt;</code>中添加，js文件一般在<code>&lt;/body&gt;</code>之前添加。注意要先引用jquery和jquery.mCustomScrollbar，再引用该js。</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--the css for jquery.mCustomScrollbar--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"lib/css/jquery.mCustomScrollbar.min.css\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--the css for this plugin--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"css/jquery.emoji.css\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span>   </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://cdn.bootcss.com/jquery/1.11.3/jquery.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"comment\">&lt;!--(Optional) the js for jquery.mCustomScrollbar's addon--&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"lib/script/jquery.mousewheel-3.0.6.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"comment\">&lt;!--the js for jquery.mCustomScrollbar--&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"lib/script/jquery.mCustomScrollbar.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"comment\">&lt;!--the js for this plugin--&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"js/jquery.emoji.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"调用\"><a href=\"#调用\" class=\"headerlink\" title=\"调用\"></a>调用</h3><ul>\n<li>在文本框或可编辑div上初始化emoji</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">\"#content\"</span>).emoji(options);</span><br></pre></td></tr></table></figure>\n<p><a href=\"http://eshengsky.github.io/jQuery-emoji/\" target=\"_blank\" rel=\"noopener\">options参数和方法</a></p>\n<h3 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h3><h5 id=\"Html部分\"><a href=\"#Html部分\" class=\"headerlink\" title=\"Html部分\"></a>Html部分</h5><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">ic</span>=<span class=\"string\">\"content\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">textarea</span> <span class=\"attr\">id</span>=<span class=\"string\">\"message\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"请在此输入文本或上传图片\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">textarea</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"btn\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"Js部分\"><a href=\"#Js部分\" class=\"headerlink\" title=\"Js部分\"></a>Js部分</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//给元素绑定表情 option里参数参照上面官方</span></span><br><span class=\"line\">$(<span class=\"string\">\"#message\"</span>).emoji(&#123;</span><br><span class=\"line\">        button:<span class=\"string\">\"#face\"</span>,</span><br><span class=\"line\">        showTab: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        animation: <span class=\"string\">'fade'</span>,</span><br><span class=\"line\">        icons: [&#123;</span><br><span class=\"line\">            name: <span class=\"string\">\"贴吧表情\"</span>,</span><br><span class=\"line\">            path: <span class=\"string\">\"lib/eshengsky-jQuery-emoji/dist/img/tieba/\"</span>,</span><br><span class=\"line\">            maxNum: <span class=\"number\">50</span>,</span><br><span class=\"line\">            file: <span class=\"string\">\".jpg\"</span>,</span><br><span class=\"line\">            placeholder: <span class=\"string\">\"[emoji_&#123;alias&#125;]\"</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;, &#123;</span><br><span class=\"line\">            name: <span class=\"string\">\"QQ高清\"</span>,</span><br><span class=\"line\">            path: <span class=\"string\">\"lib/eshengsky-jQuery-emoji/dist/img/qq/\"</span>,</span><br><span class=\"line\">            maxNum: <span class=\"number\">91</span>,</span><br><span class=\"line\">            excludeNums: [<span class=\"number\">41</span>, <span class=\"number\">45</span>, <span class=\"number\">54</span>],</span><br><span class=\"line\">            file: <span class=\"string\">\".gif\"</span>,</span><br><span class=\"line\">            placeholder: <span class=\"string\">\"[qq_&#123;alias&#125;]\"</span></span><br><span class=\"line\">        &#125;, &#123;</span><br><span class=\"line\">            name: <span class=\"string\">\"emoji高清\"</span>,</span><br><span class=\"line\">            path: <span class=\"string\">\"lib/eshengsky-jQuery-emoji/dist/img/emoji/\"</span>,</span><br><span class=\"line\">            maxNum: <span class=\"number\">84</span>,</span><br><span class=\"line\">            file: <span class=\"string\">\".png\"</span>,</span><br><span class=\"line\">            placeholder: <span class=\"string\">\"[em_&#123;alias&#125;]\"</span></span><br><span class=\"line\">        &#125;]</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"><span class=\"comment\">// 解析方法</span></span><br><span class=\"line\">$(<span class=\"string\">'#btn'</span>).click(funtion()&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> contents = $(<span class=\"string\">'#message'</span>).val();</span><br><span class=\"line\">\tcontents = replace_em(contents);</span><br><span class=\"line\">\tonsole.log(contents)；</span><br><span class=\"line\">    $(<span class=\"string\">'#content'</span>).html(contents);</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 手动解析规则</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">replace_em</span>(<span class=\"params\">str</span>)</span>&#123;</span><br><span class=\"line\">        str = str.replace(<span class=\"regexp\">/\\&lt;/g</span>,<span class=\"string\">'&amp;lt;'</span>);</span><br><span class=\"line\">        str = str.replace(<span class=\"regexp\">/\\&gt;/g</span>,<span class=\"string\">'&amp;gt;'</span>);</span><br><span class=\"line\">        str = str.replace(<span class=\"regexp\">/\\n/g</span>,<span class=\"string\">'&lt;br/&gt;'</span>);</span><br><span class=\"line\">        str = str.replace(<span class=\"regexp\">/\\[qq_([0-9]*)\\]/g</span>,<span class=\"string\">\"&lt;img src='lib/eshengsky-jQuery-emoji/dist/img/qq/$1.gif' /&gt;\"</span>);</span><br><span class=\"line\">        str = str.replace(<span class=\"regexp\">/\\[em_([0-9]*)\\]/g</span>,<span class=\"string\">\"&lt;img src='lib/eshengsky-jQuery-emoji/dist/img/emoji/$1.png'  /&gt;\"</span>);</span><br><span class=\"line\">        str = str.replace(<span class=\"regexp\">/\\[emoji_([0-9]*)\\]/g</span>,<span class=\"string\">\"&lt;img src='lib/eshengsky-jQuery-emoji/dist/img/tieba/$1.jpg' /&gt;\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> str;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>官方转换方法有点复杂，转换不了<code>&lt;textarea&gt;</code>输入的值，可能要修改官方的解析方法。</p>\n<p><a href=\"https://github.com/li914/emoji_jQuery\" target=\"_blank\" rel=\"noopener\">延伸插件</a></p>\n"},{"title":"Threejs导出GLTF","comments":1,"abbrlink":"f781f6cc","date":"2020-12-15T07:08:30.000Z","_content":"\n\n> 需要在文件里引入`GLTFExporter.js`\n\n```javascript\nfunction save(blob, filename) {\n    var link = document.createElement('a');\n    link.style.display = 'none';\n    link.href = URL.createObjectURL(blob);\n    link.download = filename || 'data.json';\n    link.click();\n}\nfunction saveString(text, filename) {\n    save(new Blob([text], { type: 'text/plain' }), filename);\n}\nfunction OnExportGLTF() {\n    var exporter = new THREE.GLTFExporter();\n    exporter.parse(scene3D, (result)=>{\n        saveString(JSON.stringify(result), `demo.gltf`)\n    });\n}\n```\n\n报错:`geometry.getAttribute is not a function`查看元素确实没有`getAttribute`方法，因此手动添加该方法解决报错\n\n![](http://img.cdn.vmccc.cn/20201215145546.jpg)\n\n```\n// 在报错地方前面添加即可\nif (typeof(geometry)==\"object\") {\n\tgeometry.getAttribute = function (name) {\n\t\treturn geometry[name];\n\t}\n\tgeometry.addAttribute = function (name, val) {\n\t\tgeometry[name] = val;\n\t}\n}\n\n```","source":"_posts/Threejs导出GLTF.md","raw":"---\ntitle: Threejs导出GLTF\ncomments: true\ncategories:\n  - ThreeJs\ntags:\n  - ThreeJs\nabbrlink: f781f6cc\ndate: 2020-12-15 15:08:30\n---\n\n\n> 需要在文件里引入`GLTFExporter.js`\n\n```javascript\nfunction save(blob, filename) {\n    var link = document.createElement('a');\n    link.style.display = 'none';\n    link.href = URL.createObjectURL(blob);\n    link.download = filename || 'data.json';\n    link.click();\n}\nfunction saveString(text, filename) {\n    save(new Blob([text], { type: 'text/plain' }), filename);\n}\nfunction OnExportGLTF() {\n    var exporter = new THREE.GLTFExporter();\n    exporter.parse(scene3D, (result)=>{\n        saveString(JSON.stringify(result), `demo.gltf`)\n    });\n}\n```\n\n报错:`geometry.getAttribute is not a function`查看元素确实没有`getAttribute`方法，因此手动添加该方法解决报错\n\n![](http://img.cdn.vmccc.cn/20201215145546.jpg)\n\n```\n// 在报错地方前面添加即可\nif (typeof(geometry)==\"object\") {\n\tgeometry.getAttribute = function (name) {\n\t\treturn geometry[name];\n\t}\n\tgeometry.addAttribute = function (name, val) {\n\t\tgeometry[name] = val;\n\t}\n}\n\n```","slug":"Threejs导出GLTF","published":1,"updated":"2020-12-15T07:11:02.725Z","layout":"post","photos":[],"link":"","_id":"cl78qfooo000xqic98fsrehir","content":"<blockquote>\n<p>需要在文件里引入<code>GLTFExporter.js</code></p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">save</span>(<span class=\"params\">blob, filename</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> link = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'a'</span>);</span><br><span class=\"line\">    link.style.display = <span class=\"string\">'none'</span>;</span><br><span class=\"line\">    link.href = URL.createObjectURL(blob);</span><br><span class=\"line\">    link.download = filename || <span class=\"string\">'data.json'</span>;</span><br><span class=\"line\">    link.click();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">saveString</span>(<span class=\"params\">text, filename</span>) </span>&#123;</span><br><span class=\"line\">    save(<span class=\"keyword\">new</span> Blob([text], &#123; <span class=\"attr\">type</span>: <span class=\"string\">'text/plain'</span> &#125;), filename);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">OnExportGLTF</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> exporter = <span class=\"keyword\">new</span> THREE.GLTFExporter();</span><br><span class=\"line\">    exporter.parse(scene3D, (result)=&gt;&#123;</span><br><span class=\"line\">        saveString(<span class=\"built_in\">JSON</span>.stringify(result), <span class=\"string\">`demo.gltf`</span>)</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>报错:<code>geometry.getAttribute is not a function</code>查看元素确实没有<code>getAttribute</code>方法，因此手动添加该方法解决报错</p>\n<p><img src=\"http://img.cdn.vmccc.cn/20201215145546.jpg\" alt=\"\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 在报错地方前面添加即可</span><br><span class=\"line\">if (typeof(geometry)==&quot;object&quot;) &#123;</span><br><span class=\"line\">\tgeometry.getAttribute = function (name) &#123;</span><br><span class=\"line\">\t\treturn geometry[name];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tgeometry.addAttribute = function (name, val) &#123;</span><br><span class=\"line\">\t\tgeometry[name] = val;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>需要在文件里引入<code>GLTFExporter.js</code></p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">save</span>(<span class=\"params\">blob, filename</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> link = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'a'</span>);</span><br><span class=\"line\">    link.style.display = <span class=\"string\">'none'</span>;</span><br><span class=\"line\">    link.href = URL.createObjectURL(blob);</span><br><span class=\"line\">    link.download = filename || <span class=\"string\">'data.json'</span>;</span><br><span class=\"line\">    link.click();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">saveString</span>(<span class=\"params\">text, filename</span>) </span>&#123;</span><br><span class=\"line\">    save(<span class=\"keyword\">new</span> Blob([text], &#123; <span class=\"attr\">type</span>: <span class=\"string\">'text/plain'</span> &#125;), filename);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">OnExportGLTF</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> exporter = <span class=\"keyword\">new</span> THREE.GLTFExporter();</span><br><span class=\"line\">    exporter.parse(scene3D, (result)=&gt;&#123;</span><br><span class=\"line\">        saveString(<span class=\"built_in\">JSON</span>.stringify(result), <span class=\"string\">`demo.gltf`</span>)</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>报错:<code>geometry.getAttribute is not a function</code>查看元素确实没有<code>getAttribute</code>方法，因此手动添加该方法解决报错</p>\n<p><img src=\"http://img.cdn.vmccc.cn/20201215145546.jpg\" alt=\"\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 在报错地方前面添加即可</span><br><span class=\"line\">if (typeof(geometry)==&quot;object&quot;) &#123;</span><br><span class=\"line\">\tgeometry.getAttribute = function (name) &#123;</span><br><span class=\"line\">\t\treturn geometry[name];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tgeometry.addAttribute = function (name, val) &#123;</span><br><span class=\"line\">\t\tgeometry[name] = val;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"bootstrap导航缩小折叠问题","comments":1,"abbrlink":"2665f262","date":"2019-03-19T14:57:27.000Z","_content":"\n## 示例代码\n```javascript\n <nav class=\"navbar navbar-inverse navbar-fixed-top mr-nav \">\n        <div class=\"container\">\n            <div id=\"navbar\" class=\"collapse navbar-collapse\">\n                <ul class=\"nav navbar-nav\">\n                    <li class=\"active\"><a href=\"#\">首页</a></li>\n                    <li><a href=\"#about\">关于我们</a></li>\n                    <li><a href=\"product.html\">产品介绍</a></li>\n                    <li><a href=\"joinus.html\">加入我们</a></li>\n                    <li><a href=\"series.html\">联系我们</a></li>\n                </ul>\n            </div>\n        </div>\n    </nav>\n```\n\n## css解决办法\n```javascript\n/*解决bootstarp导航缩小折叠问题*/\n@media (max-width: 768px){\n    .navbar-nav {\n        visibility: visible;\n        width: 1000px;\n        margin: 0;\n    }\n}\n.navbar-collapse{\n    display: block !important;\n    height: auto !important;\n    padding-bottom: 0;\n    overflow: visible !important;\n    visibility: visible !important;\n}\n.nav>li{\n    float: left;\n}\n#navbar{\n    border: none;\n}\n```","source":"_posts/bootstrap导航缩小折叠问题.md","raw":"---\ntitle: bootstrap导航缩小折叠问题\ncomments: true\ncategories:\n  - CSS\ntags:\n  - Bootstrap\n  - CSS\nabbrlink: 2665f262\ndate: 2019-03-19 22:57:27\n---\n\n## 示例代码\n```javascript\n <nav class=\"navbar navbar-inverse navbar-fixed-top mr-nav \">\n        <div class=\"container\">\n            <div id=\"navbar\" class=\"collapse navbar-collapse\">\n                <ul class=\"nav navbar-nav\">\n                    <li class=\"active\"><a href=\"#\">首页</a></li>\n                    <li><a href=\"#about\">关于我们</a></li>\n                    <li><a href=\"product.html\">产品介绍</a></li>\n                    <li><a href=\"joinus.html\">加入我们</a></li>\n                    <li><a href=\"series.html\">联系我们</a></li>\n                </ul>\n            </div>\n        </div>\n    </nav>\n```\n\n## css解决办法\n```javascript\n/*解决bootstarp导航缩小折叠问题*/\n@media (max-width: 768px){\n    .navbar-nav {\n        visibility: visible;\n        width: 1000px;\n        margin: 0;\n    }\n}\n.navbar-collapse{\n    display: block !important;\n    height: auto !important;\n    padding-bottom: 0;\n    overflow: visible !important;\n    visibility: visible !important;\n}\n.nav>li{\n    float: left;\n}\n#navbar{\n    border: none;\n}\n```","slug":"bootstrap导航缩小折叠问题","published":1,"updated":"2020-05-18T16:35:00.481Z","layout":"post","photos":[],"link":"","_id":"cl78qfooq0011qic9fiq3ksud","content":"<h2 id=\"示例代码\"><a href=\"#示例代码\" class=\"headerlink\" title=\"示例代码\"></a>示例代码</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;nav <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"navbar navbar-inverse navbar-fixed-top mr-nav \"</span>&gt;</span><br><span class=\"line\">       &lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"container\"</span>&gt;</span><br><span class=\"line\">           &lt;div id=<span class=\"string\">\"navbar\"</span> <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"collapse navbar-collapse\"</span>&gt;</span><br><span class=\"line\">               &lt;ul <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"nav navbar-nav\"</span>&gt;</span><br><span class=\"line\">                   &lt;li <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"active\"</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>首页<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\">                   &lt;li&gt;<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#about\"</span>&gt;</span>关于我们<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\">                   &lt;li&gt;<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"product.html\"</span>&gt;</span>产品介绍<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\">                   &lt;li&gt;<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"joinus.html\"</span>&gt;</span>加入我们<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\">                   &lt;li&gt;<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"series.html\"</span>&gt;</span>联系我们<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\">               &lt;<span class=\"regexp\">/ul&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">           &lt;/</span>div&gt;</span><br><span class=\"line\">       &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">   &lt;/</span>nav&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"css解决办法\"><a href=\"#css解决办法\" class=\"headerlink\" title=\"css解决办法\"></a>css解决办法</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*解决bootstarp导航缩小折叠问题*/</span></span><br><span class=\"line\">@media (max-width: <span class=\"number\">768</span>px)&#123;</span><br><span class=\"line\">    .navbar-nav &#123;</span><br><span class=\"line\">        visibility: visible;</span><br><span class=\"line\">        width: <span class=\"number\">1000</span>px;</span><br><span class=\"line\">        margin: <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.navbar-collapse&#123;</span><br><span class=\"line\">    display: block !important;</span><br><span class=\"line\">    height: auto !important;</span><br><span class=\"line\">    padding-bottom: <span class=\"number\">0</span>;</span><br><span class=\"line\">    overflow: visible !important;</span><br><span class=\"line\">    visibility: visible !important;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.nav&gt;li&#123;</span><br><span class=\"line\">    float: left;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#navbar&#123;</span><br><span class=\"line\">    border: none;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"示例代码\"><a href=\"#示例代码\" class=\"headerlink\" title=\"示例代码\"></a>示例代码</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;nav <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"navbar navbar-inverse navbar-fixed-top mr-nav \"</span>&gt;</span><br><span class=\"line\">       &lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"container\"</span>&gt;</span><br><span class=\"line\">           &lt;div id=<span class=\"string\">\"navbar\"</span> <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"collapse navbar-collapse\"</span>&gt;</span><br><span class=\"line\">               &lt;ul <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"nav navbar-nav\"</span>&gt;</span><br><span class=\"line\">                   &lt;li <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"active\"</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>首页<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\">                   &lt;li&gt;<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#about\"</span>&gt;</span>关于我们<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\">                   &lt;li&gt;<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"product.html\"</span>&gt;</span>产品介绍<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\">                   &lt;li&gt;<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"joinus.html\"</span>&gt;</span>加入我们<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\">                   &lt;li&gt;<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"series.html\"</span>&gt;</span>联系我们<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\">               &lt;<span class=\"regexp\">/ul&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">           &lt;/</span>div&gt;</span><br><span class=\"line\">       &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">   &lt;/</span>nav&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"css解决办法\"><a href=\"#css解决办法\" class=\"headerlink\" title=\"css解决办法\"></a>css解决办法</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*解决bootstarp导航缩小折叠问题*/</span></span><br><span class=\"line\">@media (max-width: <span class=\"number\">768</span>px)&#123;</span><br><span class=\"line\">    .navbar-nav &#123;</span><br><span class=\"line\">        visibility: visible;</span><br><span class=\"line\">        width: <span class=\"number\">1000</span>px;</span><br><span class=\"line\">        margin: <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.navbar-collapse&#123;</span><br><span class=\"line\">    display: block !important;</span><br><span class=\"line\">    height: auto !important;</span><br><span class=\"line\">    padding-bottom: <span class=\"number\">0</span>;</span><br><span class=\"line\">    overflow: visible !important;</span><br><span class=\"line\">    visibility: visible !important;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.nav&gt;li&#123;</span><br><span class=\"line\">    float: left;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#navbar&#123;</span><br><span class=\"line\">    border: none;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"axios+mockjs在vue中使用","comments":1,"abbrlink":"2df016a3","date":"2019-03-30T15:29:15.000Z","_content":"\n[mockjs官网](<http://mockjs.com/>)\n\n[参考文档](https://juejin.im/post/5b17ffcc51882513eb62e985)\n\n#### 1、npm安装mockjs\n\n```shell\nnpm intsall mockjs --save-dev\n```\n\n#### ２、在src目录下建立文件夹mock，mock文件夹下建立mock.js文件，js文件代码如下：\n\n```javascript\nimport Mock from 'mockjs';//es6语法引入mock模块\n\nexport default Mock.mock('http://test.cn/buyRecord', {//输出数据\n  'name': '@name',//随机生成姓名\n  'age|1-10': 10\n  //还可以自定义其他数据\n});\n```\n\n#### 3、在vue组件中使用\n\n```\nimport data from '../../assets/js/api/mock/mock.js'\n```\n\n#### 4、演示请求接口\n\n```javascript\ncreated() {\n    this.$http.get('http://test.cn/buyRecord')\n    .then(res => {\n        console.log(res.data);\n        this.msg = res.data.name;\n        console.log(this.msg)\n    })\n}\n```\n\n### 二.安装和使用axios \n\n这里我把mockjs封装到一起，可以前往[axios封装](<https://safranyu.github.io/post/9bbb323.html>)。目录结构：\n\n#### 1、在api目录下建立文件夹mock，mock文件夹下建立mock.js\n\n```javascript\nimport Mock from 'mockjs'\n\nexport default Mock.mock('http://test.cn/buyRecord', {\n  'name': '@name',\n  'age|1-10': 10\n})\n```\n\n#### 2、在mock文件在新建mockUrl.js用来存放请求的url\n\n```javascript\n/**\n * mock 模拟数据\n */\nlet baseUrl = 'http://test.cn'\nexport default {\n  // 首页轮播图\n  getBuyRecord: baseUrl + '/buyRecord',\n}\n```\n\n#### 3、在当前文件新建index.js配置请求方法\n\n```javascript\nimport api from '../index'\nimport urls from './mockUrl'\n\nconst header = {}\n\nexport default {\n  getBuyRecord(params) {\n    return api.get(urls.getBuyRecord, params, header)\n  }\n}\n```\n\n#### 4、在api目录下apiList.js引入刚配置的请求方法\n\n```javascript\nimport matches from './matches'\nimport Mock from './mock'\n\nexport default {\n  matches,\n  Mock\n}\n```\n\n#### 5、页面引用\n\n```javascript\nimport '../../assets/js/api/mock/mock.js'\nexport default {\n\tmethods: {\n        async getBuyRecord() {\n          try {\n            let params = {}\n            let res = await this.$api.Mock.getBuyRecord(params)\n            console.log(res)\n          } catch(err) {\n            console.log(err)\n          }\n        }\n\t}\n    created() {\n       this.getBuyRecord()   \n    }\n}\n```\n\n","source":"_posts/axios-mockjs在vue中使用.md","raw":"---\ntitle: axios+mockjs在vue中使用\ncomments: true\ncategories:\n  - Vue\ntags:\n  - mockjs\n  - vue\n  - axios\nabbrlink: 2df016a3\ndate: 2019-03-30 23:29:15\n---\n\n[mockjs官网](<http://mockjs.com/>)\n\n[参考文档](https://juejin.im/post/5b17ffcc51882513eb62e985)\n\n#### 1、npm安装mockjs\n\n```shell\nnpm intsall mockjs --save-dev\n```\n\n#### ２、在src目录下建立文件夹mock，mock文件夹下建立mock.js文件，js文件代码如下：\n\n```javascript\nimport Mock from 'mockjs';//es6语法引入mock模块\n\nexport default Mock.mock('http://test.cn/buyRecord', {//输出数据\n  'name': '@name',//随机生成姓名\n  'age|1-10': 10\n  //还可以自定义其他数据\n});\n```\n\n#### 3、在vue组件中使用\n\n```\nimport data from '../../assets/js/api/mock/mock.js'\n```\n\n#### 4、演示请求接口\n\n```javascript\ncreated() {\n    this.$http.get('http://test.cn/buyRecord')\n    .then(res => {\n        console.log(res.data);\n        this.msg = res.data.name;\n        console.log(this.msg)\n    })\n}\n```\n\n### 二.安装和使用axios \n\n这里我把mockjs封装到一起，可以前往[axios封装](<https://safranyu.github.io/post/9bbb323.html>)。目录结构：\n\n#### 1、在api目录下建立文件夹mock，mock文件夹下建立mock.js\n\n```javascript\nimport Mock from 'mockjs'\n\nexport default Mock.mock('http://test.cn/buyRecord', {\n  'name': '@name',\n  'age|1-10': 10\n})\n```\n\n#### 2、在mock文件在新建mockUrl.js用来存放请求的url\n\n```javascript\n/**\n * mock 模拟数据\n */\nlet baseUrl = 'http://test.cn'\nexport default {\n  // 首页轮播图\n  getBuyRecord: baseUrl + '/buyRecord',\n}\n```\n\n#### 3、在当前文件新建index.js配置请求方法\n\n```javascript\nimport api from '../index'\nimport urls from './mockUrl'\n\nconst header = {}\n\nexport default {\n  getBuyRecord(params) {\n    return api.get(urls.getBuyRecord, params, header)\n  }\n}\n```\n\n#### 4、在api目录下apiList.js引入刚配置的请求方法\n\n```javascript\nimport matches from './matches'\nimport Mock from './mock'\n\nexport default {\n  matches,\n  Mock\n}\n```\n\n#### 5、页面引用\n\n```javascript\nimport '../../assets/js/api/mock/mock.js'\nexport default {\n\tmethods: {\n        async getBuyRecord() {\n          try {\n            let params = {}\n            let res = await this.$api.Mock.getBuyRecord(params)\n            console.log(res)\n          } catch(err) {\n            console.log(err)\n          }\n        }\n\t}\n    created() {\n       this.getBuyRecord()   \n    }\n}\n```\n\n","slug":"axios-mockjs在vue中使用","published":1,"updated":"2020-05-18T16:35:00.481Z","layout":"post","photos":[],"link":"","_id":"cl78qfoor0012qic9lv7fa7fc","content":"<p><a href=\"http://mockjs.com/\" target=\"_blank\" rel=\"noopener\">mockjs官网</a></p>\n<p><a href=\"https://juejin.im/post/5b17ffcc51882513eb62e985\" target=\"_blank\" rel=\"noopener\">参考文档</a></p>\n<h4 id=\"1、npm安装mockjs\"><a href=\"#1、npm安装mockjs\" class=\"headerlink\" title=\"1、npm安装mockjs\"></a>1、npm安装mockjs</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm intsall mockjs --save-dev</span><br></pre></td></tr></table></figure>\n<h4 id=\"２、在src目录下建立文件夹mock，mock文件夹下建立mock-js文件，js文件代码如下：\"><a href=\"#２、在src目录下建立文件夹mock，mock文件夹下建立mock-js文件，js文件代码如下：\" class=\"headerlink\" title=\"２、在src目录下建立文件夹mock，mock文件夹下建立mock.js文件，js文件代码如下：\"></a>２、在src目录下建立文件夹mock，mock文件夹下建立mock.js文件，js文件代码如下：</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Mock <span class=\"keyword\">from</span> <span class=\"string\">'mockjs'</span>;<span class=\"comment\">//es6语法引入mock模块</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> Mock.mock(<span class=\"string\">'http://test.cn/buyRecord'</span>, &#123;<span class=\"comment\">//输出数据</span></span><br><span class=\"line\">  <span class=\"string\">'name'</span>: <span class=\"string\">'@name'</span>,<span class=\"comment\">//随机生成姓名</span></span><br><span class=\"line\">  <span class=\"string\">'age|1-10'</span>: <span class=\"number\">10</span></span><br><span class=\"line\">  <span class=\"comment\">//还可以自定义其他数据</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h4 id=\"3、在vue组件中使用\"><a href=\"#3、在vue组件中使用\" class=\"headerlink\" title=\"3、在vue组件中使用\"></a>3、在vue组件中使用</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import data from &apos;../../assets/js/api/mock/mock.js&apos;</span><br></pre></td></tr></table></figure>\n<h4 id=\"4、演示请求接口\"><a href=\"#4、演示请求接口\" class=\"headerlink\" title=\"4、演示请求接口\"></a>4、演示请求接口</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">created() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.$http.get(<span class=\"string\">'http://test.cn/buyRecord'</span>)</span><br><span class=\"line\">    .then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(res.data);</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.msg = res.data.name;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.msg)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"二-安装和使用axios\"><a href=\"#二-安装和使用axios\" class=\"headerlink\" title=\"二.安装和使用axios\"></a>二.安装和使用axios</h3><p>这里我把mockjs封装到一起，可以前往<a href=\"https://safranyu.github.io/post/9bbb323.html\" target=\"_blank\" rel=\"noopener\">axios封装</a>。目录结构：</p>\n<h4 id=\"1、在api目录下建立文件夹mock，mock文件夹下建立mock-js\"><a href=\"#1、在api目录下建立文件夹mock，mock文件夹下建立mock-js\" class=\"headerlink\" title=\"1、在api目录下建立文件夹mock，mock文件夹下建立mock.js\"></a>1、在api目录下建立文件夹mock，mock文件夹下建立mock.js</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Mock <span class=\"keyword\">from</span> <span class=\"string\">'mockjs'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> Mock.mock(<span class=\"string\">'http://test.cn/buyRecord'</span>, &#123;</span><br><span class=\"line\">  <span class=\"string\">'name'</span>: <span class=\"string\">'@name'</span>,</span><br><span class=\"line\">  <span class=\"string\">'age|1-10'</span>: <span class=\"number\">10</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"2、在mock文件在新建mockUrl-js用来存放请求的url\"><a href=\"#2、在mock文件在新建mockUrl-js用来存放请求的url\" class=\"headerlink\" title=\"2、在mock文件在新建mockUrl.js用来存放请求的url\"></a>2、在mock文件在新建mockUrl.js用来存放请求的url</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * mock 模拟数据</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> baseUrl = <span class=\"string\">'http://test.cn'</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 首页轮播图</span></span><br><span class=\"line\">  getBuyRecord: baseUrl + <span class=\"string\">'/buyRecord'</span>,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"3、在当前文件新建index-js配置请求方法\"><a href=\"#3、在当前文件新建index-js配置请求方法\" class=\"headerlink\" title=\"3、在当前文件新建index.js配置请求方法\"></a>3、在当前文件新建index.js配置请求方法</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> api <span class=\"keyword\">from</span> <span class=\"string\">'../index'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urls <span class=\"keyword\">from</span> <span class=\"string\">'./mockUrl'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> header = &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  getBuyRecord(params) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> api.get(urls.getBuyRecord, params, header)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"4、在api目录下apiList-js引入刚配置的请求方法\"><a href=\"#4、在api目录下apiList-js引入刚配置的请求方法\" class=\"headerlink\" title=\"4、在api目录下apiList.js引入刚配置的请求方法\"></a>4、在api目录下apiList.js引入刚配置的请求方法</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matches <span class=\"keyword\">from</span> <span class=\"string\">'./matches'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> Mock <span class=\"keyword\">from</span> <span class=\"string\">'./mock'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  matches,</span><br><span class=\"line\">  Mock</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"5、页面引用\"><a href=\"#5、页面引用\" class=\"headerlink\" title=\"5、页面引用\"></a>5、页面引用</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'../../assets/js/api/mock/mock.js'</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">\tmethods: &#123;</span><br><span class=\"line\">        <span class=\"keyword\">async</span> getBuyRecord() &#123;</span><br><span class=\"line\">          <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> params = &#123;&#125;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> res = <span class=\"keyword\">await</span> <span class=\"keyword\">this</span>.$api.Mock.getBuyRecord(params)</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(res)</span><br><span class=\"line\">          &#125; <span class=\"keyword\">catch</span>(err) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(err)</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">    created() &#123;</span><br><span class=\"line\">       <span class=\"keyword\">this</span>.getBuyRecord()   </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"http://mockjs.com/\" target=\"_blank\" rel=\"noopener\">mockjs官网</a></p>\n<p><a href=\"https://juejin.im/post/5b17ffcc51882513eb62e985\" target=\"_blank\" rel=\"noopener\">参考文档</a></p>\n<h4 id=\"1、npm安装mockjs\"><a href=\"#1、npm安装mockjs\" class=\"headerlink\" title=\"1、npm安装mockjs\"></a>1、npm安装mockjs</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm intsall mockjs --save-dev</span><br></pre></td></tr></table></figure>\n<h4 id=\"２、在src目录下建立文件夹mock，mock文件夹下建立mock-js文件，js文件代码如下：\"><a href=\"#２、在src目录下建立文件夹mock，mock文件夹下建立mock-js文件，js文件代码如下：\" class=\"headerlink\" title=\"２、在src目录下建立文件夹mock，mock文件夹下建立mock.js文件，js文件代码如下：\"></a>２、在src目录下建立文件夹mock，mock文件夹下建立mock.js文件，js文件代码如下：</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Mock <span class=\"keyword\">from</span> <span class=\"string\">'mockjs'</span>;<span class=\"comment\">//es6语法引入mock模块</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> Mock.mock(<span class=\"string\">'http://test.cn/buyRecord'</span>, &#123;<span class=\"comment\">//输出数据</span></span><br><span class=\"line\">  <span class=\"string\">'name'</span>: <span class=\"string\">'@name'</span>,<span class=\"comment\">//随机生成姓名</span></span><br><span class=\"line\">  <span class=\"string\">'age|1-10'</span>: <span class=\"number\">10</span></span><br><span class=\"line\">  <span class=\"comment\">//还可以自定义其他数据</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h4 id=\"3、在vue组件中使用\"><a href=\"#3、在vue组件中使用\" class=\"headerlink\" title=\"3、在vue组件中使用\"></a>3、在vue组件中使用</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import data from &apos;../../assets/js/api/mock/mock.js&apos;</span><br></pre></td></tr></table></figure>\n<h4 id=\"4、演示请求接口\"><a href=\"#4、演示请求接口\" class=\"headerlink\" title=\"4、演示请求接口\"></a>4、演示请求接口</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">created() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.$http.get(<span class=\"string\">'http://test.cn/buyRecord'</span>)</span><br><span class=\"line\">    .then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(res.data);</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.msg = res.data.name;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.msg)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"二-安装和使用axios\"><a href=\"#二-安装和使用axios\" class=\"headerlink\" title=\"二.安装和使用axios\"></a>二.安装和使用axios</h3><p>这里我把mockjs封装到一起，可以前往<a href=\"https://safranyu.github.io/post/9bbb323.html\" target=\"_blank\" rel=\"noopener\">axios封装</a>。目录结构：</p>\n<h4 id=\"1、在api目录下建立文件夹mock，mock文件夹下建立mock-js\"><a href=\"#1、在api目录下建立文件夹mock，mock文件夹下建立mock-js\" class=\"headerlink\" title=\"1、在api目录下建立文件夹mock，mock文件夹下建立mock.js\"></a>1、在api目录下建立文件夹mock，mock文件夹下建立mock.js</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Mock <span class=\"keyword\">from</span> <span class=\"string\">'mockjs'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> Mock.mock(<span class=\"string\">'http://test.cn/buyRecord'</span>, &#123;</span><br><span class=\"line\">  <span class=\"string\">'name'</span>: <span class=\"string\">'@name'</span>,</span><br><span class=\"line\">  <span class=\"string\">'age|1-10'</span>: <span class=\"number\">10</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"2、在mock文件在新建mockUrl-js用来存放请求的url\"><a href=\"#2、在mock文件在新建mockUrl-js用来存放请求的url\" class=\"headerlink\" title=\"2、在mock文件在新建mockUrl.js用来存放请求的url\"></a>2、在mock文件在新建mockUrl.js用来存放请求的url</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * mock 模拟数据</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> baseUrl = <span class=\"string\">'http://test.cn'</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 首页轮播图</span></span><br><span class=\"line\">  getBuyRecord: baseUrl + <span class=\"string\">'/buyRecord'</span>,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"3、在当前文件新建index-js配置请求方法\"><a href=\"#3、在当前文件新建index-js配置请求方法\" class=\"headerlink\" title=\"3、在当前文件新建index.js配置请求方法\"></a>3、在当前文件新建index.js配置请求方法</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> api <span class=\"keyword\">from</span> <span class=\"string\">'../index'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urls <span class=\"keyword\">from</span> <span class=\"string\">'./mockUrl'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> header = &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  getBuyRecord(params) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> api.get(urls.getBuyRecord, params, header)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"4、在api目录下apiList-js引入刚配置的请求方法\"><a href=\"#4、在api目录下apiList-js引入刚配置的请求方法\" class=\"headerlink\" title=\"4、在api目录下apiList.js引入刚配置的请求方法\"></a>4、在api目录下apiList.js引入刚配置的请求方法</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matches <span class=\"keyword\">from</span> <span class=\"string\">'./matches'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> Mock <span class=\"keyword\">from</span> <span class=\"string\">'./mock'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  matches,</span><br><span class=\"line\">  Mock</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"5、页面引用\"><a href=\"#5、页面引用\" class=\"headerlink\" title=\"5、页面引用\"></a>5、页面引用</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'../../assets/js/api/mock/mock.js'</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">\tmethods: &#123;</span><br><span class=\"line\">        <span class=\"keyword\">async</span> getBuyRecord() &#123;</span><br><span class=\"line\">          <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> params = &#123;&#125;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> res = <span class=\"keyword\">await</span> <span class=\"keyword\">this</span>.$api.Mock.getBuyRecord(params)</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(res)</span><br><span class=\"line\">          &#125; <span class=\"keyword\">catch</span>(err) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(err)</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">    created() &#123;</span><br><span class=\"line\">       <span class=\"keyword\">this</span>.getBuyRecord()   </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"git 简写","comments":1,"abbrlink":"adj7e5ef","date":"2020-04-19T11:02:06.000Z","_content":"\n```\ng - git\ngst - git status\ngl - git pull\ngup - git pull --rebase\ngp - git push\ngd - git diff\ngdc - git diff --cached\ngdv - git diff -w \"$@\" | view\ngc - git commit -v\ngc! - git commit -v --amend\ngca - git commit -v -a\ngca! - git commit -v -a --amend\ngcmsg - git commit -m\ngco - git checkout\ngcm - git checkout master\ngr - git remote\ngrv - git remote -v\ngrmv - git remote rename\ngrrm - git remote remove\ngsetr - git remote set-url\ngrup - git remote update\ngrbi - git rebase -i\ngrbc - git rebase --continue\ngrba - git rebase --abort\ngb - git branch\ngba - git branch -a\ngcount - git shortlog -sn\ngcl - git config --list\ngcp - git cherry-pick\nglg - git log --stat --max-count=10\nglgg - git log --graph --max-count=10\nglgga - git log --graph --decorate --all\nglo - git log --oneline --decorate --color\nglog - git log --oneline --decorate --color --graph\ngss - git status -s\nga - git add\ngm - git merge\ngrh - git reset HEAD\ngrhh - git reset HEAD --hard\ngclean - git reset --hard && git clean -dfx\ngwc - git whatchanged -p --abbrev-commit --pretty=medium\ngsts - git stash show --text\ngsta - git stash\ngstp - git stash pop\ngstd - git stash drop\nggpull - git pull origin $(current_branch)\nggpur - git pull --rebase origin $(current_branch)\nggpush - git push origin $(current_branch)\nggpnp - git pull origin $(current_branch) && git push origin $(current_branch)\nglp - _git_log_prettily\n```\n","source":"_posts/git 简写.md","raw":"---\ntitle: git 简写\ncomments: true\ncategories:\n  - Git\ntags:\n  - Git\nabbrlink: adj7e5ef\ndate: 2020-04-19 19:02:06\n---\n\n```\ng - git\ngst - git status\ngl - git pull\ngup - git pull --rebase\ngp - git push\ngd - git diff\ngdc - git diff --cached\ngdv - git diff -w \"$@\" | view\ngc - git commit -v\ngc! - git commit -v --amend\ngca - git commit -v -a\ngca! - git commit -v -a --amend\ngcmsg - git commit -m\ngco - git checkout\ngcm - git checkout master\ngr - git remote\ngrv - git remote -v\ngrmv - git remote rename\ngrrm - git remote remove\ngsetr - git remote set-url\ngrup - git remote update\ngrbi - git rebase -i\ngrbc - git rebase --continue\ngrba - git rebase --abort\ngb - git branch\ngba - git branch -a\ngcount - git shortlog -sn\ngcl - git config --list\ngcp - git cherry-pick\nglg - git log --stat --max-count=10\nglgg - git log --graph --max-count=10\nglgga - git log --graph --decorate --all\nglo - git log --oneline --decorate --color\nglog - git log --oneline --decorate --color --graph\ngss - git status -s\nga - git add\ngm - git merge\ngrh - git reset HEAD\ngrhh - git reset HEAD --hard\ngclean - git reset --hard && git clean -dfx\ngwc - git whatchanged -p --abbrev-commit --pretty=medium\ngsts - git stash show --text\ngsta - git stash\ngstp - git stash pop\ngstd - git stash drop\nggpull - git pull origin $(current_branch)\nggpur - git pull --rebase origin $(current_branch)\nggpush - git push origin $(current_branch)\nggpnp - git pull origin $(current_branch) && git push origin $(current_branch)\nglp - _git_log_prettily\n```\n","slug":"git 简写","published":1,"updated":"2020-05-18T16:35:00.482Z","layout":"post","photos":[],"link":"","_id":"cl78qfoot0016qic97gx46ey0","content":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">g - git</span><br><span class=\"line\">gst - git status</span><br><span class=\"line\">gl - git pull</span><br><span class=\"line\">gup - git pull --rebase</span><br><span class=\"line\">gp - git push</span><br><span class=\"line\">gd - git diff</span><br><span class=\"line\">gdc - git diff --cached</span><br><span class=\"line\">gdv - git diff -w &quot;$@&quot; | view</span><br><span class=\"line\">gc - git commit -v</span><br><span class=\"line\">gc! - git commit -v --amend</span><br><span class=\"line\">gca - git commit -v -a</span><br><span class=\"line\">gca! - git commit -v -a --amend</span><br><span class=\"line\">gcmsg - git commit -m</span><br><span class=\"line\">gco - git checkout</span><br><span class=\"line\">gcm - git checkout master</span><br><span class=\"line\">gr - git remote</span><br><span class=\"line\">grv - git remote -v</span><br><span class=\"line\">grmv - git remote rename</span><br><span class=\"line\">grrm - git remote remove</span><br><span class=\"line\">gsetr - git remote set-url</span><br><span class=\"line\">grup - git remote update</span><br><span class=\"line\">grbi - git rebase -i</span><br><span class=\"line\">grbc - git rebase --continue</span><br><span class=\"line\">grba - git rebase --abort</span><br><span class=\"line\">gb - git branch</span><br><span class=\"line\">gba - git branch -a</span><br><span class=\"line\">gcount - git shortlog -sn</span><br><span class=\"line\">gcl - git config --list</span><br><span class=\"line\">gcp - git cherry-pick</span><br><span class=\"line\">glg - git log --stat --max-count=10</span><br><span class=\"line\">glgg - git log --graph --max-count=10</span><br><span class=\"line\">glgga - git log --graph --decorate --all</span><br><span class=\"line\">glo - git log --oneline --decorate --color</span><br><span class=\"line\">glog - git log --oneline --decorate --color --graph</span><br><span class=\"line\">gss - git status -s</span><br><span class=\"line\">ga - git add</span><br><span class=\"line\">gm - git merge</span><br><span class=\"line\">grh - git reset HEAD</span><br><span class=\"line\">grhh - git reset HEAD --hard</span><br><span class=\"line\">gclean - git reset --hard &amp;&amp; git clean -dfx</span><br><span class=\"line\">gwc - git whatchanged -p --abbrev-commit --pretty=medium</span><br><span class=\"line\">gsts - git stash show --text</span><br><span class=\"line\">gsta - git stash</span><br><span class=\"line\">gstp - git stash pop</span><br><span class=\"line\">gstd - git stash drop</span><br><span class=\"line\">ggpull - git pull origin $(current_branch)</span><br><span class=\"line\">ggpur - git pull --rebase origin $(current_branch)</span><br><span class=\"line\">ggpush - git push origin $(current_branch)</span><br><span class=\"line\">ggpnp - git pull origin $(current_branch) &amp;&amp; git push origin $(current_branch)</span><br><span class=\"line\">glp - _git_log_prettily</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">g - git</span><br><span class=\"line\">gst - git status</span><br><span class=\"line\">gl - git pull</span><br><span class=\"line\">gup - git pull --rebase</span><br><span class=\"line\">gp - git push</span><br><span class=\"line\">gd - git diff</span><br><span class=\"line\">gdc - git diff --cached</span><br><span class=\"line\">gdv - git diff -w &quot;$@&quot; | view</span><br><span class=\"line\">gc - git commit -v</span><br><span class=\"line\">gc! - git commit -v --amend</span><br><span class=\"line\">gca - git commit -v -a</span><br><span class=\"line\">gca! - git commit -v -a --amend</span><br><span class=\"line\">gcmsg - git commit -m</span><br><span class=\"line\">gco - git checkout</span><br><span class=\"line\">gcm - git checkout master</span><br><span class=\"line\">gr - git remote</span><br><span class=\"line\">grv - git remote -v</span><br><span class=\"line\">grmv - git remote rename</span><br><span class=\"line\">grrm - git remote remove</span><br><span class=\"line\">gsetr - git remote set-url</span><br><span class=\"line\">grup - git remote update</span><br><span class=\"line\">grbi - git rebase -i</span><br><span class=\"line\">grbc - git rebase --continue</span><br><span class=\"line\">grba - git rebase --abort</span><br><span class=\"line\">gb - git branch</span><br><span class=\"line\">gba - git branch -a</span><br><span class=\"line\">gcount - git shortlog -sn</span><br><span class=\"line\">gcl - git config --list</span><br><span class=\"line\">gcp - git cherry-pick</span><br><span class=\"line\">glg - git log --stat --max-count=10</span><br><span class=\"line\">glgg - git log --graph --max-count=10</span><br><span class=\"line\">glgga - git log --graph --decorate --all</span><br><span class=\"line\">glo - git log --oneline --decorate --color</span><br><span class=\"line\">glog - git log --oneline --decorate --color --graph</span><br><span class=\"line\">gss - git status -s</span><br><span class=\"line\">ga - git add</span><br><span class=\"line\">gm - git merge</span><br><span class=\"line\">grh - git reset HEAD</span><br><span class=\"line\">grhh - git reset HEAD --hard</span><br><span class=\"line\">gclean - git reset --hard &amp;&amp; git clean -dfx</span><br><span class=\"line\">gwc - git whatchanged -p --abbrev-commit --pretty=medium</span><br><span class=\"line\">gsts - git stash show --text</span><br><span class=\"line\">gsta - git stash</span><br><span class=\"line\">gstp - git stash pop</span><br><span class=\"line\">gstd - git stash drop</span><br><span class=\"line\">ggpull - git pull origin $(current_branch)</span><br><span class=\"line\">ggpur - git pull --rebase origin $(current_branch)</span><br><span class=\"line\">ggpush - git push origin $(current_branch)</span><br><span class=\"line\">ggpnp - git pull origin $(current_branch) &amp;&amp; git push origin $(current_branch)</span><br><span class=\"line\">glp - _git_log_prettily</span><br></pre></td></tr></table></figure>\n"},{"title":"git clone 太慢","comments":1,"abbrlink":"ads7e5ef","date":"2020-03-09T11:02:06.000Z","_content":"\nsocks5 代替方法\n\n1.首先查看自己socks5的端口号\n\n![](https://pic4.zhimg.com/50/v2-602f596434a3e19e708c225f457e9283_hd.jpg)\n\n2.我这里记下来是127.0.0.1:1086\n\n![](https://pic1.zhimg.com/50/v2-8b2c6525c1ec8de284062da5cf85d01a_hd.jpg)\n\n3.然后输入命令\n\n```\ngit config--global http.https://github.com.proxysocks5://127.0.0.1:1086\ngit config --global https.https://github.com.proxysocks5://127.0.0.1:1086\n```","source":"_posts/git clone 太慢.md","raw":"---\ntitle: git clone 太慢\ncomments: true\ncategories:\n  - Git\ntags:\n  - Git\nabbrlink: ads7e5ef\ndate: 2020-03-09 19:02:06\n---\n\nsocks5 代替方法\n\n1.首先查看自己socks5的端口号\n\n![](https://pic4.zhimg.com/50/v2-602f596434a3e19e708c225f457e9283_hd.jpg)\n\n2.我这里记下来是127.0.0.1:1086\n\n![](https://pic1.zhimg.com/50/v2-8b2c6525c1ec8de284062da5cf85d01a_hd.jpg)\n\n3.然后输入命令\n\n```\ngit config--global http.https://github.com.proxysocks5://127.0.0.1:1086\ngit config --global https.https://github.com.proxysocks5://127.0.0.1:1086\n```","slug":"git clone 太慢","published":1,"updated":"2020-05-18T16:35:00.481Z","layout":"post","photos":[],"link":"","_id":"cl78qfoot0018qic9rozc34yt","content":"<p>socks5 代替方法</p>\n<p>1.首先查看自己socks5的端口号</p>\n<p><img src=\"https://pic4.zhimg.com/50/v2-602f596434a3e19e708c225f457e9283_hd.jpg\" alt=\"\"></p>\n<p>2.我这里记下来是127.0.0.1:1086</p>\n<p><img src=\"https://pic1.zhimg.com/50/v2-8b2c6525c1ec8de284062da5cf85d01a_hd.jpg\" alt=\"\"></p>\n<p>3.然后输入命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config--global http.https://github.com.proxysocks5://127.0.0.1:1086</span><br><span class=\"line\">git config --global https.https://github.com.proxysocks5://127.0.0.1:1086</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>socks5 代替方法</p>\n<p>1.首先查看自己socks5的端口号</p>\n<p><img src=\"https://pic4.zhimg.com/50/v2-602f596434a3e19e708c225f457e9283_hd.jpg\" alt=\"\"></p>\n<p>2.我这里记下来是127.0.0.1:1086</p>\n<p><img src=\"https://pic1.zhimg.com/50/v2-8b2c6525c1ec8de284062da5cf85d01a_hd.jpg\" alt=\"\"></p>\n<p>3.然后输入命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config--global http.https://github.com.proxysocks5://127.0.0.1:1086</span><br><span class=\"line\">git config --global https.https://github.com.proxysocks5://127.0.0.1:1086</span><br></pre></td></tr></table></figure>"},{"title":"Windows环境下安装最新MySQL服务","comments":1,"abbrlink":"0","date":"2018-10-09T13:21:57.000Z","_content":"\n## 安装与配置\n\n在开发领域我们存储数据一般都是使用专门的数据库服务器专门提供的数据库服务，如果需要让自己的机器也可以 提供数据库服务，那么就需要安装特定的数据库服务器软件，这种类型的软件也有很多：\n\n- Oracle \n\n- MySQL \n\n- SQL Server\n\n这里我们选择一个很常见的数据库服务器软件：MySQL\nMySQL 的安装同样建议采用解压版（目的是了解那些自动安装过程都做了哪些事）\n\n>下载地址：https://dev.mysql.com/downloads/mysql/\n\n### 安装过程\n\n1. 解压到纯英文路径 2\n\n2. 解压目录添加 my.ini （可选）\n\n>参考：\n>\n>http://www.cnblogs.com/Ray-xujianguo/p/3322455.html \n>\n>https://gist.github.com/hanjong/1205199 \n>\n>https://dev.mysql.com/doc/refman/5.5/en/mysqld-option-tables.html\n\n```mysql\n[mysqld] \n# MySQL 安装目录 \n\tbasedir=C:/Develop/mysql \n# 数据文件所在目录 \n\tdatadir=C:/Develop/mysql/data\n\n```\n\n3.以管理员身份运行 CMD 执行以下命令，安装一个 MySQL 服务\n\n```mysql\n# 定位到安装目录下的 bin 文件夹 \n$ cd <MySQL安装目录>/bin \n# 初始化数据所需文件以及获取一个临时的访问密码 \n$ mysqld ‐‐initialize ‐‐user=mysql ‐‐console \n# 将 MySQL 安装为服务 可以指定服务名称 \n$ mysqld ‐‐install MySQL\n\n```\n\n 4.登入 MySQL 服务器，重置密码\n\n```mysql\n# 先通过用户名密码进入 MySQL 操作环境 \n$ mysql ‐u root ‐p \nEnter password: # 输入临时密码   \n# 设置数据库访问密码，一定要加分号 \nmysql> set password for 'root'@'localhost' = password('123456');\n\n#这一步可能会报错 ERROR 1064 (42000) 提示SQL语法错误\n#尝试这条命令\nmysql> alter user 'root'@'localhost' identified by '123';\n# 或\nmysql> update mysql.user set authentication_string=password('123456') where user='root' and Host = 'localhost';\n```\n\n解释：上面可能会报错的原因是MySQL5.7.6版本以后，password属性已经取消（使用SELECT  Password）\n\n![](http://pan.vmccc.cn/images/2018/10/09/0fWpIoI6N4/mysql-error1064.jpg)\n\n![](http://pan.vmccc.cn/images/2018/10/09/RRArT1cL4q/mysql-error1820.jpg)\n\n## 基础操作\n\n### 数据库管理工具 \n\n数据库管理工具本质上就是一个使用数据库服务器软件（Server）提供的服务的数据库客户端（Client）。\n\n### 命令行工具 \n\n一般如果只是简单操作数据库，推荐使用 MySQL 内置的命令行工具完成：\n\n通过命令行运行解压目录下 bin 目录中的 mysql.exe ：\n\n```mysql\n# 定位到 bin 目录 \n$ cd <解压目录>/bin \n# 运行 mysql，‐u 指定数据库用户名，‐p 指定密码 \n$ mysql ‐u root ‐p wanglei \n# 一般不建议在命令中填写密码，因为这样会暴露你的密码，一般只加一个 ‐p 但是不给值 \n$ mysql ‐u root ‐p \nEnter password: # 这时会要求你输入密码\n\n```\n\n进入 MySQL 客户端的 REPL 环境过后，可以通过标准的 SQL 语句操作数据库。\n常见的操作指令：\n\n```mysql\nmysql> show databases;  ‐‐ 显示全部数据库 \nmysql> create database <db‐name>;  ‐‐ 创建一个指定名称的数据库 \nmysql> use <db‐name>;  ‐‐ 使用一个数据库，相当于进入指定的数据库 \nmysql> show tables;  ‐‐ 显示当前数据库中有哪些表 \nmysql> create table <table‐name> (id int, name varchar(20), age int);  ‐‐ 创建一个指定名称的数据 表，并添加 3 个列 \nmysql> desc <table‐name>;  ‐‐ 查看指定表结构 \nmysql> source ./path/to/sql‐file.sql  ‐‐ 执行本地 SQL 文件中的 SQL 语句 mysql> drop table <table‐name>;  ‐‐ 删除一个指定名称的数据表 \nmysql> drop database <db‐name>;  ‐‐ 删除一个指定名称的数据库 \nmysql> exit|quit;  ‐‐ 退出数据库终端\n```\n\n### 可视化工具 \n\n如果需要复杂的操作，推荐 Navicat Premium\n\n> 下载地址：http://www.navicat.com.cn/download/navicat-premium\n> 这是一个付费软件，可以免费试用 14 天\n\n\n\n\n\n","source":"_posts/Windows环境下安装最新MySQL服务.md","raw":"---\ntitle: Windows环境下安装最新MySQL服务\ncomments: true\nabbrlink: '0'\ncategories:\n  - MySQL\ntags:\n  - MySQL\ndate: 2018-10-09 21:21:57\n---\n\n## 安装与配置\n\n在开发领域我们存储数据一般都是使用专门的数据库服务器专门提供的数据库服务，如果需要让自己的机器也可以 提供数据库服务，那么就需要安装特定的数据库服务器软件，这种类型的软件也有很多：\n\n- Oracle \n\n- MySQL \n\n- SQL Server\n\n这里我们选择一个很常见的数据库服务器软件：MySQL\nMySQL 的安装同样建议采用解压版（目的是了解那些自动安装过程都做了哪些事）\n\n>下载地址：https://dev.mysql.com/downloads/mysql/\n\n### 安装过程\n\n1. 解压到纯英文路径 2\n\n2. 解压目录添加 my.ini （可选）\n\n>参考：\n>\n>http://www.cnblogs.com/Ray-xujianguo/p/3322455.html \n>\n>https://gist.github.com/hanjong/1205199 \n>\n>https://dev.mysql.com/doc/refman/5.5/en/mysqld-option-tables.html\n\n```mysql\n[mysqld] \n# MySQL 安装目录 \n\tbasedir=C:/Develop/mysql \n# 数据文件所在目录 \n\tdatadir=C:/Develop/mysql/data\n\n```\n\n3.以管理员身份运行 CMD 执行以下命令，安装一个 MySQL 服务\n\n```mysql\n# 定位到安装目录下的 bin 文件夹 \n$ cd <MySQL安装目录>/bin \n# 初始化数据所需文件以及获取一个临时的访问密码 \n$ mysqld ‐‐initialize ‐‐user=mysql ‐‐console \n# 将 MySQL 安装为服务 可以指定服务名称 \n$ mysqld ‐‐install MySQL\n\n```\n\n 4.登入 MySQL 服务器，重置密码\n\n```mysql\n# 先通过用户名密码进入 MySQL 操作环境 \n$ mysql ‐u root ‐p \nEnter password: # 输入临时密码   \n# 设置数据库访问密码，一定要加分号 \nmysql> set password for 'root'@'localhost' = password('123456');\n\n#这一步可能会报错 ERROR 1064 (42000) 提示SQL语法错误\n#尝试这条命令\nmysql> alter user 'root'@'localhost' identified by '123';\n# 或\nmysql> update mysql.user set authentication_string=password('123456') where user='root' and Host = 'localhost';\n```\n\n解释：上面可能会报错的原因是MySQL5.7.6版本以后，password属性已经取消（使用SELECT  Password）\n\n![](http://pan.vmccc.cn/images/2018/10/09/0fWpIoI6N4/mysql-error1064.jpg)\n\n![](http://pan.vmccc.cn/images/2018/10/09/RRArT1cL4q/mysql-error1820.jpg)\n\n## 基础操作\n\n### 数据库管理工具 \n\n数据库管理工具本质上就是一个使用数据库服务器软件（Server）提供的服务的数据库客户端（Client）。\n\n### 命令行工具 \n\n一般如果只是简单操作数据库，推荐使用 MySQL 内置的命令行工具完成：\n\n通过命令行运行解压目录下 bin 目录中的 mysql.exe ：\n\n```mysql\n# 定位到 bin 目录 \n$ cd <解压目录>/bin \n# 运行 mysql，‐u 指定数据库用户名，‐p 指定密码 \n$ mysql ‐u root ‐p wanglei \n# 一般不建议在命令中填写密码，因为这样会暴露你的密码，一般只加一个 ‐p 但是不给值 \n$ mysql ‐u root ‐p \nEnter password: # 这时会要求你输入密码\n\n```\n\n进入 MySQL 客户端的 REPL 环境过后，可以通过标准的 SQL 语句操作数据库。\n常见的操作指令：\n\n```mysql\nmysql> show databases;  ‐‐ 显示全部数据库 \nmysql> create database <db‐name>;  ‐‐ 创建一个指定名称的数据库 \nmysql> use <db‐name>;  ‐‐ 使用一个数据库，相当于进入指定的数据库 \nmysql> show tables;  ‐‐ 显示当前数据库中有哪些表 \nmysql> create table <table‐name> (id int, name varchar(20), age int);  ‐‐ 创建一个指定名称的数据 表，并添加 3 个列 \nmysql> desc <table‐name>;  ‐‐ 查看指定表结构 \nmysql> source ./path/to/sql‐file.sql  ‐‐ 执行本地 SQL 文件中的 SQL 语句 mysql> drop table <table‐name>;  ‐‐ 删除一个指定名称的数据表 \nmysql> drop database <db‐name>;  ‐‐ 删除一个指定名称的数据库 \nmysql> exit|quit;  ‐‐ 退出数据库终端\n```\n\n### 可视化工具 \n\n如果需要复杂的操作，推荐 Navicat Premium\n\n> 下载地址：http://www.navicat.com.cn/download/navicat-premium\n> 这是一个付费软件，可以免费试用 14 天\n\n\n\n\n\n","slug":"Windows环境下安装最新MySQL服务","published":1,"updated":"2020-05-18T16:35:00.480Z","layout":"post","photos":[],"link":"","_id":"cl78qfoou001cqic9l810yy1z","content":"<h2 id=\"安装与配置\"><a href=\"#安装与配置\" class=\"headerlink\" title=\"安装与配置\"></a>安装与配置</h2><p>在开发领域我们存储数据一般都是使用专门的数据库服务器专门提供的数据库服务，如果需要让自己的机器也可以 提供数据库服务，那么就需要安装特定的数据库服务器软件，这种类型的软件也有很多：</p>\n<ul>\n<li><p>Oracle </p>\n</li>\n<li><p>MySQL </p>\n</li>\n<li><p>SQL Server</p>\n</li>\n</ul>\n<p>这里我们选择一个很常见的数据库服务器软件：MySQL<br>MySQL 的安装同样建议采用解压版（目的是了解那些自动安装过程都做了哪些事）</p>\n<blockquote>\n<p>下载地址：<a href=\"https://dev.mysql.com/downloads/mysql/\" target=\"_blank\" rel=\"noopener\">https://dev.mysql.com/downloads/mysql/</a></p>\n</blockquote>\n<h3 id=\"安装过程\"><a href=\"#安装过程\" class=\"headerlink\" title=\"安装过程\"></a>安装过程</h3><ol>\n<li><p>解压到纯英文路径 2</p>\n</li>\n<li><p>解压目录添加 my.ini （可选）</p>\n</li>\n</ol>\n<blockquote>\n<p>参考：</p>\n<p><a href=\"http://www.cnblogs.com/Ray-xujianguo/p/3322455.html\" target=\"_blank\" rel=\"noopener\">http://www.cnblogs.com/Ray-xujianguo/p/3322455.html</a> </p>\n<p><a href=\"https://gist.github.com/hanjong/1205199\" target=\"_blank\" rel=\"noopener\">https://gist.github.com/hanjong/1205199</a> </p>\n<p><a href=\"https://dev.mysql.com/doc/refman/5.5/en/mysqld-option-tables.html\" target=\"_blank\" rel=\"noopener\">https://dev.mysql.com/doc/refman/5.5/en/mysqld-option-tables.html</a></p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[mysqld] </span><br><span class=\"line\"># MySQL 安装目录 </span><br><span class=\"line\">\tbasedir=C:/Develop/mysql </span><br><span class=\"line\"># 数据文件所在目录 </span><br><span class=\"line\">\tdatadir=C:/Develop/mysql/data</span><br></pre></td></tr></table></figure>\n<p>3.以管理员身份运行 CMD 执行以下命令，安装一个 MySQL 服务</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 定位到安装目录下的 bin 文件夹 </span><br><span class=\"line\">$ cd &lt;MySQL安装目录&gt;/bin </span><br><span class=\"line\"># 初始化数据所需文件以及获取一个临时的访问密码 </span><br><span class=\"line\">$ mysqld ‐‐initialize ‐‐user=mysql ‐‐console </span><br><span class=\"line\"># 将 MySQL 安装为服务 可以指定服务名称 </span><br><span class=\"line\">$ mysqld ‐‐install MySQL</span><br></pre></td></tr></table></figure>\n<p> 4.登入 MySQL 服务器，重置密码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 先通过用户名密码进入 MySQL 操作环境 </span><br><span class=\"line\">$ mysql ‐u root ‐p </span><br><span class=\"line\">Enter password: # 输入临时密码   </span><br><span class=\"line\"># 设置数据库访问密码，一定要加分号 </span><br><span class=\"line\">mysql&gt; set password for &apos;root&apos;@&apos;localhost&apos; = password(&apos;123456&apos;);</span><br><span class=\"line\"></span><br><span class=\"line\">#这一步可能会报错 ERROR 1064 (42000) 提示SQL语法错误</span><br><span class=\"line\">#尝试这条命令</span><br><span class=\"line\">mysql&gt; alter user &apos;root&apos;@&apos;localhost&apos; identified by &apos;123&apos;;</span><br><span class=\"line\"># 或</span><br><span class=\"line\">mysql&gt; update mysql.user set authentication_string=password(&apos;123456&apos;) where user=&apos;root&apos; and Host = &apos;localhost&apos;;</span><br></pre></td></tr></table></figure>\n<p>解释：上面可能会报错的原因是MySQL5.7.6版本以后，password属性已经取消（使用SELECT  Password）</p>\n<p><img src=\"http://pan.vmccc.cn/images/2018/10/09/0fWpIoI6N4/mysql-error1064.jpg\" alt=\"\"></p>\n<p><img src=\"http://pan.vmccc.cn/images/2018/10/09/RRArT1cL4q/mysql-error1820.jpg\" alt=\"\"></p>\n<h2 id=\"基础操作\"><a href=\"#基础操作\" class=\"headerlink\" title=\"基础操作\"></a>基础操作</h2><h3 id=\"数据库管理工具\"><a href=\"#数据库管理工具\" class=\"headerlink\" title=\"数据库管理工具\"></a>数据库管理工具</h3><p>数据库管理工具本质上就是一个使用数据库服务器软件（Server）提供的服务的数据库客户端（Client）。</p>\n<h3 id=\"命令行工具\"><a href=\"#命令行工具\" class=\"headerlink\" title=\"命令行工具\"></a>命令行工具</h3><p>一般如果只是简单操作数据库，推荐使用 MySQL 内置的命令行工具完成：</p>\n<p>通过命令行运行解压目录下 bin 目录中的 mysql.exe ：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 定位到 bin 目录 </span><br><span class=\"line\">$ cd &lt;解压目录&gt;/bin </span><br><span class=\"line\"># 运行 mysql，‐u 指定数据库用户名，‐p 指定密码 </span><br><span class=\"line\">$ mysql ‐u root ‐p wanglei </span><br><span class=\"line\"># 一般不建议在命令中填写密码，因为这样会暴露你的密码，一般只加一个 ‐p 但是不给值 </span><br><span class=\"line\">$ mysql ‐u root ‐p </span><br><span class=\"line\">Enter password: # 这时会要求你输入密码</span><br></pre></td></tr></table></figure>\n<p>进入 MySQL 客户端的 REPL 环境过后，可以通过标准的 SQL 语句操作数据库。<br>常见的操作指令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; show databases;  ‐‐ 显示全部数据库 </span><br><span class=\"line\">mysql&gt; create database &lt;db‐name&gt;;  ‐‐ 创建一个指定名称的数据库 </span><br><span class=\"line\">mysql&gt; use &lt;db‐name&gt;;  ‐‐ 使用一个数据库，相当于进入指定的数据库 </span><br><span class=\"line\">mysql&gt; show tables;  ‐‐ 显示当前数据库中有哪些表 </span><br><span class=\"line\">mysql&gt; create table &lt;table‐name&gt; (id int, name varchar(20), age int);  ‐‐ 创建一个指定名称的数据 表，并添加 3 个列 </span><br><span class=\"line\">mysql&gt; desc &lt;table‐name&gt;;  ‐‐ 查看指定表结构 </span><br><span class=\"line\">mysql&gt; source ./path/to/sql‐file.sql  ‐‐ 执行本地 SQL 文件中的 SQL 语句 mysql&gt; drop table &lt;table‐name&gt;;  ‐‐ 删除一个指定名称的数据表 </span><br><span class=\"line\">mysql&gt; drop database &lt;db‐name&gt;;  ‐‐ 删除一个指定名称的数据库 </span><br><span class=\"line\">mysql&gt; exit|quit;  ‐‐ 退出数据库终端</span><br></pre></td></tr></table></figure>\n<h3 id=\"可视化工具\"><a href=\"#可视化工具\" class=\"headerlink\" title=\"可视化工具\"></a>可视化工具</h3><p>如果需要复杂的操作，推荐 Navicat Premium</p>\n<blockquote>\n<p>下载地址：<a href=\"http://www.navicat.com.cn/download/navicat-premium\" target=\"_blank\" rel=\"noopener\">http://www.navicat.com.cn/download/navicat-premium</a><br>这是一个付费软件，可以免费试用 14 天</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"安装与配置\"><a href=\"#安装与配置\" class=\"headerlink\" title=\"安装与配置\"></a>安装与配置</h2><p>在开发领域我们存储数据一般都是使用专门的数据库服务器专门提供的数据库服务，如果需要让自己的机器也可以 提供数据库服务，那么就需要安装特定的数据库服务器软件，这种类型的软件也有很多：</p>\n<ul>\n<li><p>Oracle </p>\n</li>\n<li><p>MySQL </p>\n</li>\n<li><p>SQL Server</p>\n</li>\n</ul>\n<p>这里我们选择一个很常见的数据库服务器软件：MySQL<br>MySQL 的安装同样建议采用解压版（目的是了解那些自动安装过程都做了哪些事）</p>\n<blockquote>\n<p>下载地址：<a href=\"https://dev.mysql.com/downloads/mysql/\" target=\"_blank\" rel=\"noopener\">https://dev.mysql.com/downloads/mysql/</a></p>\n</blockquote>\n<h3 id=\"安装过程\"><a href=\"#安装过程\" class=\"headerlink\" title=\"安装过程\"></a>安装过程</h3><ol>\n<li><p>解压到纯英文路径 2</p>\n</li>\n<li><p>解压目录添加 my.ini （可选）</p>\n</li>\n</ol>\n<blockquote>\n<p>参考：</p>\n<p><a href=\"http://www.cnblogs.com/Ray-xujianguo/p/3322455.html\" target=\"_blank\" rel=\"noopener\">http://www.cnblogs.com/Ray-xujianguo/p/3322455.html</a> </p>\n<p><a href=\"https://gist.github.com/hanjong/1205199\" target=\"_blank\" rel=\"noopener\">https://gist.github.com/hanjong/1205199</a> </p>\n<p><a href=\"https://dev.mysql.com/doc/refman/5.5/en/mysqld-option-tables.html\" target=\"_blank\" rel=\"noopener\">https://dev.mysql.com/doc/refman/5.5/en/mysqld-option-tables.html</a></p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[mysqld] </span><br><span class=\"line\"># MySQL 安装目录 </span><br><span class=\"line\">\tbasedir=C:/Develop/mysql </span><br><span class=\"line\"># 数据文件所在目录 </span><br><span class=\"line\">\tdatadir=C:/Develop/mysql/data</span><br></pre></td></tr></table></figure>\n<p>3.以管理员身份运行 CMD 执行以下命令，安装一个 MySQL 服务</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 定位到安装目录下的 bin 文件夹 </span><br><span class=\"line\">$ cd &lt;MySQL安装目录&gt;/bin </span><br><span class=\"line\"># 初始化数据所需文件以及获取一个临时的访问密码 </span><br><span class=\"line\">$ mysqld ‐‐initialize ‐‐user=mysql ‐‐console </span><br><span class=\"line\"># 将 MySQL 安装为服务 可以指定服务名称 </span><br><span class=\"line\">$ mysqld ‐‐install MySQL</span><br></pre></td></tr></table></figure>\n<p> 4.登入 MySQL 服务器，重置密码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 先通过用户名密码进入 MySQL 操作环境 </span><br><span class=\"line\">$ mysql ‐u root ‐p </span><br><span class=\"line\">Enter password: # 输入临时密码   </span><br><span class=\"line\"># 设置数据库访问密码，一定要加分号 </span><br><span class=\"line\">mysql&gt; set password for &apos;root&apos;@&apos;localhost&apos; = password(&apos;123456&apos;);</span><br><span class=\"line\"></span><br><span class=\"line\">#这一步可能会报错 ERROR 1064 (42000) 提示SQL语法错误</span><br><span class=\"line\">#尝试这条命令</span><br><span class=\"line\">mysql&gt; alter user &apos;root&apos;@&apos;localhost&apos; identified by &apos;123&apos;;</span><br><span class=\"line\"># 或</span><br><span class=\"line\">mysql&gt; update mysql.user set authentication_string=password(&apos;123456&apos;) where user=&apos;root&apos; and Host = &apos;localhost&apos;;</span><br></pre></td></tr></table></figure>\n<p>解释：上面可能会报错的原因是MySQL5.7.6版本以后，password属性已经取消（使用SELECT  Password）</p>\n<p><img src=\"http://pan.vmccc.cn/images/2018/10/09/0fWpIoI6N4/mysql-error1064.jpg\" alt=\"\"></p>\n<p><img src=\"http://pan.vmccc.cn/images/2018/10/09/RRArT1cL4q/mysql-error1820.jpg\" alt=\"\"></p>\n<h2 id=\"基础操作\"><a href=\"#基础操作\" class=\"headerlink\" title=\"基础操作\"></a>基础操作</h2><h3 id=\"数据库管理工具\"><a href=\"#数据库管理工具\" class=\"headerlink\" title=\"数据库管理工具\"></a>数据库管理工具</h3><p>数据库管理工具本质上就是一个使用数据库服务器软件（Server）提供的服务的数据库客户端（Client）。</p>\n<h3 id=\"命令行工具\"><a href=\"#命令行工具\" class=\"headerlink\" title=\"命令行工具\"></a>命令行工具</h3><p>一般如果只是简单操作数据库，推荐使用 MySQL 内置的命令行工具完成：</p>\n<p>通过命令行运行解压目录下 bin 目录中的 mysql.exe ：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 定位到 bin 目录 </span><br><span class=\"line\">$ cd &lt;解压目录&gt;/bin </span><br><span class=\"line\"># 运行 mysql，‐u 指定数据库用户名，‐p 指定密码 </span><br><span class=\"line\">$ mysql ‐u root ‐p wanglei </span><br><span class=\"line\"># 一般不建议在命令中填写密码，因为这样会暴露你的密码，一般只加一个 ‐p 但是不给值 </span><br><span class=\"line\">$ mysql ‐u root ‐p </span><br><span class=\"line\">Enter password: # 这时会要求你输入密码</span><br></pre></td></tr></table></figure>\n<p>进入 MySQL 客户端的 REPL 环境过后，可以通过标准的 SQL 语句操作数据库。<br>常见的操作指令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; show databases;  ‐‐ 显示全部数据库 </span><br><span class=\"line\">mysql&gt; create database &lt;db‐name&gt;;  ‐‐ 创建一个指定名称的数据库 </span><br><span class=\"line\">mysql&gt; use &lt;db‐name&gt;;  ‐‐ 使用一个数据库，相当于进入指定的数据库 </span><br><span class=\"line\">mysql&gt; show tables;  ‐‐ 显示当前数据库中有哪些表 </span><br><span class=\"line\">mysql&gt; create table &lt;table‐name&gt; (id int, name varchar(20), age int);  ‐‐ 创建一个指定名称的数据 表，并添加 3 个列 </span><br><span class=\"line\">mysql&gt; desc &lt;table‐name&gt;;  ‐‐ 查看指定表结构 </span><br><span class=\"line\">mysql&gt; source ./path/to/sql‐file.sql  ‐‐ 执行本地 SQL 文件中的 SQL 语句 mysql&gt; drop table &lt;table‐name&gt;;  ‐‐ 删除一个指定名称的数据表 </span><br><span class=\"line\">mysql&gt; drop database &lt;db‐name&gt;;  ‐‐ 删除一个指定名称的数据库 </span><br><span class=\"line\">mysql&gt; exit|quit;  ‐‐ 退出数据库终端</span><br></pre></td></tr></table></figure>\n<h3 id=\"可视化工具\"><a href=\"#可视化工具\" class=\"headerlink\" title=\"可视化工具\"></a>可视化工具</h3><p>如果需要复杂的操作，推荐 Navicat Premium</p>\n<blockquote>\n<p>下载地址：<a href=\"http://www.navicat.com.cn/download/navicat-premium\" target=\"_blank\" rel=\"noopener\">http://www.navicat.com.cn/download/navicat-premium</a><br>这是一个付费软件，可以免费试用 14 天</p>\n</blockquote>\n"},{"title":"git分支的创建与使用","comments":1,"abbrlink":"adk7e5ef","date":"2020-04-22T11:02:06.000Z","_content":"\n在此记录下命令：\n\n创建命令：\ngit branch 分支名\n\n切换分支：\ngit checkout 分支名\n\n创建并切换分支\ngit checkout -b 分支名\n\n删除分支\ngit branch -d 分支名\nps：如果需要删除的分支为合并到主分支git报错，此时可以用-D 大写的d来删除\n\n![](http://img.cdn.vmccc.cn/7269362-bf03355a365c8e68.png)\n\n合并分支：\n\ngit merge 分支名 （将分支名合并到当前分支！ps:注意是当前分支）\n注意：若指定分支与当前分支没有冲突，则执行快速合并。若存在冲突则快速合并失败 需要查看冲突的文件并手动解决冲突后在提交文件\n\ngit 后悔药\n\n重置到上一次的提交\n\ngit reset --hard HEAD^\n\n重置到上两次的提交\n\ngit reset --hard HEAD^^\n\ngit log 查看日志\n\n重置到某一个分支\n\ngit reset --hard commitId\n\n重点：后悔药的后悔药\n\ngit reflog\n\n查看所有的操作日志,在此可以查到最后一次的的commitid，然后就可以找 最新的commitid使用\n\ngit reset --hard\n\n最新的commitid即可\n\ngit日志以类图形化显示\n\ngit log --graph --decorate --oneline --all\n\n\n## 快捷语法\n\n1、`ggpush` 提交\n\n2.`gcc test` 创建分支","source":"_posts/git分支的创建与使用.md","raw":"---\ntitle: git分支的创建与使用\ncomments: true\ncategories:\n  - Git\ntags:\n  - Git\nabbrlink: adk7e5ef\ndate: 2020-04-22 19:02:06\n---\n\n在此记录下命令：\n\n创建命令：\ngit branch 分支名\n\n切换分支：\ngit checkout 分支名\n\n创建并切换分支\ngit checkout -b 分支名\n\n删除分支\ngit branch -d 分支名\nps：如果需要删除的分支为合并到主分支git报错，此时可以用-D 大写的d来删除\n\n![](http://img.cdn.vmccc.cn/7269362-bf03355a365c8e68.png)\n\n合并分支：\n\ngit merge 分支名 （将分支名合并到当前分支！ps:注意是当前分支）\n注意：若指定分支与当前分支没有冲突，则执行快速合并。若存在冲突则快速合并失败 需要查看冲突的文件并手动解决冲突后在提交文件\n\ngit 后悔药\n\n重置到上一次的提交\n\ngit reset --hard HEAD^\n\n重置到上两次的提交\n\ngit reset --hard HEAD^^\n\ngit log 查看日志\n\n重置到某一个分支\n\ngit reset --hard commitId\n\n重点：后悔药的后悔药\n\ngit reflog\n\n查看所有的操作日志,在此可以查到最后一次的的commitid，然后就可以找 最新的commitid使用\n\ngit reset --hard\n\n最新的commitid即可\n\ngit日志以类图形化显示\n\ngit log --graph --decorate --oneline --all\n\n\n## 快捷语法\n\n1、`ggpush` 提交\n\n2.`gcc test` 创建分支","slug":"git分支的创建与使用","published":1,"updated":"2020-05-18T16:35:00.482Z","layout":"post","photos":[],"link":"","_id":"cl78qfoov001eqic9lki534v8","content":"<p>在此记录下命令：</p>\n<p>创建命令：<br>git branch 分支名</p>\n<p>切换分支：<br>git checkout 分支名</p>\n<p>创建并切换分支<br>git checkout -b 分支名</p>\n<p>删除分支<br>git branch -d 分支名<br>ps：如果需要删除的分支为合并到主分支git报错，此时可以用-D 大写的d来删除</p>\n<p><img src=\"http://img.cdn.vmccc.cn/7269362-bf03355a365c8e68.png\" alt=\"\"></p>\n<p>合并分支：</p>\n<p>git merge 分支名 （将分支名合并到当前分支！ps:注意是当前分支）<br>注意：若指定分支与当前分支没有冲突，则执行快速合并。若存在冲突则快速合并失败 需要查看冲突的文件并手动解决冲突后在提交文件</p>\n<p>git 后悔药</p>\n<p>重置到上一次的提交</p>\n<p>git reset –hard HEAD^</p>\n<p>重置到上两次的提交</p>\n<p>git reset –hard HEAD^^</p>\n<p>git log 查看日志</p>\n<p>重置到某一个分支</p>\n<p>git reset –hard commitId</p>\n<p>重点：后悔药的后悔药</p>\n<p>git reflog</p>\n<p>查看所有的操作日志,在此可以查到最后一次的的commitid，然后就可以找 最新的commitid使用</p>\n<p>git reset –hard</p>\n<p>最新的commitid即可</p>\n<p>git日志以类图形化显示</p>\n<p>git log –graph –decorate –oneline –all</p>\n<h2 id=\"快捷语法\"><a href=\"#快捷语法\" class=\"headerlink\" title=\"快捷语法\"></a>快捷语法</h2><p>1、<code>ggpush</code> 提交</p>\n<p>2.<code>gcc test</code> 创建分支</p>\n","site":{"data":{}},"excerpt":"","more":"<p>在此记录下命令：</p>\n<p>创建命令：<br>git branch 分支名</p>\n<p>切换分支：<br>git checkout 分支名</p>\n<p>创建并切换分支<br>git checkout -b 分支名</p>\n<p>删除分支<br>git branch -d 分支名<br>ps：如果需要删除的分支为合并到主分支git报错，此时可以用-D 大写的d来删除</p>\n<p><img src=\"http://img.cdn.vmccc.cn/7269362-bf03355a365c8e68.png\" alt=\"\"></p>\n<p>合并分支：</p>\n<p>git merge 分支名 （将分支名合并到当前分支！ps:注意是当前分支）<br>注意：若指定分支与当前分支没有冲突，则执行快速合并。若存在冲突则快速合并失败 需要查看冲突的文件并手动解决冲突后在提交文件</p>\n<p>git 后悔药</p>\n<p>重置到上一次的提交</p>\n<p>git reset –hard HEAD^</p>\n<p>重置到上两次的提交</p>\n<p>git reset –hard HEAD^^</p>\n<p>git log 查看日志</p>\n<p>重置到某一个分支</p>\n<p>git reset –hard commitId</p>\n<p>重点：后悔药的后悔药</p>\n<p>git reflog</p>\n<p>查看所有的操作日志,在此可以查到最后一次的的commitid，然后就可以找 最新的commitid使用</p>\n<p>git reset –hard</p>\n<p>最新的commitid即可</p>\n<p>git日志以类图形化显示</p>\n<p>git log –graph –decorate –oneline –all</p>\n<h2 id=\"快捷语法\"><a href=\"#快捷语法\" class=\"headerlink\" title=\"快捷语法\"></a>快捷语法</h2><p>1、<code>ggpush</code> 提交</p>\n<p>2.<code>gcc test</code> 创建分支</p>\n"},{"title":"hexo添加Gitalik评论","comments":1,"abbrlink":"59c352fb","date":"2018-10-08T13:21:57.000Z","_content":"\n我使用的是hexo模板是Yilia的，会有些不同。\n\n[参考文档](https://knightcai.github.io/2017/12/19/%E4%B8%BA%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0-Gitalk-%E8%AF%84%E8%AE%BA%E6%8F%92%E4%BB%B6/)\n\n1、在模板文件里创建一个`gitalk.ejs`文件，把下面的代码复制进去\n\n```javascript\n<link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\">\n<div id=\"gitalk-container\"></div>\n<script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n<script type=\"text/javascript\">\n    var gitalk = new Gitalk({\n        clientID: '<%= theme.gitalk.clientID %>',\n        clientSecret: '<%= theme.gitalk.clientSecret %>',\n        id: window.location.pathname,\n        repo: '<%= theme.gitalk.repo %>',\n        owner: '<%= theme.gitalk.owner %>',\n        admin: '<%= theme.gitalk.admin %>',\n        distractionFreeMode: '<%= theme.gitalk.shade %>',\n        enableHotKey: '<%= theme.gitalk.enableHotKey %>',\n       \n    })\n    gitalk.render('gitalk-container')\n</script>\n```\n\n2、在文章页面添加这个模板，一般是在这个路径下`layout\\_partial\\article.ejs`\n\n```javascript\n<% if (theme.gitalk.enable){ %>\n    <%- partial('_partial/post/gitalk') %>\n  <% } %>\n```\n\n3、在模板的配置文件里添加\n\n```javascript\n#gitalk settings\ngitalk:\n  enable: true #用来做启用判断可以不用\n  owner: 'Github 用户名'\n  repo: 'Github 仓库名' #例：safranyu.github.io\n  admin: 'Github 用户名'\n  clientID: 'Github Application clientID'\n  clientSecret: 'Github Application clientSecret'\n  shade: true # 遮罩\n  enableHotKey: true #启用热键（cmd | ctrl + enter）提交评论\n```\n\n4、Gitalk 需要一个 **Github Application**\n\n[申请页面](https://github.com/settings/applications/new)\n\n填写下面参数：\n\n![](https://ws1.sinaimg.cn/large/006tKfTcgy1fmm7jaib6fj30jo0gaacs.jpg)\n\n会得到`Client ID`和`Client Secret`在配置文件里填好就行。\n\n我遇到报`Error: Bad credentials`错误，通过加单引号解决了","source":"_posts/hexo添加Gitalik评论.md","raw":"---\ntitle: hexo添加Gitalik评论\ncomments: true\ncategories:\n  - jQuer\n  - JS插件\ntags:\n  - JS插件\n  - JavaScript\nabbrlink: 59c352fb\ndate: 2018-10-08 21:21:57\n---\n\n我使用的是hexo模板是Yilia的，会有些不同。\n\n[参考文档](https://knightcai.github.io/2017/12/19/%E4%B8%BA%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0-Gitalk-%E8%AF%84%E8%AE%BA%E6%8F%92%E4%BB%B6/)\n\n1、在模板文件里创建一个`gitalk.ejs`文件，把下面的代码复制进去\n\n```javascript\n<link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\">\n<div id=\"gitalk-container\"></div>\n<script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n<script type=\"text/javascript\">\n    var gitalk = new Gitalk({\n        clientID: '<%= theme.gitalk.clientID %>',\n        clientSecret: '<%= theme.gitalk.clientSecret %>',\n        id: window.location.pathname,\n        repo: '<%= theme.gitalk.repo %>',\n        owner: '<%= theme.gitalk.owner %>',\n        admin: '<%= theme.gitalk.admin %>',\n        distractionFreeMode: '<%= theme.gitalk.shade %>',\n        enableHotKey: '<%= theme.gitalk.enableHotKey %>',\n       \n    })\n    gitalk.render('gitalk-container')\n</script>\n```\n\n2、在文章页面添加这个模板，一般是在这个路径下`layout\\_partial\\article.ejs`\n\n```javascript\n<% if (theme.gitalk.enable){ %>\n    <%- partial('_partial/post/gitalk') %>\n  <% } %>\n```\n\n3、在模板的配置文件里添加\n\n```javascript\n#gitalk settings\ngitalk:\n  enable: true #用来做启用判断可以不用\n  owner: 'Github 用户名'\n  repo: 'Github 仓库名' #例：safranyu.github.io\n  admin: 'Github 用户名'\n  clientID: 'Github Application clientID'\n  clientSecret: 'Github Application clientSecret'\n  shade: true # 遮罩\n  enableHotKey: true #启用热键（cmd | ctrl + enter）提交评论\n```\n\n4、Gitalk 需要一个 **Github Application**\n\n[申请页面](https://github.com/settings/applications/new)\n\n填写下面参数：\n\n![](https://ws1.sinaimg.cn/large/006tKfTcgy1fmm7jaib6fj30jo0gaacs.jpg)\n\n会得到`Client ID`和`Client Secret`在配置文件里填好就行。\n\n我遇到报`Error: Bad credentials`错误，通过加单引号解决了","slug":"hexo添加Gitalik评论","published":1,"updated":"2020-05-18T16:35:00.482Z","layout":"post","photos":[],"link":"","_id":"cl78qfoox001iqic9ixxfx261","content":"<p>我使用的是hexo模板是Yilia的，会有些不同。</p>\n<p><a href=\"https://knightcai.github.io/2017/12/19/%E4%B8%BA%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0-Gitalk-%E8%AF%84%E8%AE%BA%E6%8F%92%E4%BB%B6/\" target=\"_blank\" rel=\"noopener\">参考文档</a></p>\n<p>1、在模板文件里创建一个<code>gitalk.ejs</code>文件，把下面的代码复制进去</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;link rel=<span class=\"string\">\"stylesheet\"</span> href=<span class=\"string\">\"https://unpkg.com/gitalk/dist/gitalk.css\"</span>&gt;</span><br><span class=\"line\">&lt;div id=<span class=\"string\">\"gitalk-container\"</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;script src=<span class=\"string\">\"https://unpkg.com/gitalk/dist/gitalk.min.js\"</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> gitalk = <span class=\"keyword\">new</span> Gitalk(&#123;</span><br><span class=\"line\">        clientID: <span class=\"string\">'&lt;%= theme.gitalk.clientID %&gt;'</span>,</span><br><span class=\"line\">        clientSecret: <span class=\"string\">'&lt;%= theme.gitalk.clientSecret %&gt;'</span>,</span><br><span class=\"line\">        id: <span class=\"built_in\">window</span>.location.pathname,</span><br><span class=\"line\">        repo: <span class=\"string\">'&lt;%= theme.gitalk.repo %&gt;'</span>,</span><br><span class=\"line\">        owner: <span class=\"string\">'&lt;%= theme.gitalk.owner %&gt;'</span>,</span><br><span class=\"line\">        admin: <span class=\"string\">'&lt;%= theme.gitalk.admin %&gt;'</span>,</span><br><span class=\"line\">        distractionFreeMode: <span class=\"string\">'&lt;%= theme.gitalk.shade %&gt;'</span>,</span><br><span class=\"line\">        enableHotKey: <span class=\"string\">'&lt;%= theme.gitalk.enableHotKey %&gt;'</span>,</span><br><span class=\"line\">       </span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    gitalk.render(<span class=\"string\">'gitalk-container'</span>)</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n<p>2、在文章页面添加这个模板，一般是在这个路径下<code>layout\\_partial\\article.ejs</code></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;% <span class=\"keyword\">if</span> (theme.gitalk.enable)&#123; %&gt;</span><br><span class=\"line\">    &lt;%- partial(<span class=\"string\">'_partial/post/gitalk'</span>) %&gt;</span><br><span class=\"line\">  &lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure>\n<p>3、在模板的配置文件里添加</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#gitalk settings</span><br><span class=\"line\">gitalk:</span><br><span class=\"line\">  enable: true #用来做启用判断可以不用</span><br><span class=\"line\">  owner: <span class=\"string\">'Github 用户名'</span></span><br><span class=\"line\">  repo: 'Github 仓库名' #例：safranyu.github.io</span><br><span class=\"line\">  admin: <span class=\"string\">'Github 用户名'</span></span><br><span class=\"line\">  clientID: <span class=\"string\">'Github Application clientID'</span></span><br><span class=\"line\">  clientSecret: <span class=\"string\">'Github Application clientSecret'</span></span><br><span class=\"line\">  shade: true # 遮罩</span><br><span class=\"line\">  enableHotKey: true #启用热键（cmd | ctrl + enter）提交评论</span><br></pre></td></tr></table></figure>\n<p>4、Gitalk 需要一个 <strong>Github Application</strong></p>\n<p><a href=\"https://github.com/settings/applications/new\" target=\"_blank\" rel=\"noopener\">申请页面</a></p>\n<p>填写下面参数：</p>\n<p><img src=\"https://ws1.sinaimg.cn/large/006tKfTcgy1fmm7jaib6fj30jo0gaacs.jpg\" alt=\"\"></p>\n<p>会得到<code>Client ID</code>和<code>Client Secret</code>在配置文件里填好就行。</p>\n<p>我遇到报<code>Error: Bad credentials</code>错误，通过加单引号解决了</p>\n","site":{"data":{}},"excerpt":"","more":"<p>我使用的是hexo模板是Yilia的，会有些不同。</p>\n<p><a href=\"https://knightcai.github.io/2017/12/19/%E4%B8%BA%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0-Gitalk-%E8%AF%84%E8%AE%BA%E6%8F%92%E4%BB%B6/\" target=\"_blank\" rel=\"noopener\">参考文档</a></p>\n<p>1、在模板文件里创建一个<code>gitalk.ejs</code>文件，把下面的代码复制进去</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;link rel=<span class=\"string\">\"stylesheet\"</span> href=<span class=\"string\">\"https://unpkg.com/gitalk/dist/gitalk.css\"</span>&gt;</span><br><span class=\"line\">&lt;div id=<span class=\"string\">\"gitalk-container\"</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;script src=<span class=\"string\">\"https://unpkg.com/gitalk/dist/gitalk.min.js\"</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> gitalk = <span class=\"keyword\">new</span> Gitalk(&#123;</span><br><span class=\"line\">        clientID: <span class=\"string\">'&lt;%= theme.gitalk.clientID %&gt;'</span>,</span><br><span class=\"line\">        clientSecret: <span class=\"string\">'&lt;%= theme.gitalk.clientSecret %&gt;'</span>,</span><br><span class=\"line\">        id: <span class=\"built_in\">window</span>.location.pathname,</span><br><span class=\"line\">        repo: <span class=\"string\">'&lt;%= theme.gitalk.repo %&gt;'</span>,</span><br><span class=\"line\">        owner: <span class=\"string\">'&lt;%= theme.gitalk.owner %&gt;'</span>,</span><br><span class=\"line\">        admin: <span class=\"string\">'&lt;%= theme.gitalk.admin %&gt;'</span>,</span><br><span class=\"line\">        distractionFreeMode: <span class=\"string\">'&lt;%= theme.gitalk.shade %&gt;'</span>,</span><br><span class=\"line\">        enableHotKey: <span class=\"string\">'&lt;%= theme.gitalk.enableHotKey %&gt;'</span>,</span><br><span class=\"line\">       </span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    gitalk.render(<span class=\"string\">'gitalk-container'</span>)</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n<p>2、在文章页面添加这个模板，一般是在这个路径下<code>layout\\_partial\\article.ejs</code></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;% <span class=\"keyword\">if</span> (theme.gitalk.enable)&#123; %&gt;</span><br><span class=\"line\">    &lt;%- partial(<span class=\"string\">'_partial/post/gitalk'</span>) %&gt;</span><br><span class=\"line\">  &lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure>\n<p>3、在模板的配置文件里添加</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#gitalk settings</span><br><span class=\"line\">gitalk:</span><br><span class=\"line\">  enable: true #用来做启用判断可以不用</span><br><span class=\"line\">  owner: <span class=\"string\">'Github 用户名'</span></span><br><span class=\"line\">  repo: 'Github 仓库名' #例：safranyu.github.io</span><br><span class=\"line\">  admin: <span class=\"string\">'Github 用户名'</span></span><br><span class=\"line\">  clientID: <span class=\"string\">'Github Application clientID'</span></span><br><span class=\"line\">  clientSecret: <span class=\"string\">'Github Application clientSecret'</span></span><br><span class=\"line\">  shade: true # 遮罩</span><br><span class=\"line\">  enableHotKey: true #启用热键（cmd | ctrl + enter）提交评论</span><br></pre></td></tr></table></figure>\n<p>4、Gitalk 需要一个 <strong>Github Application</strong></p>\n<p><a href=\"https://github.com/settings/applications/new\" target=\"_blank\" rel=\"noopener\">申请页面</a></p>\n<p>填写下面参数：</p>\n<p><img src=\"https://ws1.sinaimg.cn/large/006tKfTcgy1fmm7jaib6fj30jo0gaacs.jpg\" alt=\"\"></p>\n<p>会得到<code>Client ID</code>和<code>Client Secret</code>在配置文件里填好就行。</p>\n<p>我遇到报<code>Error: Bad credentials</code>错误，通过加单引号解决了</p>\n"},{"title":"pulltorefresh.js插件滚动重复刷新","comments":1,"abbrlink":"d9939f07","date":"2019-03-21T14:49:58.000Z","_content":"\n触发下拉事件\n\n采用这个属性解决\n\n- **shouldPullToRefresh**（函数）pullToRefresh要触发哪个条件？ \n  \\- 默认为`!window.scrollY`\n\n```javascript\nPullToRefresh.init({\n    mainElement: '.atmosphere',\n    // triggerElement:'.atmosphere', //哪个元素应该触发刷新\n    shouldPullToRefresh: function(){\n    return !(document.documentElement.scrollTop||document.body.scrollTop)\n    },\n    onRefresh: function() {  //get请求\n    // console.log('加载中。。。')\n    alert('加载中。。。')\n\n    }\n});\n```\n\n","source":"_posts/pulltorefresh-js插件滚动重复刷新.md","raw":"---\ntitle: pulltorefresh.js插件滚动重复刷新\ncomments: true\ncategories:\n  - JavaScript\ntags:\n  - JavaScript\n  - js插件\nabbrlink: d9939f07\ndate: 2019-03-21 22:49:58\n---\n\n触发下拉事件\n\n采用这个属性解决\n\n- **shouldPullToRefresh**（函数）pullToRefresh要触发哪个条件？ \n  \\- 默认为`!window.scrollY`\n\n```javascript\nPullToRefresh.init({\n    mainElement: '.atmosphere',\n    // triggerElement:'.atmosphere', //哪个元素应该触发刷新\n    shouldPullToRefresh: function(){\n    return !(document.documentElement.scrollTop||document.body.scrollTop)\n    },\n    onRefresh: function() {  //get请求\n    // console.log('加载中。。。')\n    alert('加载中。。。')\n\n    }\n});\n```\n\n","slug":"pulltorefresh-js插件滚动重复刷新","published":1,"updated":"2020-05-18T16:35:00.483Z","layout":"post","photos":[],"link":"","_id":"cl78qfooy001lqic9rp8i90wm","content":"<p>触发下拉事件</p>\n<p>采用这个属性解决</p>\n<ul>\n<li><strong>shouldPullToRefresh</strong>（函数）pullToRefresh要触发哪个条件？<br>- 默认为<code>!window.scrollY</code></li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PullToRefresh.init(&#123;</span><br><span class=\"line\">    mainElement: <span class=\"string\">'.atmosphere'</span>,</span><br><span class=\"line\">    <span class=\"comment\">// triggerElement:'.atmosphere', //哪个元素应该触发刷新</span></span><br><span class=\"line\">    shouldPullToRefresh: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> !(<span class=\"built_in\">document</span>.documentElement.scrollTop||<span class=\"built_in\">document</span>.body.scrollTop)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    onRefresh: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;  <span class=\"comment\">//get请求</span></span><br><span class=\"line\">    <span class=\"comment\">// console.log('加载中。。。')</span></span><br><span class=\"line\">    alert(<span class=\"string\">'加载中。。。'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>触发下拉事件</p>\n<p>采用这个属性解决</p>\n<ul>\n<li><strong>shouldPullToRefresh</strong>（函数）pullToRefresh要触发哪个条件？<br>- 默认为<code>!window.scrollY</code></li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PullToRefresh.init(&#123;</span><br><span class=\"line\">    mainElement: <span class=\"string\">'.atmosphere'</span>,</span><br><span class=\"line\">    <span class=\"comment\">// triggerElement:'.atmosphere', //哪个元素应该触发刷新</span></span><br><span class=\"line\">    shouldPullToRefresh: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> !(<span class=\"built_in\">document</span>.documentElement.scrollTop||<span class=\"built_in\">document</span>.body.scrollTop)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    onRefresh: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;  <span class=\"comment\">//get请求</span></span><br><span class=\"line\">    <span class=\"comment\">// console.log('加载中。。。')</span></span><br><span class=\"line\">    alert(<span class=\"string\">'加载中。。。'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n"},{"title":"sublime编辑器Ctrl+E快捷键无效","comments":1,"abbrlink":"8280745d","date":"2018-10-06T10:25:40.000Z","_content":"出现此情况有两种原因，一种没有安装Emmet，另一种就是安装出现了问题\n安装Emmet\n首先下载package control\n过程如下：\n```\n(1) 打开sublime，\n(2) 按Ctrl+`，调出命令框\n(3) 在框中根据sublime版本输入代码\n打开sublime，通过Ctrl+Shift+P快捷键调出命令面板，在命令面板中输入install package（sublime有模糊搜索功能），并按回车打开\n在出来的命令框中输入emmet并按回车进行下载\n结束（完美）。\n```\n安装Emmet出现错误\n去gihub下载[pyV8](https://link.jianshu.com/?t=https://github.com/emmetio/pyv8-binaries#readme)\n然后找到你的Sublime的packages的安装包路径\n解压文件至Packages\\PyV8文件夹内(Preferences – Browser Packages)\n结束（完美）。\n","source":"_posts/sublime编辑器Ctrl-E快捷键无效.md","raw":"---\ntitle: sublime编辑器Ctrl+E快捷键无效\ncomments: true\ncategories:\n  - Sublime\ntags:\n  - Sublime\nabbrlink: 8280745d\ndate: 2018-10-06 18:25:40\n---\n出现此情况有两种原因，一种没有安装Emmet，另一种就是安装出现了问题\n安装Emmet\n首先下载package control\n过程如下：\n```\n(1) 打开sublime，\n(2) 按Ctrl+`，调出命令框\n(3) 在框中根据sublime版本输入代码\n打开sublime，通过Ctrl+Shift+P快捷键调出命令面板，在命令面板中输入install package（sublime有模糊搜索功能），并按回车打开\n在出来的命令框中输入emmet并按回车进行下载\n结束（完美）。\n```\n安装Emmet出现错误\n去gihub下载[pyV8](https://link.jianshu.com/?t=https://github.com/emmetio/pyv8-binaries#readme)\n然后找到你的Sublime的packages的安装包路径\n解压文件至Packages\\PyV8文件夹内(Preferences – Browser Packages)\n结束（完美）。\n","slug":"sublime编辑器Ctrl-E快捷键无效","published":1,"updated":"2020-05-18T16:35:00.483Z","layout":"post","photos":[],"link":"","_id":"cl78qfooz001oqic9u2jct27p","content":"<p>出现此情况有两种原因，一种没有安装Emmet，另一种就是安装出现了问题<br>安装Emmet<br>首先下载package control<br>过程如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(1) 打开sublime，</span><br><span class=\"line\">(2) 按Ctrl+`，调出命令框</span><br><span class=\"line\">(3) 在框中根据sublime版本输入代码</span><br><span class=\"line\">打开sublime，通过Ctrl+Shift+P快捷键调出命令面板，在命令面板中输入install package（sublime有模糊搜索功能），并按回车打开</span><br><span class=\"line\">在出来的命令框中输入emmet并按回车进行下载</span><br><span class=\"line\">结束（完美）。</span><br></pre></td></tr></table></figure></p>\n<p>安装Emmet出现错误<br>去gihub下载<a href=\"https://link.jianshu.com/?t=https://github.com/emmetio/pyv8-binaries#readme\" target=\"_blank\" rel=\"noopener\">pyV8</a><br>然后找到你的Sublime的packages的安装包路径<br>解压文件至Packages\\PyV8文件夹内(Preferences – Browser Packages)<br>结束（完美）。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>出现此情况有两种原因，一种没有安装Emmet，另一种就是安装出现了问题<br>安装Emmet<br>首先下载package control<br>过程如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(1) 打开sublime，</span><br><span class=\"line\">(2) 按Ctrl+`，调出命令框</span><br><span class=\"line\">(3) 在框中根据sublime版本输入代码</span><br><span class=\"line\">打开sublime，通过Ctrl+Shift+P快捷键调出命令面板，在命令面板中输入install package（sublime有模糊搜索功能），并按回车打开</span><br><span class=\"line\">在出来的命令框中输入emmet并按回车进行下载</span><br><span class=\"line\">结束（完美）。</span><br></pre></td></tr></table></figure></p>\n<p>安装Emmet出现错误<br>去gihub下载<a href=\"https://link.jianshu.com/?t=https://github.com/emmetio/pyv8-binaries#readme\" target=\"_blank\" rel=\"noopener\">pyV8</a><br>然后找到你的Sublime的packages的安装包路径<br>解压文件至Packages\\PyV8文件夹内(Preferences – Browser Packages)<br>结束（完美）。</p>\n"},{"title":"js或jquery如何获取父、子、兄元素","comments":1,"abbrlink":"b72c2fe5","date":"2019-03-21T14:55:37.000Z","_content":"\n原生javascript方法:\n\n```javascript\nvar a = document.getElementById(\"dom\");\ndel_space(a); //清理空格\nvar b = a.childNodes; //获取a的全部子节点；\nvar c = a.parentNode; //获取a的父节点；\nvar d = a.nextSibling; //获取a的下一个兄弟节点\nvar e = a.previousSibling; //获取a的上一个兄弟节点\nvar f = a.firstChild; //获取a的第一个子节点\nvar g = a.lastChild; //获取a的最后一个子节点\n```\n\njQuery方法：\n\n```javascript\njQuery.parent(expr) //找父亲节点，可以传入expr进行过滤，比如$(\"span\").parent()或者$(\"span\").parent(\".class\")\n\njQuery.parents(expr) //类似于jQuery.parents(expr),但是是查找所有祖先元素，不限于父元素\n\njQuery.children(expr) //返回所有子节点，这个方法只会返回直接的孩子节点，不会返回所有的子孙节点\n\njQuery.contents() //返回下面的所有内容，包括节点和文本。这个方法和children()的区别就在于，包括空白文本，也会被作为一个jQuery对象返回，children()则只会返回节点\n\njQuery.prev() //返回上一个兄弟节点，不是所有的兄弟节点\n\njQuery.prevAll() //返回所有之前的兄弟节点\n\njQuery.next() //返回下一个兄弟节点，不是所有的兄弟节点\n\njQuery.nextAll() //返回所有之后的兄弟节点\n\njQuery.siblings() //返回兄弟姐妹节点，不分前后\n\njQuery.find(expr)  //跟jQuery.filter(expr)完全不一样。\n\njQuery.filter() //是从初始的jQuery对象集合中筛选出一部分，而jQuery.find()的返回结果，不会有初始集合中的内容，比如$(\"p\"),find(\"span\"),是从p元素开始找,等同于$(\"p span\").\n```\n\n","source":"_posts/js或jquery如何获取父、子、兄元素.md","raw":"---\ntitle: js或jquery如何获取父、子、兄元素\ncomments: true\ncategories:\n  - JavaScript\ntags:\n  - JavaScript\nabbrlink: b72c2fe5\ndate: 2019-03-21 22:55:37\n---\n\n原生javascript方法:\n\n```javascript\nvar a = document.getElementById(\"dom\");\ndel_space(a); //清理空格\nvar b = a.childNodes; //获取a的全部子节点；\nvar c = a.parentNode; //获取a的父节点；\nvar d = a.nextSibling; //获取a的下一个兄弟节点\nvar e = a.previousSibling; //获取a的上一个兄弟节点\nvar f = a.firstChild; //获取a的第一个子节点\nvar g = a.lastChild; //获取a的最后一个子节点\n```\n\njQuery方法：\n\n```javascript\njQuery.parent(expr) //找父亲节点，可以传入expr进行过滤，比如$(\"span\").parent()或者$(\"span\").parent(\".class\")\n\njQuery.parents(expr) //类似于jQuery.parents(expr),但是是查找所有祖先元素，不限于父元素\n\njQuery.children(expr) //返回所有子节点，这个方法只会返回直接的孩子节点，不会返回所有的子孙节点\n\njQuery.contents() //返回下面的所有内容，包括节点和文本。这个方法和children()的区别就在于，包括空白文本，也会被作为一个jQuery对象返回，children()则只会返回节点\n\njQuery.prev() //返回上一个兄弟节点，不是所有的兄弟节点\n\njQuery.prevAll() //返回所有之前的兄弟节点\n\njQuery.next() //返回下一个兄弟节点，不是所有的兄弟节点\n\njQuery.nextAll() //返回所有之后的兄弟节点\n\njQuery.siblings() //返回兄弟姐妹节点，不分前后\n\njQuery.find(expr)  //跟jQuery.filter(expr)完全不一样。\n\njQuery.filter() //是从初始的jQuery对象集合中筛选出一部分，而jQuery.find()的返回结果，不会有初始集合中的内容，比如$(\"p\"),find(\"span\"),是从p元素开始找,等同于$(\"p span\").\n```\n\n","slug":"js或jquery如何获取父、子、兄元素","published":1,"updated":"2020-05-18T16:35:00.483Z","layout":"post","photos":[],"link":"","_id":"cl78qfop2001tqic9oq032u0p","content":"<p>原生javascript方法:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"dom\"</span>);</span><br><span class=\"line\">del_space(a); <span class=\"comment\">//清理空格</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> b = a.childNodes; <span class=\"comment\">//获取a的全部子节点；</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> c = a.parentNode; <span class=\"comment\">//获取a的父节点；</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> d = a.nextSibling; <span class=\"comment\">//获取a的下一个兄弟节点</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> e = a.previousSibling; <span class=\"comment\">//获取a的上一个兄弟节点</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> f = a.firstChild; <span class=\"comment\">//获取a的第一个子节点</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> g = a.lastChild; <span class=\"comment\">//获取a的最后一个子节点</span></span><br></pre></td></tr></table></figure>\n<p>jQuery方法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jQuery.parent(expr) <span class=\"comment\">//找父亲节点，可以传入expr进行过滤，比如$(\"span\").parent()或者$(\"span\").parent(\".class\")</span></span><br><span class=\"line\"></span><br><span class=\"line\">jQuery.parents(expr) <span class=\"comment\">//类似于jQuery.parents(expr),但是是查找所有祖先元素，不限于父元素</span></span><br><span class=\"line\"></span><br><span class=\"line\">jQuery.children(expr) <span class=\"comment\">//返回所有子节点，这个方法只会返回直接的孩子节点，不会返回所有的子孙节点</span></span><br><span class=\"line\"></span><br><span class=\"line\">jQuery.contents() <span class=\"comment\">//返回下面的所有内容，包括节点和文本。这个方法和children()的区别就在于，包括空白文本，也会被作为一个jQuery对象返回，children()则只会返回节点</span></span><br><span class=\"line\"></span><br><span class=\"line\">jQuery.prev() <span class=\"comment\">//返回上一个兄弟节点，不是所有的兄弟节点</span></span><br><span class=\"line\"></span><br><span class=\"line\">jQuery.prevAll() <span class=\"comment\">//返回所有之前的兄弟节点</span></span><br><span class=\"line\"></span><br><span class=\"line\">jQuery.next() <span class=\"comment\">//返回下一个兄弟节点，不是所有的兄弟节点</span></span><br><span class=\"line\"></span><br><span class=\"line\">jQuery.nextAll() <span class=\"comment\">//返回所有之后的兄弟节点</span></span><br><span class=\"line\"></span><br><span class=\"line\">jQuery.siblings() <span class=\"comment\">//返回兄弟姐妹节点，不分前后</span></span><br><span class=\"line\"></span><br><span class=\"line\">jQuery.find(expr)  <span class=\"comment\">//跟jQuery.filter(expr)完全不一样。</span></span><br><span class=\"line\"></span><br><span class=\"line\">jQuery.filter() <span class=\"comment\">//是从初始的jQuery对象集合中筛选出一部分，而jQuery.find()的返回结果，不会有初始集合中的内容，比如$(\"p\"),find(\"span\"),是从p元素开始找,等同于$(\"p span\").</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>原生javascript方法:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"dom\"</span>);</span><br><span class=\"line\">del_space(a); <span class=\"comment\">//清理空格</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> b = a.childNodes; <span class=\"comment\">//获取a的全部子节点；</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> c = a.parentNode; <span class=\"comment\">//获取a的父节点；</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> d = a.nextSibling; <span class=\"comment\">//获取a的下一个兄弟节点</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> e = a.previousSibling; <span class=\"comment\">//获取a的上一个兄弟节点</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> f = a.firstChild; <span class=\"comment\">//获取a的第一个子节点</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> g = a.lastChild; <span class=\"comment\">//获取a的最后一个子节点</span></span><br></pre></td></tr></table></figure>\n<p>jQuery方法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jQuery.parent(expr) <span class=\"comment\">//找父亲节点，可以传入expr进行过滤，比如$(\"span\").parent()或者$(\"span\").parent(\".class\")</span></span><br><span class=\"line\"></span><br><span class=\"line\">jQuery.parents(expr) <span class=\"comment\">//类似于jQuery.parents(expr),但是是查找所有祖先元素，不限于父元素</span></span><br><span class=\"line\"></span><br><span class=\"line\">jQuery.children(expr) <span class=\"comment\">//返回所有子节点，这个方法只会返回直接的孩子节点，不会返回所有的子孙节点</span></span><br><span class=\"line\"></span><br><span class=\"line\">jQuery.contents() <span class=\"comment\">//返回下面的所有内容，包括节点和文本。这个方法和children()的区别就在于，包括空白文本，也会被作为一个jQuery对象返回，children()则只会返回节点</span></span><br><span class=\"line\"></span><br><span class=\"line\">jQuery.prev() <span class=\"comment\">//返回上一个兄弟节点，不是所有的兄弟节点</span></span><br><span class=\"line\"></span><br><span class=\"line\">jQuery.prevAll() <span class=\"comment\">//返回所有之前的兄弟节点</span></span><br><span class=\"line\"></span><br><span class=\"line\">jQuery.next() <span class=\"comment\">//返回下一个兄弟节点，不是所有的兄弟节点</span></span><br><span class=\"line\"></span><br><span class=\"line\">jQuery.nextAll() <span class=\"comment\">//返回所有之后的兄弟节点</span></span><br><span class=\"line\"></span><br><span class=\"line\">jQuery.siblings() <span class=\"comment\">//返回兄弟姐妹节点，不分前后</span></span><br><span class=\"line\"></span><br><span class=\"line\">jQuery.find(expr)  <span class=\"comment\">//跟jQuery.filter(expr)完全不一样。</span></span><br><span class=\"line\"></span><br><span class=\"line\">jQuery.filter() <span class=\"comment\">//是从初始的jQuery对象集合中筛选出一部分，而jQuery.find()的返回结果，不会有初始集合中的内容，比如$(\"p\"),find(\"span\"),是从p元素开始找,等同于$(\"p span\").</span></span><br></pre></td></tr></table></figure>\n"},{"title":"vue-router query和params传参(接收参数) 的区别","comments":1,"abbrlink":"36597039","date":"2019-03-30T15:18:16.000Z","_content":"\n#### **1、query方式传参和接收参数**\n\n```javascript\n传参: \nthis.$router.push({\n        path:'/xxx',\n        query:{\n          id:id\n        }\n      })\n  \n接收参数:\nthis.$route.query.id\n```\n\n注意:传参是this.$router,接收参数是this.$route,这里千万要看清了！！！\n\n**this.$router 和this.$route有何区别？**\n\n在控制台打印两者可以很明显的看出两者的一些区别：\n\n![](https://segmentfault.com/img/bVbbI7f?w=652&h=425)\n\n- 1.$router为VueRouter实例，想要导航到不同URL，则使用$router.push方法\n- 2.$route为当前router跳转对象，里面可以获取name、path、query、params等\n\n#### **2、params方式传参和接收参数**\n\n```javascript\n传参: \nthis.$router.push({\n        name:'xxx',\n        params:{\n          id:id\n        }\n      })\n  \n接收参数:\nthis.$route.params.id\n```\n\n注意:params传参，push里面只能是 name:'xxxx',不能是path:'/xxx',因为params只能用name来引入路由，如果这里写成了path，接收参数页面会是undefined！！！\n\n转载 https://segmentfault.com/a/1190000012735168","source":"_posts/vue-router-query和params传参-接收参数-的区别.md","raw":"---\ntitle: vue-router query和params传参(接收参数) 的区别\ncomments: true\ncategories:\n  - JavaScript\n  - Vue\ntags:\n  - vue\n  - vue-router\nabbrlink: '36597039'\ndate: 2019-03-30 23:18:16\n---\n\n#### **1、query方式传参和接收参数**\n\n```javascript\n传参: \nthis.$router.push({\n        path:'/xxx',\n        query:{\n          id:id\n        }\n      })\n  \n接收参数:\nthis.$route.query.id\n```\n\n注意:传参是this.$router,接收参数是this.$route,这里千万要看清了！！！\n\n**this.$router 和this.$route有何区别？**\n\n在控制台打印两者可以很明显的看出两者的一些区别：\n\n![](https://segmentfault.com/img/bVbbI7f?w=652&h=425)\n\n- 1.$router为VueRouter实例，想要导航到不同URL，则使用$router.push方法\n- 2.$route为当前router跳转对象，里面可以获取name、path、query、params等\n\n#### **2、params方式传参和接收参数**\n\n```javascript\n传参: \nthis.$router.push({\n        name:'xxx',\n        params:{\n          id:id\n        }\n      })\n  \n接收参数:\nthis.$route.params.id\n```\n\n注意:params传参，push里面只能是 name:'xxxx',不能是path:'/xxx',因为params只能用name来引入路由，如果这里写成了path，接收参数页面会是undefined！！！\n\n转载 https://segmentfault.com/a/1190000012735168","slug":"vue-router-query和params传参-接收参数-的区别","published":1,"updated":"2020-05-18T16:35:00.484Z","layout":"post","photos":[],"link":"","_id":"cl78qfop3001vqic9as0qq1t5","content":"<h4 id=\"1、query方式传参和接收参数\"><a href=\"#1、query方式传参和接收参数\" class=\"headerlink\" title=\"1、query方式传参和接收参数\"></a><strong>1、query方式传参和接收参数</strong></h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">传参: </span><br><span class=\"line\"><span class=\"keyword\">this</span>.$router.push(&#123;</span><br><span class=\"line\">        path:<span class=\"string\">'/xxx'</span>,</span><br><span class=\"line\">        query:&#123;</span><br><span class=\"line\">          id:id</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">  </span><br><span class=\"line\">接收参数:</span><br><span class=\"line\"><span class=\"keyword\">this</span>.$route.query.id</span><br></pre></td></tr></table></figure>\n<p>注意:传参是this.$router,接收参数是this.$route,这里千万要看清了！！！</p>\n<p><strong>this.$router 和this.$route有何区别？</strong></p>\n<p>在控制台打印两者可以很明显的看出两者的一些区别：</p>\n<p><img src=\"https://segmentfault.com/img/bVbbI7f?w=652&amp;h=425\" alt=\"\"></p>\n<ul>\n<li>1.$router为VueRouter实例，想要导航到不同URL，则使用$router.push方法</li>\n<li>2.$route为当前router跳转对象，里面可以获取name、path、query、params等</li>\n</ul>\n<h4 id=\"2、params方式传参和接收参数\"><a href=\"#2、params方式传参和接收参数\" class=\"headerlink\" title=\"2、params方式传参和接收参数\"></a><strong>2、params方式传参和接收参数</strong></h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">传参: </span><br><span class=\"line\"><span class=\"keyword\">this</span>.$router.push(&#123;</span><br><span class=\"line\">        name:<span class=\"string\">'xxx'</span>,</span><br><span class=\"line\">        params:&#123;</span><br><span class=\"line\">          id:id</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">  </span><br><span class=\"line\">接收参数:</span><br><span class=\"line\"><span class=\"keyword\">this</span>.$route.params.id</span><br></pre></td></tr></table></figure>\n<p>注意:params传参，push里面只能是 name:’xxxx’,不能是path:’/xxx’,因为params只能用name来引入路由，如果这里写成了path，接收参数页面会是undefined！！！</p>\n<p>转载 <a href=\"https://segmentfault.com/a/1190000012735168\" target=\"_blank\" rel=\"noopener\">https://segmentfault.com/a/1190000012735168</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"1、query方式传参和接收参数\"><a href=\"#1、query方式传参和接收参数\" class=\"headerlink\" title=\"1、query方式传参和接收参数\"></a><strong>1、query方式传参和接收参数</strong></h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">传参: </span><br><span class=\"line\"><span class=\"keyword\">this</span>.$router.push(&#123;</span><br><span class=\"line\">        path:<span class=\"string\">'/xxx'</span>,</span><br><span class=\"line\">        query:&#123;</span><br><span class=\"line\">          id:id</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">  </span><br><span class=\"line\">接收参数:</span><br><span class=\"line\"><span class=\"keyword\">this</span>.$route.query.id</span><br></pre></td></tr></table></figure>\n<p>注意:传参是this.$router,接收参数是this.$route,这里千万要看清了！！！</p>\n<p><strong>this.$router 和this.$route有何区别？</strong></p>\n<p>在控制台打印两者可以很明显的看出两者的一些区别：</p>\n<p><img src=\"https://segmentfault.com/img/bVbbI7f?w=652&amp;h=425\" alt=\"\"></p>\n<ul>\n<li>1.$router为VueRouter实例，想要导航到不同URL，则使用$router.push方法</li>\n<li>2.$route为当前router跳转对象，里面可以获取name、path、query、params等</li>\n</ul>\n<h4 id=\"2、params方式传参和接收参数\"><a href=\"#2、params方式传参和接收参数\" class=\"headerlink\" title=\"2、params方式传参和接收参数\"></a><strong>2、params方式传参和接收参数</strong></h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">传参: </span><br><span class=\"line\"><span class=\"keyword\">this</span>.$router.push(&#123;</span><br><span class=\"line\">        name:<span class=\"string\">'xxx'</span>,</span><br><span class=\"line\">        params:&#123;</span><br><span class=\"line\">          id:id</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">  </span><br><span class=\"line\">接收参数:</span><br><span class=\"line\"><span class=\"keyword\">this</span>.$route.params.id</span><br></pre></td></tr></table></figure>\n<p>注意:params传参，push里面只能是 name:’xxxx’,不能是path:’/xxx’,因为params只能用name来引入路由，如果这里写成了path，接收参数页面会是undefined！！！</p>\n<p>转载 <a href=\"https://segmentfault.com/a/1190000012735168\" target=\"_blank\" rel=\"noopener\">https://segmentfault.com/a/1190000012735168</a></p>\n"},{"title":"vue-cli3下的Axios封装","abbrlink":"9bbb323","date":"2019-03-23T15:25:07.000Z","_content":"## axios 简介\n\n首先要明白的是axios是什么：axios是基于promise（诺言）用于浏览器和node.js是http客户端。\n\naxios的作用是什么：axios主要是用于向后台发起请求的，还有在请求中做更多是可控功能。\n\n- 从浏览器中创建 XMLHttpRequest\n- 从 node.js 发出 http 请求\n- 支持 Promise API\n- 拦截请求和响应\n- 转换请求和响应数据\n- 取消请求\n- 自动转换JSON数据\n- 客户端支持防止 CSRF/XSRF\n\n### 项目配置\n\n##### 首先当然还是要安装啦：\n\n```shell\nnpm install axios\n```\n\n之后我们新建一个api文件夹用来放接口和axios的配置。\n先给大家看看我配置好之后的文件夹目录结构：\n\n![](http://pan.vmccc.cn/?/images/2019/03/23/YbxfrFGHXM/hexoVue.png)\n\n可以说这次配置是我划分的比较详细的配置方法了，具体每个文件都分别做什么用，我们现在来看看吧。\n\n##### axios.js\n\n这个文件主要创建axios实例并对拦截器进行配置，不理解拦截器的同学可以看看下图：\n\n```javascript\nimport axios from 'axios'\n\n// 创建 axios 实例\nlet service = axios.create({\n  // headers: {'Content-Type': 'application/json'},\n  timeout: 60000\n})\n\n// 设置 post、put 默认 Content-Type\nservice.defaults.headers.post['Content-Type'] = 'application/json'\nservice.defaults.headers.put['Content-Type'] = 'application/json'\n\n// 添加请求拦截器\nservice.interceptors.request.use(\n  (config) => {\n    if (config.method === 'post' || config.method === 'put') {\n      // post、put 提交时，将对象转换为string, 为处理Java后台解析问题\n      config.data = JSON.stringify(config.data)\n    }\n    // 请求发送前进行处理\n    return config\n  },\n  (error) => {\n    // 请求错误处理\n    return Promise.reject(error)\n  }\n)\n\n// 添加响应拦截器\nservice.interceptors.response.use(\n  (response) => {\n    let { data } = response\n    return data\n  },\n  (error) => {\n    let info = {},\n      { status, statusText, data } = error.response\n\n    if (!error.response) {\n      info = {\n        code: 5000,\n        msg: 'Network Error'\n      }\n    } else {\n      // 此处整理错误信息格式\n      info = {\n        code: status,\n        data: data,\n        msg: statusText\n      }\n    }\n  }\n)\n\n/**\n * 创建统一封装过的 axios 实例\n * @return {AxiosInstance}\n */\nexport default function() {\n  return service\n}\n```\n\n##### index.js\n\nindex.js文件主要封装我们几个常用的方法，get、post、put、delete\n\n```javascript\nimport axios from './axios'\n\nlet instance = axios()\n\nexport default {\n  get(url, params, headers) {\n    let options = {}\n\n    if (params) {\n      options.params = params\n    }\n    if (headers) {\n      options.headers = headers\n    }\n    return instance.get(url, options)\n  },\n  post(url, params, headers, data) {\n    let options = {}\n\n    if (params) {\n      options.params = params\n    }\n    if (headers) {\n      options.headers = headers\n    }\n    return instance.post(url, data, options)\n  },\n  put(url, params, headers) {\n    let options = {}\n\n    if (headers) {\n      options.headers = headers\n    }\n    return instance.put(url, params, options)\n  },\n  delete(url, params, headers) {\n    let options = {}\n\n    if (params) {\n      options.params = params\n    }\n    if (headers) {\n      options.headers = headers\n    }\n    return instance.delete(url, options)\n  }\n}\n```\n\n##### install.js\n\ninstall.js文件可以把我们所有的api接口安装到全局，之后我们在main.js文件中导入就可以了。\n\n```javascript\nimport apiList from './apiList'\n\nconst install = function(Vue) {\n  if (install.installed) {\n    return\n\n  install.installed = true\n  Object.defineProperties(Vue.prototype, {\n    $api: {\n      get() {\n        return apiList\n      }\n    }\n  })\n}\n\nexport default {\n  install\n}\n```\n\n**main.js中添加：**\n\n```javascript\nimport api from './api/install'\nVue.use(api)\n```\n\n##### apiList.js\n\n把我们所有的api文件夹导入到这一个文件中来。\n\n```javascript\nimport matches from './matches'\nimport user from './user'\n\nexport default {\n  matches,\n  user\n}\n```\n\n##### baseUrl.js\n\n根据不同的环境设定不同的baseUrl，在配置这个文件前，我们先需要做如下几件事：\n1.根目录新建`.env.dev`文件并在文件内写入`NODE_ENV = 'dev'`\n2.在`package.json`文件内添加：\n\n```javascript\n \"build:dev\": \"vue-cli-service build --mode dev\",\n \"build:pre\": \"vue-cli-service build --mode pre\",\n```\n\n以下是baseUrl.js的代码：\n\n```javascript\nlet baseUrl = '/api' // 本地代理\n\nswitch (process.env.NODE_ENV) {\n  case 'dev':\n    baseUrl = 'http://testserver.feleti.cn/' // 测试环境url\n    break\n  case 'pre':\n    baseUrl = 'https://pre-server.feleti.cn' // 预上线环境url\n    break\n  case 'production':\n    baseUrl = 'https://api.feleti.cn' // 生产环境url\n    break\n}\n\nexport default baseUrl\n```\n\n##### matches、user\n\n这两个文件夹都是根据api类型进行区分的，在项目以后也建议大家根据api类型划分出不同的文件存放，在小项目中这样做可能显得很麻烦，但如果项目比较大，这样做的优势就体现出来了。\n\n我们就只看看matches文件夹下的内容：\n\n###### urls.js\n\n把一个类型下的所有url接口放入这一个文件，我只放了一个暂时，可以继续添加。\n\n```javascript\nimport baseUrl from '../baseUrl'\nexport default {\n  matches: baseUrl + '/matches'\n}\n```\n\n###### index.js\n\n有些接口需要在header中添加token或是其他，可以按如下配置。\n\n```javascript\nimport api from '../index'\nimport urls from './urls'\n\nconst header = {}\n\nexport default {\n  matches(params) {\n    // return出去了一个promise\n    return api.get(urls.matches, params, header)\n  }\n}\n```\n\n配置完上述全部文件就算是大功告成了，下面我们看看如何使用吧。\n\n### 组件中调用\n\n```javascript\ncreated() {\n    this.matches()\n  },\n  methods: {\n    async matches() {\n      // 这里用try catch包裹，请求失败的时候就执行catch里的\n      try {\n        //定义参数对象\n        let params = {\n          type: 'zc'\n        }\n        let res = await this.$api.matches.matches(params)\n\n        console.log('getMatches -> res', res)\n      } catch (e) {\n        console.log('catch -> e', e)\n      }\n    }\n  }\n```\n\n之后我们就可以在控制台看到我们调用成功的输出日志啦：\n\n\n\n### 小结\n\n在实际工作中，我们尽量要把项目做的细致一些，尤其是项目开始之前的配置，今天所涉及到的很多文件在之后的配置中还会有进步的更改，比如配置用户相关的接口、配置全局loading等，大家只要能把今天的内容完全理解，之后再配置这里就很容易啦。\n\n","source":"_posts/vue-cli3下的Axios封装.md","raw":"---\ntitle: vue-cli3下的Axios封装\ncategories:\n  - Vue\ntags:\n  - Vue\n  - Axios\n  - vue-cli3\nabbrlink: 9bbb323\ndate: 2019-03-23 23:25:07\n---\n## axios 简介\n\n首先要明白的是axios是什么：axios是基于promise（诺言）用于浏览器和node.js是http客户端。\n\naxios的作用是什么：axios主要是用于向后台发起请求的，还有在请求中做更多是可控功能。\n\n- 从浏览器中创建 XMLHttpRequest\n- 从 node.js 发出 http 请求\n- 支持 Promise API\n- 拦截请求和响应\n- 转换请求和响应数据\n- 取消请求\n- 自动转换JSON数据\n- 客户端支持防止 CSRF/XSRF\n\n### 项目配置\n\n##### 首先当然还是要安装啦：\n\n```shell\nnpm install axios\n```\n\n之后我们新建一个api文件夹用来放接口和axios的配置。\n先给大家看看我配置好之后的文件夹目录结构：\n\n![](http://pan.vmccc.cn/?/images/2019/03/23/YbxfrFGHXM/hexoVue.png)\n\n可以说这次配置是我划分的比较详细的配置方法了，具体每个文件都分别做什么用，我们现在来看看吧。\n\n##### axios.js\n\n这个文件主要创建axios实例并对拦截器进行配置，不理解拦截器的同学可以看看下图：\n\n```javascript\nimport axios from 'axios'\n\n// 创建 axios 实例\nlet service = axios.create({\n  // headers: {'Content-Type': 'application/json'},\n  timeout: 60000\n})\n\n// 设置 post、put 默认 Content-Type\nservice.defaults.headers.post['Content-Type'] = 'application/json'\nservice.defaults.headers.put['Content-Type'] = 'application/json'\n\n// 添加请求拦截器\nservice.interceptors.request.use(\n  (config) => {\n    if (config.method === 'post' || config.method === 'put') {\n      // post、put 提交时，将对象转换为string, 为处理Java后台解析问题\n      config.data = JSON.stringify(config.data)\n    }\n    // 请求发送前进行处理\n    return config\n  },\n  (error) => {\n    // 请求错误处理\n    return Promise.reject(error)\n  }\n)\n\n// 添加响应拦截器\nservice.interceptors.response.use(\n  (response) => {\n    let { data } = response\n    return data\n  },\n  (error) => {\n    let info = {},\n      { status, statusText, data } = error.response\n\n    if (!error.response) {\n      info = {\n        code: 5000,\n        msg: 'Network Error'\n      }\n    } else {\n      // 此处整理错误信息格式\n      info = {\n        code: status,\n        data: data,\n        msg: statusText\n      }\n    }\n  }\n)\n\n/**\n * 创建统一封装过的 axios 实例\n * @return {AxiosInstance}\n */\nexport default function() {\n  return service\n}\n```\n\n##### index.js\n\nindex.js文件主要封装我们几个常用的方法，get、post、put、delete\n\n```javascript\nimport axios from './axios'\n\nlet instance = axios()\n\nexport default {\n  get(url, params, headers) {\n    let options = {}\n\n    if (params) {\n      options.params = params\n    }\n    if (headers) {\n      options.headers = headers\n    }\n    return instance.get(url, options)\n  },\n  post(url, params, headers, data) {\n    let options = {}\n\n    if (params) {\n      options.params = params\n    }\n    if (headers) {\n      options.headers = headers\n    }\n    return instance.post(url, data, options)\n  },\n  put(url, params, headers) {\n    let options = {}\n\n    if (headers) {\n      options.headers = headers\n    }\n    return instance.put(url, params, options)\n  },\n  delete(url, params, headers) {\n    let options = {}\n\n    if (params) {\n      options.params = params\n    }\n    if (headers) {\n      options.headers = headers\n    }\n    return instance.delete(url, options)\n  }\n}\n```\n\n##### install.js\n\ninstall.js文件可以把我们所有的api接口安装到全局，之后我们在main.js文件中导入就可以了。\n\n```javascript\nimport apiList from './apiList'\n\nconst install = function(Vue) {\n  if (install.installed) {\n    return\n\n  install.installed = true\n  Object.defineProperties(Vue.prototype, {\n    $api: {\n      get() {\n        return apiList\n      }\n    }\n  })\n}\n\nexport default {\n  install\n}\n```\n\n**main.js中添加：**\n\n```javascript\nimport api from './api/install'\nVue.use(api)\n```\n\n##### apiList.js\n\n把我们所有的api文件夹导入到这一个文件中来。\n\n```javascript\nimport matches from './matches'\nimport user from './user'\n\nexport default {\n  matches,\n  user\n}\n```\n\n##### baseUrl.js\n\n根据不同的环境设定不同的baseUrl，在配置这个文件前，我们先需要做如下几件事：\n1.根目录新建`.env.dev`文件并在文件内写入`NODE_ENV = 'dev'`\n2.在`package.json`文件内添加：\n\n```javascript\n \"build:dev\": \"vue-cli-service build --mode dev\",\n \"build:pre\": \"vue-cli-service build --mode pre\",\n```\n\n以下是baseUrl.js的代码：\n\n```javascript\nlet baseUrl = '/api' // 本地代理\n\nswitch (process.env.NODE_ENV) {\n  case 'dev':\n    baseUrl = 'http://testserver.feleti.cn/' // 测试环境url\n    break\n  case 'pre':\n    baseUrl = 'https://pre-server.feleti.cn' // 预上线环境url\n    break\n  case 'production':\n    baseUrl = 'https://api.feleti.cn' // 生产环境url\n    break\n}\n\nexport default baseUrl\n```\n\n##### matches、user\n\n这两个文件夹都是根据api类型进行区分的，在项目以后也建议大家根据api类型划分出不同的文件存放，在小项目中这样做可能显得很麻烦，但如果项目比较大，这样做的优势就体现出来了。\n\n我们就只看看matches文件夹下的内容：\n\n###### urls.js\n\n把一个类型下的所有url接口放入这一个文件，我只放了一个暂时，可以继续添加。\n\n```javascript\nimport baseUrl from '../baseUrl'\nexport default {\n  matches: baseUrl + '/matches'\n}\n```\n\n###### index.js\n\n有些接口需要在header中添加token或是其他，可以按如下配置。\n\n```javascript\nimport api from '../index'\nimport urls from './urls'\n\nconst header = {}\n\nexport default {\n  matches(params) {\n    // return出去了一个promise\n    return api.get(urls.matches, params, header)\n  }\n}\n```\n\n配置完上述全部文件就算是大功告成了，下面我们看看如何使用吧。\n\n### 组件中调用\n\n```javascript\ncreated() {\n    this.matches()\n  },\n  methods: {\n    async matches() {\n      // 这里用try catch包裹，请求失败的时候就执行catch里的\n      try {\n        //定义参数对象\n        let params = {\n          type: 'zc'\n        }\n        let res = await this.$api.matches.matches(params)\n\n        console.log('getMatches -> res', res)\n      } catch (e) {\n        console.log('catch -> e', e)\n      }\n    }\n  }\n```\n\n之后我们就可以在控制台看到我们调用成功的输出日志啦：\n\n\n\n### 小结\n\n在实际工作中，我们尽量要把项目做的细致一些，尤其是项目开始之前的配置，今天所涉及到的很多文件在之后的配置中还会有进步的更改，比如配置用户相关的接口、配置全局loading等，大家只要能把今天的内容完全理解，之后再配置这里就很容易啦。\n\n","slug":"vue-cli3下的Axios封装","published":1,"updated":"2020-05-18T16:35:00.484Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl78qfop50020qic9qjyuq3p7","content":"<h2 id=\"axios-简介\"><a href=\"#axios-简介\" class=\"headerlink\" title=\"axios 简介\"></a>axios 简介</h2><p>首先要明白的是axios是什么：axios是基于promise（诺言）用于浏览器和node.js是http客户端。</p>\n<p>axios的作用是什么：axios主要是用于向后台发起请求的，还有在请求中做更多是可控功能。</p>\n<ul>\n<li>从浏览器中创建 XMLHttpRequest</li>\n<li>从 node.js 发出 http 请求</li>\n<li>支持 Promise API</li>\n<li>拦截请求和响应</li>\n<li>转换请求和响应数据</li>\n<li>取消请求</li>\n<li>自动转换JSON数据</li>\n<li>客户端支持防止 CSRF/XSRF</li>\n</ul>\n<h3 id=\"项目配置\"><a href=\"#项目配置\" class=\"headerlink\" title=\"项目配置\"></a>项目配置</h3><h5 id=\"首先当然还是要安装啦：\"><a href=\"#首先当然还是要安装啦：\" class=\"headerlink\" title=\"首先当然还是要安装啦：\"></a>首先当然还是要安装啦：</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install axios</span><br></pre></td></tr></table></figure>\n<p>之后我们新建一个api文件夹用来放接口和axios的配置。<br>先给大家看看我配置好之后的文件夹目录结构：</p>\n<p><img src=\"http://pan.vmccc.cn/?/images/2019/03/23/YbxfrFGHXM/hexoVue.png\" alt=\"\"></p>\n<p>可以说这次配置是我划分的比较详细的配置方法了，具体每个文件都分别做什么用，我们现在来看看吧。</p>\n<h5 id=\"axios-js\"><a href=\"#axios-js\" class=\"headerlink\" title=\"axios.js\"></a>axios.js</h5><p>这个文件主要创建axios实例并对拦截器进行配置，不理解拦截器的同学可以看看下图：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">'axios'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建 axios 实例</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> service = axios.create(&#123;</span><br><span class=\"line\">  <span class=\"comment\">// headers: &#123;'Content-Type': 'application/json'&#125;,</span></span><br><span class=\"line\">  timeout: <span class=\"number\">60000</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设置 post、put 默认 Content-Type</span></span><br><span class=\"line\">service.defaults.headers.post[<span class=\"string\">'Content-Type'</span>] = <span class=\"string\">'application/json'</span></span><br><span class=\"line\">service.defaults.headers.put[<span class=\"string\">'Content-Type'</span>] = <span class=\"string\">'application/json'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 添加请求拦截器</span></span><br><span class=\"line\">service.interceptors.request.use(</span><br><span class=\"line\">  (config) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (config.method === <span class=\"string\">'post'</span> || config.method === <span class=\"string\">'put'</span>) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// post、put 提交时，将对象转换为string, 为处理Java后台解析问题</span></span><br><span class=\"line\">      config.data = <span class=\"built_in\">JSON</span>.stringify(config.data)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 请求发送前进行处理</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> config</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  (error) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 请求错误处理</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.reject(error)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 添加响应拦截器</span></span><br><span class=\"line\">service.interceptors.response.use(</span><br><span class=\"line\">  (response) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> &#123; data &#125; = response</span><br><span class=\"line\">    <span class=\"keyword\">return</span> data</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  (error) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> info = &#123;&#125;,</span><br><span class=\"line\">      &#123; status, statusText, data &#125; = error.response</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!error.response) &#123;</span><br><span class=\"line\">      info = &#123;</span><br><span class=\"line\">        code: <span class=\"number\">5000</span>,</span><br><span class=\"line\">        msg: <span class=\"string\">'Network Error'</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 此处整理错误信息格式</span></span><br><span class=\"line\">      info = &#123;</span><br><span class=\"line\">        code: status,</span><br><span class=\"line\">        data: data,</span><br><span class=\"line\">        msg: statusText</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 创建统一封装过的 axios 实例</span></span><br><span class=\"line\"><span class=\"comment\"> * @return &#123;AxiosInstance&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> service</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"index-js\"><a href=\"#index-js\" class=\"headerlink\" title=\"index.js\"></a>index.js</h5><p>index.js文件主要封装我们几个常用的方法，get、post、put、delete</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">'./axios'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> instance = axios()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  get(url, params, headers) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> options = &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (params) &#123;</span><br><span class=\"line\">      options.params = params</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (headers) &#123;</span><br><span class=\"line\">      options.headers = headers</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> instance.get(url, options)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  post(url, params, headers, data) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> options = &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (params) &#123;</span><br><span class=\"line\">      options.params = params</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (headers) &#123;</span><br><span class=\"line\">      options.headers = headers</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> instance.post(url, data, options)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  put(url, params, headers) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> options = &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (headers) &#123;</span><br><span class=\"line\">      options.headers = headers</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> instance.put(url, params, options)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"keyword\">delete</span>(url, params, headers) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> options = &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (params) &#123;</span><br><span class=\"line\">      options.params = params</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (headers) &#123;</span><br><span class=\"line\">      options.headers = headers</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> instance.delete(url, options)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"install-js\"><a href=\"#install-js\" class=\"headerlink\" title=\"install.js\"></a>install.js</h5><p>install.js文件可以把我们所有的api接口安装到全局，之后我们在main.js文件中导入就可以了。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> apiList <span class=\"keyword\">from</span> <span class=\"string\">'./apiList'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> install = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">Vue</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (install.installed) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\"></span><br><span class=\"line\">  install.installed = <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"built_in\">Object</span>.defineProperties(Vue.prototype, &#123;</span><br><span class=\"line\">    $api: &#123;</span><br><span class=\"line\">      get() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> apiList</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  install</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>main.js中添加：</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> api <span class=\"keyword\">from</span> <span class=\"string\">'./api/install'</span></span><br><span class=\"line\">Vue.use(api)</span><br></pre></td></tr></table></figure>\n<h5 id=\"apiList-js\"><a href=\"#apiList-js\" class=\"headerlink\" title=\"apiList.js\"></a>apiList.js</h5><p>把我们所有的api文件夹导入到这一个文件中来。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matches <span class=\"keyword\">from</span> <span class=\"string\">'./matches'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> user <span class=\"keyword\">from</span> <span class=\"string\">'./user'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  matches,</span><br><span class=\"line\">  user</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"baseUrl-js\"><a href=\"#baseUrl-js\" class=\"headerlink\" title=\"baseUrl.js\"></a>baseUrl.js</h5><p>根据不同的环境设定不同的baseUrl，在配置这个文件前，我们先需要做如下几件事：<br>1.根目录新建<code>.env.dev</code>文件并在文件内写入<code>NODE_ENV = &#39;dev&#39;</code><br>2.在<code>package.json</code>文件内添加：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"build:dev\"</span>: <span class=\"string\">\"vue-cli-service build --mode dev\"</span>,</span><br><span class=\"line\"><span class=\"string\">\"build:pre\"</span>: <span class=\"string\">\"vue-cli-service build --mode pre\"</span>,</span><br></pre></td></tr></table></figure>\n<p>以下是baseUrl.js的代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> baseUrl = <span class=\"string\">'/api'</span> <span class=\"comment\">// 本地代理</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">switch</span> (process.env.NODE_ENV) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"string\">'dev'</span>:</span><br><span class=\"line\">    baseUrl = <span class=\"string\">'http://testserver.feleti.cn/'</span> <span class=\"comment\">// 测试环境url</span></span><br><span class=\"line\">    <span class=\"keyword\">break</span></span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"string\">'pre'</span>:</span><br><span class=\"line\">    baseUrl = <span class=\"string\">'https://pre-server.feleti.cn'</span> <span class=\"comment\">// 预上线环境url</span></span><br><span class=\"line\">    <span class=\"keyword\">break</span></span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"string\">'production'</span>:</span><br><span class=\"line\">    baseUrl = <span class=\"string\">'https://api.feleti.cn'</span> <span class=\"comment\">// 生产环境url</span></span><br><span class=\"line\">    <span class=\"keyword\">break</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> baseUrl</span><br></pre></td></tr></table></figure>\n<h5 id=\"matches、user\"><a href=\"#matches、user\" class=\"headerlink\" title=\"matches、user\"></a>matches、user</h5><p>这两个文件夹都是根据api类型进行区分的，在项目以后也建议大家根据api类型划分出不同的文件存放，在小项目中这样做可能显得很麻烦，但如果项目比较大，这样做的优势就体现出来了。</p>\n<p>我们就只看看matches文件夹下的内容：</p>\n<h6 id=\"urls-js\"><a href=\"#urls-js\" class=\"headerlink\" title=\"urls.js\"></a>urls.js</h6><p>把一个类型下的所有url接口放入这一个文件，我只放了一个暂时，可以继续添加。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> baseUrl <span class=\"keyword\">from</span> <span class=\"string\">'../baseUrl'</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  matches: baseUrl + <span class=\"string\">'/matches'</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h6 id=\"index-js-1\"><a href=\"#index-js-1\" class=\"headerlink\" title=\"index.js\"></a>index.js</h6><p>有些接口需要在header中添加token或是其他，可以按如下配置。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> api <span class=\"keyword\">from</span> <span class=\"string\">'../index'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urls <span class=\"keyword\">from</span> <span class=\"string\">'./urls'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> header = &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  matches(params) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// return出去了一个promise</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> api.get(urls.matches, params, header)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>配置完上述全部文件就算是大功告成了，下面我们看看如何使用吧。</p>\n<h3 id=\"组件中调用\"><a href=\"#组件中调用\" class=\"headerlink\" title=\"组件中调用\"></a>组件中调用</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">created() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.matches()</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    <span class=\"keyword\">async</span> matches() &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 这里用try catch包裹，请求失败的时候就执行catch里的</span></span><br><span class=\"line\">      <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//定义参数对象</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> params = &#123;</span><br><span class=\"line\">          type: <span class=\"string\">'zc'</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> res = <span class=\"keyword\">await</span> <span class=\"keyword\">this</span>.$api.matches.matches(params)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'getMatches -&gt; res'</span>, res)</span><br><span class=\"line\">      &#125; <span class=\"keyword\">catch</span> (e) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'catch -&gt; e'</span>, e)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<p>之后我们就可以在控制台看到我们调用成功的输出日志啦：</p>\n<h3 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h3><p>在实际工作中，我们尽量要把项目做的细致一些，尤其是项目开始之前的配置，今天所涉及到的很多文件在之后的配置中还会有进步的更改，比如配置用户相关的接口、配置全局loading等，大家只要能把今天的内容完全理解，之后再配置这里就很容易啦。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"axios-简介\"><a href=\"#axios-简介\" class=\"headerlink\" title=\"axios 简介\"></a>axios 简介</h2><p>首先要明白的是axios是什么：axios是基于promise（诺言）用于浏览器和node.js是http客户端。</p>\n<p>axios的作用是什么：axios主要是用于向后台发起请求的，还有在请求中做更多是可控功能。</p>\n<ul>\n<li>从浏览器中创建 XMLHttpRequest</li>\n<li>从 node.js 发出 http 请求</li>\n<li>支持 Promise API</li>\n<li>拦截请求和响应</li>\n<li>转换请求和响应数据</li>\n<li>取消请求</li>\n<li>自动转换JSON数据</li>\n<li>客户端支持防止 CSRF/XSRF</li>\n</ul>\n<h3 id=\"项目配置\"><a href=\"#项目配置\" class=\"headerlink\" title=\"项目配置\"></a>项目配置</h3><h5 id=\"首先当然还是要安装啦：\"><a href=\"#首先当然还是要安装啦：\" class=\"headerlink\" title=\"首先当然还是要安装啦：\"></a>首先当然还是要安装啦：</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install axios</span><br></pre></td></tr></table></figure>\n<p>之后我们新建一个api文件夹用来放接口和axios的配置。<br>先给大家看看我配置好之后的文件夹目录结构：</p>\n<p><img src=\"http://pan.vmccc.cn/?/images/2019/03/23/YbxfrFGHXM/hexoVue.png\" alt=\"\"></p>\n<p>可以说这次配置是我划分的比较详细的配置方法了，具体每个文件都分别做什么用，我们现在来看看吧。</p>\n<h5 id=\"axios-js\"><a href=\"#axios-js\" class=\"headerlink\" title=\"axios.js\"></a>axios.js</h5><p>这个文件主要创建axios实例并对拦截器进行配置，不理解拦截器的同学可以看看下图：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">'axios'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建 axios 实例</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> service = axios.create(&#123;</span><br><span class=\"line\">  <span class=\"comment\">// headers: &#123;'Content-Type': 'application/json'&#125;,</span></span><br><span class=\"line\">  timeout: <span class=\"number\">60000</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设置 post、put 默认 Content-Type</span></span><br><span class=\"line\">service.defaults.headers.post[<span class=\"string\">'Content-Type'</span>] = <span class=\"string\">'application/json'</span></span><br><span class=\"line\">service.defaults.headers.put[<span class=\"string\">'Content-Type'</span>] = <span class=\"string\">'application/json'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 添加请求拦截器</span></span><br><span class=\"line\">service.interceptors.request.use(</span><br><span class=\"line\">  (config) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (config.method === <span class=\"string\">'post'</span> || config.method === <span class=\"string\">'put'</span>) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// post、put 提交时，将对象转换为string, 为处理Java后台解析问题</span></span><br><span class=\"line\">      config.data = <span class=\"built_in\">JSON</span>.stringify(config.data)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 请求发送前进行处理</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> config</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  (error) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 请求错误处理</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.reject(error)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 添加响应拦截器</span></span><br><span class=\"line\">service.interceptors.response.use(</span><br><span class=\"line\">  (response) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> &#123; data &#125; = response</span><br><span class=\"line\">    <span class=\"keyword\">return</span> data</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  (error) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> info = &#123;&#125;,</span><br><span class=\"line\">      &#123; status, statusText, data &#125; = error.response</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!error.response) &#123;</span><br><span class=\"line\">      info = &#123;</span><br><span class=\"line\">        code: <span class=\"number\">5000</span>,</span><br><span class=\"line\">        msg: <span class=\"string\">'Network Error'</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 此处整理错误信息格式</span></span><br><span class=\"line\">      info = &#123;</span><br><span class=\"line\">        code: status,</span><br><span class=\"line\">        data: data,</span><br><span class=\"line\">        msg: statusText</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 创建统一封装过的 axios 实例</span></span><br><span class=\"line\"><span class=\"comment\"> * @return &#123;AxiosInstance&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> service</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"index-js\"><a href=\"#index-js\" class=\"headerlink\" title=\"index.js\"></a>index.js</h5><p>index.js文件主要封装我们几个常用的方法，get、post、put、delete</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">'./axios'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> instance = axios()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  get(url, params, headers) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> options = &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (params) &#123;</span><br><span class=\"line\">      options.params = params</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (headers) &#123;</span><br><span class=\"line\">      options.headers = headers</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> instance.get(url, options)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  post(url, params, headers, data) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> options = &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (params) &#123;</span><br><span class=\"line\">      options.params = params</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (headers) &#123;</span><br><span class=\"line\">      options.headers = headers</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> instance.post(url, data, options)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  put(url, params, headers) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> options = &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (headers) &#123;</span><br><span class=\"line\">      options.headers = headers</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> instance.put(url, params, options)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"keyword\">delete</span>(url, params, headers) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> options = &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (params) &#123;</span><br><span class=\"line\">      options.params = params</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (headers) &#123;</span><br><span class=\"line\">      options.headers = headers</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> instance.delete(url, options)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"install-js\"><a href=\"#install-js\" class=\"headerlink\" title=\"install.js\"></a>install.js</h5><p>install.js文件可以把我们所有的api接口安装到全局，之后我们在main.js文件中导入就可以了。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> apiList <span class=\"keyword\">from</span> <span class=\"string\">'./apiList'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> install = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">Vue</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (install.installed) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\"></span><br><span class=\"line\">  install.installed = <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"built_in\">Object</span>.defineProperties(Vue.prototype, &#123;</span><br><span class=\"line\">    $api: &#123;</span><br><span class=\"line\">      get() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> apiList</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  install</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>main.js中添加：</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> api <span class=\"keyword\">from</span> <span class=\"string\">'./api/install'</span></span><br><span class=\"line\">Vue.use(api)</span><br></pre></td></tr></table></figure>\n<h5 id=\"apiList-js\"><a href=\"#apiList-js\" class=\"headerlink\" title=\"apiList.js\"></a>apiList.js</h5><p>把我们所有的api文件夹导入到这一个文件中来。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matches <span class=\"keyword\">from</span> <span class=\"string\">'./matches'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> user <span class=\"keyword\">from</span> <span class=\"string\">'./user'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  matches,</span><br><span class=\"line\">  user</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"baseUrl-js\"><a href=\"#baseUrl-js\" class=\"headerlink\" title=\"baseUrl.js\"></a>baseUrl.js</h5><p>根据不同的环境设定不同的baseUrl，在配置这个文件前，我们先需要做如下几件事：<br>1.根目录新建<code>.env.dev</code>文件并在文件内写入<code>NODE_ENV = &#39;dev&#39;</code><br>2.在<code>package.json</code>文件内添加：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"build:dev\"</span>: <span class=\"string\">\"vue-cli-service build --mode dev\"</span>,</span><br><span class=\"line\"><span class=\"string\">\"build:pre\"</span>: <span class=\"string\">\"vue-cli-service build --mode pre\"</span>,</span><br></pre></td></tr></table></figure>\n<p>以下是baseUrl.js的代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> baseUrl = <span class=\"string\">'/api'</span> <span class=\"comment\">// 本地代理</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">switch</span> (process.env.NODE_ENV) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"string\">'dev'</span>:</span><br><span class=\"line\">    baseUrl = <span class=\"string\">'http://testserver.feleti.cn/'</span> <span class=\"comment\">// 测试环境url</span></span><br><span class=\"line\">    <span class=\"keyword\">break</span></span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"string\">'pre'</span>:</span><br><span class=\"line\">    baseUrl = <span class=\"string\">'https://pre-server.feleti.cn'</span> <span class=\"comment\">// 预上线环境url</span></span><br><span class=\"line\">    <span class=\"keyword\">break</span></span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"string\">'production'</span>:</span><br><span class=\"line\">    baseUrl = <span class=\"string\">'https://api.feleti.cn'</span> <span class=\"comment\">// 生产环境url</span></span><br><span class=\"line\">    <span class=\"keyword\">break</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> baseUrl</span><br></pre></td></tr></table></figure>\n<h5 id=\"matches、user\"><a href=\"#matches、user\" class=\"headerlink\" title=\"matches、user\"></a>matches、user</h5><p>这两个文件夹都是根据api类型进行区分的，在项目以后也建议大家根据api类型划分出不同的文件存放，在小项目中这样做可能显得很麻烦，但如果项目比较大，这样做的优势就体现出来了。</p>\n<p>我们就只看看matches文件夹下的内容：</p>\n<h6 id=\"urls-js\"><a href=\"#urls-js\" class=\"headerlink\" title=\"urls.js\"></a>urls.js</h6><p>把一个类型下的所有url接口放入这一个文件，我只放了一个暂时，可以继续添加。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> baseUrl <span class=\"keyword\">from</span> <span class=\"string\">'../baseUrl'</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  matches: baseUrl + <span class=\"string\">'/matches'</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h6 id=\"index-js-1\"><a href=\"#index-js-1\" class=\"headerlink\" title=\"index.js\"></a>index.js</h6><p>有些接口需要在header中添加token或是其他，可以按如下配置。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> api <span class=\"keyword\">from</span> <span class=\"string\">'../index'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urls <span class=\"keyword\">from</span> <span class=\"string\">'./urls'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> header = &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  matches(params) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// return出去了一个promise</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> api.get(urls.matches, params, header)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>配置完上述全部文件就算是大功告成了，下面我们看看如何使用吧。</p>\n<h3 id=\"组件中调用\"><a href=\"#组件中调用\" class=\"headerlink\" title=\"组件中调用\"></a>组件中调用</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">created() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.matches()</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    <span class=\"keyword\">async</span> matches() &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 这里用try catch包裹，请求失败的时候就执行catch里的</span></span><br><span class=\"line\">      <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//定义参数对象</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> params = &#123;</span><br><span class=\"line\">          type: <span class=\"string\">'zc'</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> res = <span class=\"keyword\">await</span> <span class=\"keyword\">this</span>.$api.matches.matches(params)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'getMatches -&gt; res'</span>, res)</span><br><span class=\"line\">      &#125; <span class=\"keyword\">catch</span> (e) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'catch -&gt; e'</span>, e)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<p>之后我们就可以在控制台看到我们调用成功的输出日志啦：</p>\n<h3 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h3><p>在实际工作中，我们尽量要把项目做的细致一些，尤其是项目开始之前的配置，今天所涉及到的很多文件在之后的配置中还会有进步的更改，比如配置用户相关的接口、配置全局loading等，大家只要能把今天的内容完全理解，之后再配置这里就很容易啦。</p>\n"},{"title":"webstorm永久激活","comments":1,"abbrlink":"21b2441f","date":"2018-10-08T13:20:52.000Z","_content":"\n## 第一步\n\n> 进入 C:\\Windows\\System32\\drivers\\etc\\hosts 文件, 在最后一行添加下面代码 (推荐用 Notepad 编辑)\n\n```shell\n0.0.0.0 account.jetbrains.com\n```\n\n![](http://pan.vmccc.cn/images/2018/10/08/Nfo2DLYaPm/webstrom-jihuo.jpg)\n\n## 第二步\n\n> 打开 webstorm将如下代码粘贴到 activation code 内\n\n```shell\nEB101IWSWD-eyJsaWNlbnNlSWQiOiJFQjEwMUlXU1dEIiwibGljZW5zZWVOYW1lIjoibGFuIHl1IiwiYXNzaWduZWVOYW1lIjoiIiwiYXNzaWduZWVFbWFpbCI6IiIsImxpY2Vuc2VSZXN0cmljdGlvbiI6IkZvciBlZHVjYXRpb25hbCB1c2Ugb25seSIsImNoZWNrQ29uY3VycmVudFVzZSI6ZmFsc2UsInByb2R1Y3RzIjpbeyJjb2RlIjoiSUkiLCJwYWlkVXBUbyI6IjIwMTgtMTAtMTQifSx7ImNvZGUiOiJSUzAiLCJwYWlkVXBUbyI6IjIwMTgtMTAtMTQifSx7ImNvZGUiOiJXUyIsInBhaWRVcFRvIjoiMjAxOC0xMC0xNCJ9LHsiY29kZSI6IlJEIiwicGFpZFVwVG8iOiIyMDE4LTEwLTE0In0seyJjb2RlIjoiUkMiLCJwYWlkVXBUbyI6IjIwMTgtMTAtMTQifSx7ImNvZGUiOiJEQyIsInBhaWRVcFRvIjoiMjAxOC0xMC0xNCJ9LHsiY29kZSI6IkRCIiwicGFpZFVwVG8iOiIyMDE4LTEwLTE0In0seyJjb2RlIjoiUk0iLCJwYWlkVXBUbyI6IjIwMTgtMTAtMTQifSx7ImNvZGUiOiJETSIsInBhaWRVcFRvIjoiMjAxOC0xMC0xNCJ9LHsiY29kZSI6IkFDIiwicGFpZFVwVG8iOiIyMDE4LTEwLTE0In0seyJjb2RlIjoiRFBOIiwicGFpZFVwVG8iOiIyMDE4LTEwLTE0In0seyJjb2RlIjoiUFMiLCJwYWlkVXBUbyI6IjIwMTgtMTAtMTQifSx7ImNvZGUiOiJDTCIsInBhaWRVcFRvIjoiMjAxOC0xMC0xNCJ9LHsiY29kZSI6IlBDIiwicGFpZFVwVG8iOiIyMDE4LTEwLTE0In0seyJjb2RlIjoiUlNVIiwicGFpZFVwVG8iOiIyMDE4LTEwLTE0In1dLCJoYXNoIjoiNjk0NDAzMi8wIiwiZ3JhY2VQZXJpb2REYXlzIjowLCJhdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlLCJpc0F1dG9Qcm9sb25nYXRlZCI6ZmFsc2V9-Gbb7jeR8JWOVxdUFaXfJzVU/O7c7xHQyaidCnhYLp7v32zdeXiHUU7vlrrm5y9ZX0lmQk3plCCsW+phrC9gGAPd6WDKhkal10qVNg0larCR2tQ3u8jfv1t2JAvWrMOJfFG9kKsJuw1P4TozZ/E7Qvj1cupf/rldhoOmaXMyABxNN1af1RV3bVhe4FFZe0p7xlIJF/ctZkFK62HYmh8V3AyhUNTzrvK2k+t/tlDJz2LnW7nYttBLHld8LabPlEEjpTHswhzlthzhVqALIgvF0uNbIJ5Uwpb7NqR4U/2ob0Z+FIcRpFUIAHEAw+RLGwkCge5DyZKfx+RoRJ/In4q/UpA==-MIIEPjCCAiagAwIBAgIBBTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTE1MTEwMjA4MjE0OFoXDTE4MTEwMTA4MjE0OFowETEPMA0GA1UEAwwGcHJvZDN5MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxcQkq+zdxlR2mmRYBPzGbUNdMN6OaXiXzxIWtMEkrJMO/5oUfQJbLLuMSMK0QHFmaI37WShyxZcfRCidwXjot4zmNBKnlyHodDij/78TmVqFl8nOeD5+07B8VEaIu7c3E1N+e1doC6wht4I4+IEmtsPAdoaj5WCQVQbrI8KeT8M9VcBIWX7fD0fhexfg3ZRt0xqwMcXGNp3DdJHiO0rCdU+Itv7EmtnSVq9jBG1usMSFvMowR25mju2JcPFp1+I4ZI+FqgR8gyG8oiNDyNEoAbsR3lOpI7grUYSvkB/xVy/VoklPCK2h0f0GJxFjnye8NT1PAywoyl7RmiAVRE/EKwIDAQABo4GZMIGWMAkGA1UdEwQCMAAwHQYDVR0OBBYEFGEpG9oZGcfLMGNBkY7SgHiMGgTcMEgGA1UdIwRBMD+AFKOetkhnQhI2Qb1t4Lm0oFKLl/GzoRykGjAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBggkA0myxg7KDeeEwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMA0GCSqGSIb3DQEBCwUAA4ICAQC9WZuYgQedSuOc5TOUSrRigMw4/+wuC5EtZBfvdl4HT/8vzMW/oUlIP4YCvA0XKyBaCJ2iX+ZCDKoPfiYXiaSiH+HxAPV6J79vvouxKrWg2XV6ShFtPLP+0gPdGq3x9R3+kJbmAm8w+FOdlWqAfJrLvpzMGNeDU14YGXiZ9bVzmIQbwrBA+c/F4tlK/DV07dsNExihqFoibnqDiVNTGombaU2dDup2gwKdL81ua8EIcGNExHe82kjF4zwfadHk3bQVvbfdAwxcDy4xBjs3L4raPLU3yenSzr/OEur1+jfOxnQSmEcMXKXgrAQ9U55gwjcOFKrgOxEdek/Sk1VfOjvS+nuM4eyEruFMfaZHzoQiuw4IqgGc45ohFH0UUyjYcuFxxDSU9lMCv8qdHKm+wnPRb0l9l5vXsCBDuhAGYD6ss+Ga+aDY6f/qXZuUCEUOH3QUNbbCUlviSz6+GiRnt1kA9N2Qachl+2yBfaqUqr8h7Z2gsx5LcIf5kYNsqJ0GavXTVyWh7PYiKX4bs354ZQLUwwa/cG++2+wNWP+HtBhVxMRNTdVhSm38AknZlD+PTAsWGu9GyLmhti2EnVwGybSD2Dxmhxk3IPCkhKAK+pl0eWYGZWG3tJ9mZ7SowcXLWDFAk0lRJnKGFMTggrWjV8GYpw5bq23VmIqqDLgkNzuoog==\n```\n\n![](http://pan.vmccc.cn/images/2018/10/08/wjjS0RrJzs/webstrom-jihuo1.jpg)","source":"_posts/webstorm永久激活.md","raw":"---\ntitle: webstorm永久激活\ncomments: true\ncategories:\n  - Webstorm\ntags:\n  - Webstrom\nabbrlink: 21b2441f\ndate: 2018-10-08 21:20:52\n---\n\n## 第一步\n\n> 进入 C:\\Windows\\System32\\drivers\\etc\\hosts 文件, 在最后一行添加下面代码 (推荐用 Notepad 编辑)\n\n```shell\n0.0.0.0 account.jetbrains.com\n```\n\n![](http://pan.vmccc.cn/images/2018/10/08/Nfo2DLYaPm/webstrom-jihuo.jpg)\n\n## 第二步\n\n> 打开 webstorm将如下代码粘贴到 activation code 内\n\n```shell\nEB101IWSWD-eyJsaWNlbnNlSWQiOiJFQjEwMUlXU1dEIiwibGljZW5zZWVOYW1lIjoibGFuIHl1IiwiYXNzaWduZWVOYW1lIjoiIiwiYXNzaWduZWVFbWFpbCI6IiIsImxpY2Vuc2VSZXN0cmljdGlvbiI6IkZvciBlZHVjYXRpb25hbCB1c2Ugb25seSIsImNoZWNrQ29uY3VycmVudFVzZSI6ZmFsc2UsInByb2R1Y3RzIjpbeyJjb2RlIjoiSUkiLCJwYWlkVXBUbyI6IjIwMTgtMTAtMTQifSx7ImNvZGUiOiJSUzAiLCJwYWlkVXBUbyI6IjIwMTgtMTAtMTQifSx7ImNvZGUiOiJXUyIsInBhaWRVcFRvIjoiMjAxOC0xMC0xNCJ9LHsiY29kZSI6IlJEIiwicGFpZFVwVG8iOiIyMDE4LTEwLTE0In0seyJjb2RlIjoiUkMiLCJwYWlkVXBUbyI6IjIwMTgtMTAtMTQifSx7ImNvZGUiOiJEQyIsInBhaWRVcFRvIjoiMjAxOC0xMC0xNCJ9LHsiY29kZSI6IkRCIiwicGFpZFVwVG8iOiIyMDE4LTEwLTE0In0seyJjb2RlIjoiUk0iLCJwYWlkVXBUbyI6IjIwMTgtMTAtMTQifSx7ImNvZGUiOiJETSIsInBhaWRVcFRvIjoiMjAxOC0xMC0xNCJ9LHsiY29kZSI6IkFDIiwicGFpZFVwVG8iOiIyMDE4LTEwLTE0In0seyJjb2RlIjoiRFBOIiwicGFpZFVwVG8iOiIyMDE4LTEwLTE0In0seyJjb2RlIjoiUFMiLCJwYWlkVXBUbyI6IjIwMTgtMTAtMTQifSx7ImNvZGUiOiJDTCIsInBhaWRVcFRvIjoiMjAxOC0xMC0xNCJ9LHsiY29kZSI6IlBDIiwicGFpZFVwVG8iOiIyMDE4LTEwLTE0In0seyJjb2RlIjoiUlNVIiwicGFpZFVwVG8iOiIyMDE4LTEwLTE0In1dLCJoYXNoIjoiNjk0NDAzMi8wIiwiZ3JhY2VQZXJpb2REYXlzIjowLCJhdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlLCJpc0F1dG9Qcm9sb25nYXRlZCI6ZmFsc2V9-Gbb7jeR8JWOVxdUFaXfJzVU/O7c7xHQyaidCnhYLp7v32zdeXiHUU7vlrrm5y9ZX0lmQk3plCCsW+phrC9gGAPd6WDKhkal10qVNg0larCR2tQ3u8jfv1t2JAvWrMOJfFG9kKsJuw1P4TozZ/E7Qvj1cupf/rldhoOmaXMyABxNN1af1RV3bVhe4FFZe0p7xlIJF/ctZkFK62HYmh8V3AyhUNTzrvK2k+t/tlDJz2LnW7nYttBLHld8LabPlEEjpTHswhzlthzhVqALIgvF0uNbIJ5Uwpb7NqR4U/2ob0Z+FIcRpFUIAHEAw+RLGwkCge5DyZKfx+RoRJ/In4q/UpA==-MIIEPjCCAiagAwIBAgIBBTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTE1MTEwMjA4MjE0OFoXDTE4MTEwMTA4MjE0OFowETEPMA0GA1UEAwwGcHJvZDN5MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxcQkq+zdxlR2mmRYBPzGbUNdMN6OaXiXzxIWtMEkrJMO/5oUfQJbLLuMSMK0QHFmaI37WShyxZcfRCidwXjot4zmNBKnlyHodDij/78TmVqFl8nOeD5+07B8VEaIu7c3E1N+e1doC6wht4I4+IEmtsPAdoaj5WCQVQbrI8KeT8M9VcBIWX7fD0fhexfg3ZRt0xqwMcXGNp3DdJHiO0rCdU+Itv7EmtnSVq9jBG1usMSFvMowR25mju2JcPFp1+I4ZI+FqgR8gyG8oiNDyNEoAbsR3lOpI7grUYSvkB/xVy/VoklPCK2h0f0GJxFjnye8NT1PAywoyl7RmiAVRE/EKwIDAQABo4GZMIGWMAkGA1UdEwQCMAAwHQYDVR0OBBYEFGEpG9oZGcfLMGNBkY7SgHiMGgTcMEgGA1UdIwRBMD+AFKOetkhnQhI2Qb1t4Lm0oFKLl/GzoRykGjAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBggkA0myxg7KDeeEwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMA0GCSqGSIb3DQEBCwUAA4ICAQC9WZuYgQedSuOc5TOUSrRigMw4/+wuC5EtZBfvdl4HT/8vzMW/oUlIP4YCvA0XKyBaCJ2iX+ZCDKoPfiYXiaSiH+HxAPV6J79vvouxKrWg2XV6ShFtPLP+0gPdGq3x9R3+kJbmAm8w+FOdlWqAfJrLvpzMGNeDU14YGXiZ9bVzmIQbwrBA+c/F4tlK/DV07dsNExihqFoibnqDiVNTGombaU2dDup2gwKdL81ua8EIcGNExHe82kjF4zwfadHk3bQVvbfdAwxcDy4xBjs3L4raPLU3yenSzr/OEur1+jfOxnQSmEcMXKXgrAQ9U55gwjcOFKrgOxEdek/Sk1VfOjvS+nuM4eyEruFMfaZHzoQiuw4IqgGc45ohFH0UUyjYcuFxxDSU9lMCv8qdHKm+wnPRb0l9l5vXsCBDuhAGYD6ss+Ga+aDY6f/qXZuUCEUOH3QUNbbCUlviSz6+GiRnt1kA9N2Qachl+2yBfaqUqr8h7Z2gsx5LcIf5kYNsqJ0GavXTVyWh7PYiKX4bs354ZQLUwwa/cG++2+wNWP+HtBhVxMRNTdVhSm38AknZlD+PTAsWGu9GyLmhti2EnVwGybSD2Dxmhxk3IPCkhKAK+pl0eWYGZWG3tJ9mZ7SowcXLWDFAk0lRJnKGFMTggrWjV8GYpw5bq23VmIqqDLgkNzuoog==\n```\n\n![](http://pan.vmccc.cn/images/2018/10/08/wjjS0RrJzs/webstrom-jihuo1.jpg)","slug":"webstorm永久激活","published":1,"updated":"2020-05-18T16:35:00.484Z","layout":"post","photos":[],"link":"","_id":"cl78qfop60023qic9i81ja7eu","content":"<h2 id=\"第一步\"><a href=\"#第一步\" class=\"headerlink\" title=\"第一步\"></a>第一步</h2><blockquote>\n<p>进入 C:\\Windows\\System32\\drivers\\etc\\hosts 文件, 在最后一行添加下面代码 (推荐用 Notepad 编辑)</p>\n</blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0.0.0.0 account.jetbrains.com</span><br></pre></td></tr></table></figure>\n<p><img src=\"http://pan.vmccc.cn/images/2018/10/08/Nfo2DLYaPm/webstrom-jihuo.jpg\" alt=\"\"></p>\n<h2 id=\"第二步\"><a href=\"#第二步\" class=\"headerlink\" title=\"第二步\"></a>第二步</h2><blockquote>\n<p>打开 webstorm将如下代码粘贴到 activation code 内</p>\n</blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">EB101IWSWD-eyJsaWNlbnNlSWQiOiJFQjEwMUlXU1dEIiwibGljZW5zZWVOYW1lIjoibGFuIHl1IiwiYXNzaWduZWVOYW1lIjoiIiwiYXNzaWduZWVFbWFpbCI6IiIsImxpY2Vuc2VSZXN0cmljdGlvbiI6IkZvciBlZHVjYXRpb25hbCB1c2Ugb25seSIsImNoZWNrQ29uY3VycmVudFVzZSI6ZmFsc2UsInByb2R1Y3RzIjpbeyJjb2RlIjoiSUkiLCJwYWlkVXBUbyI6IjIwMTgtMTAtMTQifSx7ImNvZGUiOiJSUzAiLCJwYWlkVXBUbyI6IjIwMTgtMTAtMTQifSx7ImNvZGUiOiJXUyIsInBhaWRVcFRvIjoiMjAxOC0xMC0xNCJ9LHsiY29kZSI6IlJEIiwicGFpZFVwVG8iOiIyMDE4LTEwLTE0In0seyJjb2RlIjoiUkMiLCJwYWlkVXBUbyI6IjIwMTgtMTAtMTQifSx7ImNvZGUiOiJEQyIsInBhaWRVcFRvIjoiMjAxOC0xMC0xNCJ9LHsiY29kZSI6IkRCIiwicGFpZFVwVG8iOiIyMDE4LTEwLTE0In0seyJjb2RlIjoiUk0iLCJwYWlkVXBUbyI6IjIwMTgtMTAtMTQifSx7ImNvZGUiOiJETSIsInBhaWRVcFRvIjoiMjAxOC0xMC0xNCJ9LHsiY29kZSI6IkFDIiwicGFpZFVwVG8iOiIyMDE4LTEwLTE0In0seyJjb2RlIjoiRFBOIiwicGFpZFVwVG8iOiIyMDE4LTEwLTE0In0seyJjb2RlIjoiUFMiLCJwYWlkVXBUbyI6IjIwMTgtMTAtMTQifSx7ImNvZGUiOiJDTCIsInBhaWRVcFRvIjoiMjAxOC0xMC0xNCJ9LHsiY29kZSI6IlBDIiwicGFpZFVwVG8iOiIyMDE4LTEwLTE0In0seyJjb2RlIjoiUlNVIiwicGFpZFVwVG8iOiIyMDE4LTEwLTE0In1dLCJoYXNoIjoiNjk0NDAzMi8wIiwiZ3JhY2VQZXJpb2REYXlzIjowLCJhdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlLCJpc0F1dG9Qcm9sb25nYXRlZCI6ZmFsc2V9-Gbb7jeR8JWOVxdUFaXfJzVU/O7c7xHQyaidCnhYLp7v32zdeXiHUU7vlrrm5y9ZX0lmQk3plCCsW+phrC9gGAPd6WDKhkal10qVNg0larCR2tQ3u8jfv1t2JAvWrMOJfFG9kKsJuw1P4TozZ/E7Qvj1cupf/rldhoOmaXMyABxNN1af1RV3bVhe4FFZe0p7xlIJF/ctZkFK62HYmh8V3AyhUNTzrvK2k+t/tlDJz2LnW7nYttBLHld8LabPlEEjpTHswhzlthzhVqALIgvF0uNbIJ5Uwpb7NqR4U/2ob0Z+FIcRpFUIAHEAw+RLGwkCge5DyZKfx+RoRJ/In4q/UpA==-MIIEPjCCAiagAwIBAgIBBTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTE1MTEwMjA4MjE0OFoXDTE4MTEwMTA4MjE0OFowETEPMA0GA1UEAwwGcHJvZDN5MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxcQkq+zdxlR2mmRYBPzGbUNdMN6OaXiXzxIWtMEkrJMO/5oUfQJbLLuMSMK0QHFmaI37WShyxZcfRCidwXjot4zmNBKnlyHodDij/78TmVqFl8nOeD5+07B8VEaIu7c3E1N+e1doC6wht4I4+IEmtsPAdoaj5WCQVQbrI8KeT8M9VcBIWX7fD0fhexfg3ZRt0xqwMcXGNp3DdJHiO0rCdU+Itv7EmtnSVq9jBG1usMSFvMowR25mju2JcPFp1+I4ZI+FqgR8gyG8oiNDyNEoAbsR3lOpI7grUYSvkB/xVy/VoklPCK2h0f0GJxFjnye8NT1PAywoyl7RmiAVRE/EKwIDAQABo4GZMIGWMAkGA1UdEwQCMAAwHQYDVR0OBBYEFGEpG9oZGcfLMGNBkY7SgHiMGgTcMEgGA1UdIwRBMD+AFKOetkhnQhI2Qb1t4Lm0oFKLl/GzoRykGjAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBggkA0myxg7KDeeEwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMA0GCSqGSIb3DQEBCwUAA4ICAQC9WZuYgQedSuOc5TOUSrRigMw4/+wuC5EtZBfvdl4HT/8vzMW/oUlIP4YCvA0XKyBaCJ2iX+ZCDKoPfiYXiaSiH+HxAPV6J79vvouxKrWg2XV6ShFtPLP+0gPdGq3x9R3+kJbmAm8w+FOdlWqAfJrLvpzMGNeDU14YGXiZ9bVzmIQbwrBA+c/F4tlK/DV07dsNExihqFoibnqDiVNTGombaU2dDup2gwKdL81ua8EIcGNExHe82kjF4zwfadHk3bQVvbfdAwxcDy4xBjs3L4raPLU3yenSzr/OEur1+jfOxnQSmEcMXKXgrAQ9U55gwjcOFKrgOxEdek/Sk1VfOjvS+nuM4eyEruFMfaZHzoQiuw4IqgGc45ohFH0UUyjYcuFxxDSU9lMCv8qdHKm+wnPRb0l9l5vXsCBDuhAGYD6ss+Ga+aDY6f/qXZuUCEUOH3QUNbbCUlviSz6+GiRnt1kA9N2Qachl+2yBfaqUqr8h7Z2gsx5LcIf5kYNsqJ0GavXTVyWh7PYiKX4bs354ZQLUwwa/cG++2+wNWP+HtBhVxMRNTdVhSm38AknZlD+PTAsWGu9GyLmhti2EnVwGybSD2Dxmhxk3IPCkhKAK+pl0eWYGZWG3tJ9mZ7SowcXLWDFAk0lRJnKGFMTggrWjV8GYpw5bq23VmIqqDLgkNzuoog==</span><br></pre></td></tr></table></figure>\n<p><img src=\"http://pan.vmccc.cn/images/2018/10/08/wjjS0RrJzs/webstrom-jihuo1.jpg\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"第一步\"><a href=\"#第一步\" class=\"headerlink\" title=\"第一步\"></a>第一步</h2><blockquote>\n<p>进入 C:\\Windows\\System32\\drivers\\etc\\hosts 文件, 在最后一行添加下面代码 (推荐用 Notepad 编辑)</p>\n</blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0.0.0.0 account.jetbrains.com</span><br></pre></td></tr></table></figure>\n<p><img src=\"http://pan.vmccc.cn/images/2018/10/08/Nfo2DLYaPm/webstrom-jihuo.jpg\" alt=\"\"></p>\n<h2 id=\"第二步\"><a href=\"#第二步\" class=\"headerlink\" title=\"第二步\"></a>第二步</h2><blockquote>\n<p>打开 webstorm将如下代码粘贴到 activation code 内</p>\n</blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">EB101IWSWD-eyJsaWNlbnNlSWQiOiJFQjEwMUlXU1dEIiwibGljZW5zZWVOYW1lIjoibGFuIHl1IiwiYXNzaWduZWVOYW1lIjoiIiwiYXNzaWduZWVFbWFpbCI6IiIsImxpY2Vuc2VSZXN0cmljdGlvbiI6IkZvciBlZHVjYXRpb25hbCB1c2Ugb25seSIsImNoZWNrQ29uY3VycmVudFVzZSI6ZmFsc2UsInByb2R1Y3RzIjpbeyJjb2RlIjoiSUkiLCJwYWlkVXBUbyI6IjIwMTgtMTAtMTQifSx7ImNvZGUiOiJSUzAiLCJwYWlkVXBUbyI6IjIwMTgtMTAtMTQifSx7ImNvZGUiOiJXUyIsInBhaWRVcFRvIjoiMjAxOC0xMC0xNCJ9LHsiY29kZSI6IlJEIiwicGFpZFVwVG8iOiIyMDE4LTEwLTE0In0seyJjb2RlIjoiUkMiLCJwYWlkVXBUbyI6IjIwMTgtMTAtMTQifSx7ImNvZGUiOiJEQyIsInBhaWRVcFRvIjoiMjAxOC0xMC0xNCJ9LHsiY29kZSI6IkRCIiwicGFpZFVwVG8iOiIyMDE4LTEwLTE0In0seyJjb2RlIjoiUk0iLCJwYWlkVXBUbyI6IjIwMTgtMTAtMTQifSx7ImNvZGUiOiJETSIsInBhaWRVcFRvIjoiMjAxOC0xMC0xNCJ9LHsiY29kZSI6IkFDIiwicGFpZFVwVG8iOiIyMDE4LTEwLTE0In0seyJjb2RlIjoiRFBOIiwicGFpZFVwVG8iOiIyMDE4LTEwLTE0In0seyJjb2RlIjoiUFMiLCJwYWlkVXBUbyI6IjIwMTgtMTAtMTQifSx7ImNvZGUiOiJDTCIsInBhaWRVcFRvIjoiMjAxOC0xMC0xNCJ9LHsiY29kZSI6IlBDIiwicGFpZFVwVG8iOiIyMDE4LTEwLTE0In0seyJjb2RlIjoiUlNVIiwicGFpZFVwVG8iOiIyMDE4LTEwLTE0In1dLCJoYXNoIjoiNjk0NDAzMi8wIiwiZ3JhY2VQZXJpb2REYXlzIjowLCJhdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlLCJpc0F1dG9Qcm9sb25nYXRlZCI6ZmFsc2V9-Gbb7jeR8JWOVxdUFaXfJzVU/O7c7xHQyaidCnhYLp7v32zdeXiHUU7vlrrm5y9ZX0lmQk3plCCsW+phrC9gGAPd6WDKhkal10qVNg0larCR2tQ3u8jfv1t2JAvWrMOJfFG9kKsJuw1P4TozZ/E7Qvj1cupf/rldhoOmaXMyABxNN1af1RV3bVhe4FFZe0p7xlIJF/ctZkFK62HYmh8V3AyhUNTzrvK2k+t/tlDJz2LnW7nYttBLHld8LabPlEEjpTHswhzlthzhVqALIgvF0uNbIJ5Uwpb7NqR4U/2ob0Z+FIcRpFUIAHEAw+RLGwkCge5DyZKfx+RoRJ/In4q/UpA==-MIIEPjCCAiagAwIBAgIBBTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTE1MTEwMjA4MjE0OFoXDTE4MTEwMTA4MjE0OFowETEPMA0GA1UEAwwGcHJvZDN5MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxcQkq+zdxlR2mmRYBPzGbUNdMN6OaXiXzxIWtMEkrJMO/5oUfQJbLLuMSMK0QHFmaI37WShyxZcfRCidwXjot4zmNBKnlyHodDij/78TmVqFl8nOeD5+07B8VEaIu7c3E1N+e1doC6wht4I4+IEmtsPAdoaj5WCQVQbrI8KeT8M9VcBIWX7fD0fhexfg3ZRt0xqwMcXGNp3DdJHiO0rCdU+Itv7EmtnSVq9jBG1usMSFvMowR25mju2JcPFp1+I4ZI+FqgR8gyG8oiNDyNEoAbsR3lOpI7grUYSvkB/xVy/VoklPCK2h0f0GJxFjnye8NT1PAywoyl7RmiAVRE/EKwIDAQABo4GZMIGWMAkGA1UdEwQCMAAwHQYDVR0OBBYEFGEpG9oZGcfLMGNBkY7SgHiMGgTcMEgGA1UdIwRBMD+AFKOetkhnQhI2Qb1t4Lm0oFKLl/GzoRykGjAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBggkA0myxg7KDeeEwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMA0GCSqGSIb3DQEBCwUAA4ICAQC9WZuYgQedSuOc5TOUSrRigMw4/+wuC5EtZBfvdl4HT/8vzMW/oUlIP4YCvA0XKyBaCJ2iX+ZCDKoPfiYXiaSiH+HxAPV6J79vvouxKrWg2XV6ShFtPLP+0gPdGq3x9R3+kJbmAm8w+FOdlWqAfJrLvpzMGNeDU14YGXiZ9bVzmIQbwrBA+c/F4tlK/DV07dsNExihqFoibnqDiVNTGombaU2dDup2gwKdL81ua8EIcGNExHe82kjF4zwfadHk3bQVvbfdAwxcDy4xBjs3L4raPLU3yenSzr/OEur1+jfOxnQSmEcMXKXgrAQ9U55gwjcOFKrgOxEdek/Sk1VfOjvS+nuM4eyEruFMfaZHzoQiuw4IqgGc45ohFH0UUyjYcuFxxDSU9lMCv8qdHKm+wnPRb0l9l5vXsCBDuhAGYD6ss+Ga+aDY6f/qXZuUCEUOH3QUNbbCUlviSz6+GiRnt1kA9N2Qachl+2yBfaqUqr8h7Z2gsx5LcIf5kYNsqJ0GavXTVyWh7PYiKX4bs354ZQLUwwa/cG++2+wNWP+HtBhVxMRNTdVhSm38AknZlD+PTAsWGu9GyLmhti2EnVwGybSD2Dxmhxk3IPCkhKAK+pl0eWYGZWG3tJ9mZ7SowcXLWDFAk0lRJnKGFMTggrWjV8GYpw5bq23VmIqqDLgkNzuoog==</span><br></pre></td></tr></table></figure>\n<p><img src=\"http://pan.vmccc.cn/images/2018/10/08/wjjS0RrJzs/webstrom-jihuo1.jpg\" alt=\"\"></p>\n"},{"title":"为啥 await 不能用在 forEach 中","comments":1,"abbrlink":"adp7e5ef","date":"2020-03-06T11:02:06.000Z","_content":"\n> 在学习node的时候需要在`forEach`里使用`await` 导致输出顺序有问题，在forEach里只能使用同步方法；\n\n- [为啥 await 不能用在 forEach 中](https://juejin.im/post/5cb68a40e51d456e303db873)\n\n\n- [async,await与forEach引发的血案](https://juejin.im/post/5cb5a669e51d456e845b41f6)\n","source":"_posts/为啥 await 不能用在 forEach 中.md","raw":"---\ntitle: 为啥 await 不能用在 forEach 中\ncomments: true\ncategories:\n  - Vue\ntags:\n  - Vue\nabbrlink: adp7e5ef\ndate: 2020-03-06 19:02:06\n---\n\n> 在学习node的时候需要在`forEach`里使用`await` 导致输出顺序有问题，在forEach里只能使用同步方法；\n\n- [为啥 await 不能用在 forEach 中](https://juejin.im/post/5cb68a40e51d456e303db873)\n\n\n- [async,await与forEach引发的血案](https://juejin.im/post/5cb5a669e51d456e845b41f6)\n","slug":"为啥 await 不能用在 forEach 中","published":1,"updated":"2020-05-18T16:35:00.484Z","layout":"post","photos":[],"link":"","_id":"cl78qfop70027qic9eury17k8","content":"<blockquote>\n<p>在学习node的时候需要在<code>forEach</code>里使用<code>await</code> 导致输出顺序有问题，在forEach里只能使用同步方法；</p>\n</blockquote>\n<ul>\n<li><a href=\"https://juejin.im/post/5cb68a40e51d456e303db873\" target=\"_blank\" rel=\"noopener\">为啥 await 不能用在 forEach 中</a></li>\n</ul>\n<ul>\n<li><a href=\"https://juejin.im/post/5cb5a669e51d456e845b41f6\" target=\"_blank\" rel=\"noopener\">async,await与forEach引发的血案</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>在学习node的时候需要在<code>forEach</code>里使用<code>await</code> 导致输出顺序有问题，在forEach里只能使用同步方法；</p>\n</blockquote>\n<ul>\n<li><a href=\"https://juejin.im/post/5cb68a40e51d456e303db873\" target=\"_blank\" rel=\"noopener\">为啥 await 不能用在 forEach 中</a></li>\n</ul>\n<ul>\n<li><a href=\"https://juejin.im/post/5cb5a669e51d456e845b41f6\" target=\"_blank\" rel=\"noopener\">async,await与forEach引发的血案</a></li>\n</ul>\n"},{"title":"关于Node计算出现浮点数","comments":1,"abbrlink":"adu7e5ef","date":"2020-02-16T11:02:06.000Z","_content":"\n在金额展示的时候出这个问题\n\n原因：\n```\n1.09*100 = 109.00000000000001\n```\n\n解决办法\n```javascript\nhandleToFixed(origin, n = 0) {\n  const scale = Math.pow(10, n);\n  const r = origin * scale * 10;\n  return Number((Math.round(Math.round(r) / 10) / scale).toFixed(n));\n}\n```","source":"_posts/关于Node计算出现浮点数.md","raw":"---\ntitle: 关于Node计算出现浮点数\ncomments: true\ncategories:\n  - Node\ntags:\n  - Node\nabbrlink: adu7e5ef\ndate: 2020-02-16 19:02:06\n---\n\n在金额展示的时候出这个问题\n\n原因：\n```\n1.09*100 = 109.00000000000001\n```\n\n解决办法\n```javascript\nhandleToFixed(origin, n = 0) {\n  const scale = Math.pow(10, n);\n  const r = origin * scale * 10;\n  return Number((Math.round(Math.round(r) / 10) / scale).toFixed(n));\n}\n```","slug":"关于Node计算出现浮点数","published":1,"updated":"2020-05-18T16:35:00.485Z","layout":"post","photos":[],"link":"","_id":"cl78qfop8002aqic95qe383ko","content":"<p>在金额展示的时候出这个问题</p>\n<p>原因：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.09*100 = 109.00000000000001</span><br></pre></td></tr></table></figure></p>\n<p>解决办法<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">handleToFixed(origin, n = <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> scale = <span class=\"built_in\">Math</span>.pow(<span class=\"number\">10</span>, n);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> r = origin * scale * <span class=\"number\">10</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">Number</span>((<span class=\"built_in\">Math</span>.round(<span class=\"built_in\">Math</span>.round(r) / <span class=\"number\">10</span>) / scale).toFixed(n));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>在金额展示的时候出这个问题</p>\n<p>原因：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.09*100 = 109.00000000000001</span><br></pre></td></tr></table></figure></p>\n<p>解决办法<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">handleToFixed(origin, n = <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> scale = <span class=\"built_in\">Math</span>.pow(<span class=\"number\">10</span>, n);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> r = origin * scale * <span class=\"number\">10</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">Number</span>((<span class=\"built_in\">Math</span>.round(<span class=\"built_in\">Math</span>.round(r) / <span class=\"number\">10</span>) / scale).toFixed(n));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n"},{"title":"后端数据优化","comments":1,"abbrlink":"ado7e5ef","date":"2020-02-21T11:02:06.000Z","_content":"\n![](http://img.cdn.vmccc.cn/%E6%95%B0%E6%8D%AE%281%29.png)","source":"_posts/后端数据优化.md","raw":"---\ntitle: 后端数据优化\ncomments: true\ncategories:\n  - Node\ntags:\n  - Node\n  - 数据优化\nabbrlink: ado7e5ef\ndate: 2020-02-21 19:02:06\n---\n\n![](http://img.cdn.vmccc.cn/%E6%95%B0%E6%8D%AE%281%29.png)","slug":"后端数据优化","published":1,"updated":"2020-05-18T16:35:00.485Z","layout":"post","photos":[],"link":"","_id":"cl78qfop9002fqic95p995z80","content":"<p><img src=\"http://img.cdn.vmccc.cn/%E6%95%B0%E6%8D%AE%281%29.png\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"http://img.cdn.vmccc.cn/%E6%95%B0%E6%8D%AE%281%29.png\" alt=\"\"></p>\n"},{"title":"关于PC端缩小浏览器窗口，右边背景空白并出现滚动条","comments":1,"abbrlink":"488e492e","date":"2018-11-15T14:23:30.000Z","_content":"\n出现原因\n\n因为出现空白的元素设置了宽度100%，缩小窗口相当于减小了宽度值，那么为什么出现滚动条呢？是因为页面中至少有一个元素a的width大于窗口的width，导致把页面撑开，出现了滚动条，而此时那个width：100%的元素宽度等于窗口宽度且小于元素a的宽度，所以右侧的空白长度=a的宽度-窗口宽度。  \n\n\n\n### 解决这个问题其实很简单\n\n- 给body设置最小宽度`min-width`,在ie6下不兼容\n\n  ```css\n  body{\n       min-width: 1000px;\n       overflow-x: hidden;\n  }\n  ```\n\n- 还可以给div元素设置最小宽度，如果页面元素复杂，要一个个设置\n\n- 给CSS样式设置`width:expression(document.body.clientWidth <= 960? \"960px\": \"auto\");`\n\n  ```css\n  #wrap {\n      width:100%;\n      background:#ddd;\n      width:expression(document.body.clientWidth <= 960? \"960px\": \"auto\");\n      min-width:960px;\n  }\n  ```\n\n  推荐第一种","source":"_posts/关于PC端缩小浏览器窗口，右边背景空白并出现滚动条.md","raw":"---\ntitle: 关于PC端缩小浏览器窗口，右边背景空白并出现滚动条\ncomments: true\ncategories:\n  - CSS\ntags:\n  - CSS\nabbrlink: 488e492e\ndate: 2018-11-15 22:23:30\n---\n\n出现原因\n\n因为出现空白的元素设置了宽度100%，缩小窗口相当于减小了宽度值，那么为什么出现滚动条呢？是因为页面中至少有一个元素a的width大于窗口的width，导致把页面撑开，出现了滚动条，而此时那个width：100%的元素宽度等于窗口宽度且小于元素a的宽度，所以右侧的空白长度=a的宽度-窗口宽度。  \n\n\n\n### 解决这个问题其实很简单\n\n- 给body设置最小宽度`min-width`,在ie6下不兼容\n\n  ```css\n  body{\n       min-width: 1000px;\n       overflow-x: hidden;\n  }\n  ```\n\n- 还可以给div元素设置最小宽度，如果页面元素复杂，要一个个设置\n\n- 给CSS样式设置`width:expression(document.body.clientWidth <= 960? \"960px\": \"auto\");`\n\n  ```css\n  #wrap {\n      width:100%;\n      background:#ddd;\n      width:expression(document.body.clientWidth <= 960? \"960px\": \"auto\");\n      min-width:960px;\n  }\n  ```\n\n  推荐第一种","slug":"关于PC端缩小浏览器窗口，右边背景空白并出现滚动条","published":1,"updated":"2020-05-18T16:35:00.485Z","layout":"post","photos":[],"link":"","_id":"cl78qfopa002hqic9l0ptarft","content":"<p>出现原因</p>\n<p>因为出现空白的元素设置了宽度100%，缩小窗口相当于减小了宽度值，那么为什么出现滚动条呢？是因为页面中至少有一个元素a的width大于窗口的width，导致把页面撑开，出现了滚动条，而此时那个width：100%的元素宽度等于窗口宽度且小于元素a的宽度，所以右侧的空白长度=a的宽度-窗口宽度。  </p>\n<h3 id=\"解决这个问题其实很简单\"><a href=\"#解决这个问题其实很简单\" class=\"headerlink\" title=\"解决这个问题其实很简单\"></a>解决这个问题其实很简单</h3><ul>\n<li><p>给body设置最小宽度<code>min-width</code>,在ie6下不兼容</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span>&#123;</span><br><span class=\"line\">     <span class=\"attribute\">min-width</span>: <span class=\"number\">1000px</span>;</span><br><span class=\"line\">     <span class=\"attribute\">overflow-x</span>: hidden;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>还可以给div元素设置最小宽度，如果页面元素复杂，要一个个设置</p>\n</li>\n<li><p>给CSS样式设置<code>width:expression(document.body.clientWidth &lt;= 960? &quot;960px&quot;: &quot;auto&quot;);</code></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#wrap</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>:<span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>:<span class=\"number\">#ddd</span>;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>:<span class=\"built_in\">expression</span>(document.body.clientWidth &lt;= 960? <span class=\"string\">\"960px\"</span>: <span class=\"string\">\"auto\"</span>);</span><br><span class=\"line\">    <span class=\"attribute\">min-width</span>:<span class=\"number\">960px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>推荐第一种</p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>出现原因</p>\n<p>因为出现空白的元素设置了宽度100%，缩小窗口相当于减小了宽度值，那么为什么出现滚动条呢？是因为页面中至少有一个元素a的width大于窗口的width，导致把页面撑开，出现了滚动条，而此时那个width：100%的元素宽度等于窗口宽度且小于元素a的宽度，所以右侧的空白长度=a的宽度-窗口宽度。  </p>\n<h3 id=\"解决这个问题其实很简单\"><a href=\"#解决这个问题其实很简单\" class=\"headerlink\" title=\"解决这个问题其实很简单\"></a>解决这个问题其实很简单</h3><ul>\n<li><p>给body设置最小宽度<code>min-width</code>,在ie6下不兼容</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span>&#123;</span><br><span class=\"line\">     <span class=\"attribute\">min-width</span>: <span class=\"number\">1000px</span>;</span><br><span class=\"line\">     <span class=\"attribute\">overflow-x</span>: hidden;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>还可以给div元素设置最小宽度，如果页面元素复杂，要一个个设置</p>\n</li>\n<li><p>给CSS样式设置<code>width:expression(document.body.clientWidth &lt;= 960? &quot;960px&quot;: &quot;auto&quot;);</code></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#wrap</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>:<span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>:<span class=\"number\">#ddd</span>;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>:<span class=\"built_in\">expression</span>(document.body.clientWidth &lt;= 960? <span class=\"string\">\"960px\"</span>: <span class=\"string\">\"auto\"</span>);</span><br><span class=\"line\">    <span class=\"attribute\">min-width</span>:<span class=\"number\">960px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>推荐第一种</p>\n</li>\n</ul>\n"},{"title":"多行文本溢出隐藏","comments":1,"abbrlink":"d177a72b","date":"2019-03-19T15:05:26.000Z","_content":"\n`text-overflow:ellipsis` 显示省略符号来代表被修剪的文本。还有其他两个属性\n`clip` 修剪文本\n`string` 使用给定的字符串来代表被修剪的文本\n\n### 实现单行隐藏\n\n```\ndiv {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n```\n\n适用于WebKit浏览器或移动端的页面\n`display: -webkit-box` 必须结合的属性 ，将对象作为弹性伸缩盒子模型显示\n`-webkit-box-orient`必须结合的属性 ，设置或检索伸缩盒对象的子元素的排列方式\n`text-overflow: ellipsis` 可以用来多行文本的情况下，用省略号“…”隐藏超出范围的文本\n\n### 多行文本\n需要设置元素的高度，也一样适用于WebKit内核浏览器\n\n```\ndiv {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: -webkit-box;\n    -webkit-line-clamp: 2;\n    -webkit-box-orient: vertical;\n}\n```\n\n### 设置相对定位的容器高度，用包含省略号(…)的元素模拟实现\n\n```\ndiv {\n    width: 200px;\n    position: relative;\n    line-height: 1.4em;\n    height: 2.8em;\n    overflow: hidden;\n    }\n    div::after {\n        content: \"...\";\n        font-weight: bold;\n        position: absolute;\n        bottom: 0;\n        right: 0;\n        padding: 0 20px 1px 45px;\n        background: url(http://css88.b0.upaiyun.com/css88/2014/09/ellipsis_bg.png) repeat-y;\n    }\n```\n\n需要注意：\nheight高度真好是line-height的倍数；\n\n结束的省略好用了半透明的png做了减淡的效果，或者设置背景颜色；\n\nIE6-7不显示content内容，所以要兼容IE6-7可以是在内容中加入一个标签，比如用`<span class=\"line-clamp\">...</span>`去模拟；\n\n要支持IE8，需要将::after替换成:after；\n\n### jQuery插件-jQuery.dotdotdot 实现","source":"_posts/多行文本溢出隐藏.md","raw":"---\ntitle: 多行文本溢出隐藏\ncomments: true\ncategories:\n  - CSS\ntags:\n  - CSS\nabbrlink: d177a72b\ndate: 2019-03-19 23:05:26\n---\n\n`text-overflow:ellipsis` 显示省略符号来代表被修剪的文本。还有其他两个属性\n`clip` 修剪文本\n`string` 使用给定的字符串来代表被修剪的文本\n\n### 实现单行隐藏\n\n```\ndiv {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n```\n\n适用于WebKit浏览器或移动端的页面\n`display: -webkit-box` 必须结合的属性 ，将对象作为弹性伸缩盒子模型显示\n`-webkit-box-orient`必须结合的属性 ，设置或检索伸缩盒对象的子元素的排列方式\n`text-overflow: ellipsis` 可以用来多行文本的情况下，用省略号“…”隐藏超出范围的文本\n\n### 多行文本\n需要设置元素的高度，也一样适用于WebKit内核浏览器\n\n```\ndiv {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: -webkit-box;\n    -webkit-line-clamp: 2;\n    -webkit-box-orient: vertical;\n}\n```\n\n### 设置相对定位的容器高度，用包含省略号(…)的元素模拟实现\n\n```\ndiv {\n    width: 200px;\n    position: relative;\n    line-height: 1.4em;\n    height: 2.8em;\n    overflow: hidden;\n    }\n    div::after {\n        content: \"...\";\n        font-weight: bold;\n        position: absolute;\n        bottom: 0;\n        right: 0;\n        padding: 0 20px 1px 45px;\n        background: url(http://css88.b0.upaiyun.com/css88/2014/09/ellipsis_bg.png) repeat-y;\n    }\n```\n\n需要注意：\nheight高度真好是line-height的倍数；\n\n结束的省略好用了半透明的png做了减淡的效果，或者设置背景颜色；\n\nIE6-7不显示content内容，所以要兼容IE6-7可以是在内容中加入一个标签，比如用`<span class=\"line-clamp\">...</span>`去模拟；\n\n要支持IE8，需要将::after替换成:after；\n\n### jQuery插件-jQuery.dotdotdot 实现","slug":"多行文本溢出隐藏","published":1,"updated":"2020-05-18T16:35:00.486Z","layout":"post","photos":[],"link":"","_id":"cl78qfopb002kqic9wjik4ohg","content":"<p><code>text-overflow:ellipsis</code> 显示省略符号来代表被修剪的文本。还有其他两个属性<br><code>clip</code> 修剪文本<br><code>string</code> 使用给定的字符串来代表被修剪的文本</p>\n<h3 id=\"实现单行隐藏\"><a href=\"#实现单行隐藏\" class=\"headerlink\" title=\"实现单行隐藏\"></a>实现单行隐藏</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">div &#123;</span><br><span class=\"line\">    overflow: hidden;</span><br><span class=\"line\">    text-overflow: ellipsis;</span><br><span class=\"line\">    white-space: nowrap;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>适用于WebKit浏览器或移动端的页面<br><code>display: -webkit-box</code> 必须结合的属性 ，将对象作为弹性伸缩盒子模型显示<br><code>-webkit-box-orient</code>必须结合的属性 ，设置或检索伸缩盒对象的子元素的排列方式<br><code>text-overflow: ellipsis</code> 可以用来多行文本的情况下，用省略号“…”隐藏超出范围的文本</p>\n<h3 id=\"多行文本\"><a href=\"#多行文本\" class=\"headerlink\" title=\"多行文本\"></a>多行文本</h3><p>需要设置元素的高度，也一样适用于WebKit内核浏览器</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">div &#123;</span><br><span class=\"line\">    overflow: hidden;</span><br><span class=\"line\">    text-overflow: ellipsis;</span><br><span class=\"line\">    display: -webkit-box;</span><br><span class=\"line\">    -webkit-line-clamp: 2;</span><br><span class=\"line\">    -webkit-box-orient: vertical;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"设置相对定位的容器高度，用包含省略号-…-的元素模拟实现\"><a href=\"#设置相对定位的容器高度，用包含省略号-…-的元素模拟实现\" class=\"headerlink\" title=\"设置相对定位的容器高度，用包含省略号(…)的元素模拟实现\"></a>设置相对定位的容器高度，用包含省略号(…)的元素模拟实现</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">div &#123;</span><br><span class=\"line\">    width: 200px;</span><br><span class=\"line\">    position: relative;</span><br><span class=\"line\">    line-height: 1.4em;</span><br><span class=\"line\">    height: 2.8em;</span><br><span class=\"line\">    overflow: hidden;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    div::after &#123;</span><br><span class=\"line\">        content: &quot;...&quot;;</span><br><span class=\"line\">        font-weight: bold;</span><br><span class=\"line\">        position: absolute;</span><br><span class=\"line\">        bottom: 0;</span><br><span class=\"line\">        right: 0;</span><br><span class=\"line\">        padding: 0 20px 1px 45px;</span><br><span class=\"line\">        background: url(http://css88.b0.upaiyun.com/css88/2014/09/ellipsis_bg.png) repeat-y;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>需要注意：<br>height高度真好是line-height的倍数；</p>\n<p>结束的省略好用了半透明的png做了减淡的效果，或者设置背景颜色；</p>\n<p>IE6-7不显示content内容，所以要兼容IE6-7可以是在内容中加入一个标签，比如用<code>&lt;span class=&quot;line-clamp&quot;&gt;...&lt;/span&gt;</code>去模拟；</p>\n<p>要支持IE8，需要将::after替换成:after；</p>\n<h3 id=\"jQuery插件-jQuery-dotdotdot-实现\"><a href=\"#jQuery插件-jQuery-dotdotdot-实现\" class=\"headerlink\" title=\"jQuery插件-jQuery.dotdotdot 实现\"></a>jQuery插件-jQuery.dotdotdot 实现</h3>","site":{"data":{}},"excerpt":"","more":"<p><code>text-overflow:ellipsis</code> 显示省略符号来代表被修剪的文本。还有其他两个属性<br><code>clip</code> 修剪文本<br><code>string</code> 使用给定的字符串来代表被修剪的文本</p>\n<h3 id=\"实现单行隐藏\"><a href=\"#实现单行隐藏\" class=\"headerlink\" title=\"实现单行隐藏\"></a>实现单行隐藏</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">div &#123;</span><br><span class=\"line\">    overflow: hidden;</span><br><span class=\"line\">    text-overflow: ellipsis;</span><br><span class=\"line\">    white-space: nowrap;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>适用于WebKit浏览器或移动端的页面<br><code>display: -webkit-box</code> 必须结合的属性 ，将对象作为弹性伸缩盒子模型显示<br><code>-webkit-box-orient</code>必须结合的属性 ，设置或检索伸缩盒对象的子元素的排列方式<br><code>text-overflow: ellipsis</code> 可以用来多行文本的情况下，用省略号“…”隐藏超出范围的文本</p>\n<h3 id=\"多行文本\"><a href=\"#多行文本\" class=\"headerlink\" title=\"多行文本\"></a>多行文本</h3><p>需要设置元素的高度，也一样适用于WebKit内核浏览器</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">div &#123;</span><br><span class=\"line\">    overflow: hidden;</span><br><span class=\"line\">    text-overflow: ellipsis;</span><br><span class=\"line\">    display: -webkit-box;</span><br><span class=\"line\">    -webkit-line-clamp: 2;</span><br><span class=\"line\">    -webkit-box-orient: vertical;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"设置相对定位的容器高度，用包含省略号-…-的元素模拟实现\"><a href=\"#设置相对定位的容器高度，用包含省略号-…-的元素模拟实现\" class=\"headerlink\" title=\"设置相对定位的容器高度，用包含省略号(…)的元素模拟实现\"></a>设置相对定位的容器高度，用包含省略号(…)的元素模拟实现</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">div &#123;</span><br><span class=\"line\">    width: 200px;</span><br><span class=\"line\">    position: relative;</span><br><span class=\"line\">    line-height: 1.4em;</span><br><span class=\"line\">    height: 2.8em;</span><br><span class=\"line\">    overflow: hidden;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    div::after &#123;</span><br><span class=\"line\">        content: &quot;...&quot;;</span><br><span class=\"line\">        font-weight: bold;</span><br><span class=\"line\">        position: absolute;</span><br><span class=\"line\">        bottom: 0;</span><br><span class=\"line\">        right: 0;</span><br><span class=\"line\">        padding: 0 20px 1px 45px;</span><br><span class=\"line\">        background: url(http://css88.b0.upaiyun.com/css88/2014/09/ellipsis_bg.png) repeat-y;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>需要注意：<br>height高度真好是line-height的倍数；</p>\n<p>结束的省略好用了半透明的png做了减淡的效果，或者设置背景颜色；</p>\n<p>IE6-7不显示content内容，所以要兼容IE6-7可以是在内容中加入一个标签，比如用<code>&lt;span class=&quot;line-clamp&quot;&gt;...&lt;/span&gt;</code>去模拟；</p>\n<p>要支持IE8，需要将::after替换成:after；</p>\n<h3 id=\"jQuery插件-jQuery-dotdotdot-实现\"><a href=\"#jQuery插件-jQuery-dotdotdot-实现\" class=\"headerlink\" title=\"jQuery插件-jQuery.dotdotdot 实现\"></a>jQuery插件-jQuery.dotdotdot 实现</h3>"},{"title":"在Chrome中模拟微信浏览器","comments":1,"abbrlink":"c37c62e0","date":"2019-03-18T15:23:43.000Z","_content":"\nChrome 修改 user agent 简单模拟微信内置浏览器\n\n## 微信和QQ内置浏览器UA\n\n- 安卓QQ内置浏览器UA:\n\n```\nMozilla/5.0 (Linux; Android 5.0; SM-N9100 Build/LRX21V) > AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 > Chrome/37.0.0.0 Mobile Safari/537.36 V1_AND_SQ_5.3.1_196_YYB_D > QQ/5.3.1.2335 NetType/WIFI\n```\n\n- 安卓微信内置浏览器UA:\n\n```\nMozilla/5.0 (Linux; Android 5.0; SM-N9100 Build/LRX21V) > AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 > Chrome/37.0.0.0 Mobile Safari/537.36 > MicroMessenger/6.0.2.56_r958800.520 NetType/WIFI\n```\n\n- IOSQQ内置浏览器UA:\n```\nMozilla/5.0 (iPhone; CPU iPhone OS 7_1_2 like Mac OS X) > AppleWebKit/537.51.2 (KHTML, like Gecko) Mobile/11D257 > QQ/5.2.1.302 NetType/WIFI Mem/28\n```\n\n- IOS微信内置浏览器UA:\n```\nMozilla/5.0 (iPhone; CPU iPhone OS 7_1_2 like Mac OS X) > AppleWebKit/537.51.2 (KHTML, like Gecko) Mobile/11D257 > MicroMessenger/6.0.1 NetType/WIFI\n```\n\n### 在Chrome添加UA\n\n- 打开Chrome调试工具（F12），点击右上角竖着的三个点，如下图\n\n  ![](http://ww3.sinaimg.cn/large/6aedb651gw1fazm90jatmj20bc09ggof.jpg)\n\n- 打开后选择Setting，如下图\n\n  ![](http://ww1.sinaimg.cn/large/6aedb651gw1fazma2xwtqj206n06ewew.jpg)\n\n- 选择左边栏Devices，如下图\n\n  ![](http://ww2.sinaimg.cn/large/6aedb651gw1fazmcukbx4j20b30a4752.jpg)\n  \n- 选择右边栏Add custom device\n\n  ![](http://ww2.sinaimg.cn/large/6aedb651gw1fazmcukbx4j20b30a4752.jpg)\n  \n- 填写要模拟的设备，添加，如下图\n\n  ![](http://ww4.sinaimg.cn/large/6aedb651gw1fazmhu5yg4j20br06v74o.jpg)","source":"_posts/在Chrome中模拟微信浏览器.md","raw":"---\ntitle: 在Chrome中模拟微信浏览器\ncomments: true\ncategories:\n  - 微信\n  - 调试工具\ntags:\n  - 微信\n  - 调试\nabbrlink: c37c62e0\ndate: 2019-03-18 23:23:43\n---\n\nChrome 修改 user agent 简单模拟微信内置浏览器\n\n## 微信和QQ内置浏览器UA\n\n- 安卓QQ内置浏览器UA:\n\n```\nMozilla/5.0 (Linux; Android 5.0; SM-N9100 Build/LRX21V) > AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 > Chrome/37.0.0.0 Mobile Safari/537.36 V1_AND_SQ_5.3.1_196_YYB_D > QQ/5.3.1.2335 NetType/WIFI\n```\n\n- 安卓微信内置浏览器UA:\n\n```\nMozilla/5.0 (Linux; Android 5.0; SM-N9100 Build/LRX21V) > AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 > Chrome/37.0.0.0 Mobile Safari/537.36 > MicroMessenger/6.0.2.56_r958800.520 NetType/WIFI\n```\n\n- IOSQQ内置浏览器UA:\n```\nMozilla/5.0 (iPhone; CPU iPhone OS 7_1_2 like Mac OS X) > AppleWebKit/537.51.2 (KHTML, like Gecko) Mobile/11D257 > QQ/5.2.1.302 NetType/WIFI Mem/28\n```\n\n- IOS微信内置浏览器UA:\n```\nMozilla/5.0 (iPhone; CPU iPhone OS 7_1_2 like Mac OS X) > AppleWebKit/537.51.2 (KHTML, like Gecko) Mobile/11D257 > MicroMessenger/6.0.1 NetType/WIFI\n```\n\n### 在Chrome添加UA\n\n- 打开Chrome调试工具（F12），点击右上角竖着的三个点，如下图\n\n  ![](http://ww3.sinaimg.cn/large/6aedb651gw1fazm90jatmj20bc09ggof.jpg)\n\n- 打开后选择Setting，如下图\n\n  ![](http://ww1.sinaimg.cn/large/6aedb651gw1fazma2xwtqj206n06ewew.jpg)\n\n- 选择左边栏Devices，如下图\n\n  ![](http://ww2.sinaimg.cn/large/6aedb651gw1fazmcukbx4j20b30a4752.jpg)\n  \n- 选择右边栏Add custom device\n\n  ![](http://ww2.sinaimg.cn/large/6aedb651gw1fazmcukbx4j20b30a4752.jpg)\n  \n- 填写要模拟的设备，添加，如下图\n\n  ![](http://ww4.sinaimg.cn/large/6aedb651gw1fazmhu5yg4j20br06v74o.jpg)","slug":"在Chrome中模拟微信浏览器","published":1,"updated":"2020-05-18T16:35:00.485Z","layout":"post","photos":[],"link":"","_id":"cl78qfopd002oqic99dqbyq54","content":"<p>Chrome 修改 user agent 简单模拟微信内置浏览器</p>\n<h2 id=\"微信和QQ内置浏览器UA\"><a href=\"#微信和QQ内置浏览器UA\" class=\"headerlink\" title=\"微信和QQ内置浏览器UA\"></a>微信和QQ内置浏览器UA</h2><ul>\n<li>安卓QQ内置浏览器UA:</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mozilla/5.0 (Linux; Android 5.0; SM-N9100 Build/LRX21V) &gt; AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 &gt; Chrome/37.0.0.0 Mobile Safari/537.36 V1_AND_SQ_5.3.1_196_YYB_D &gt; QQ/5.3.1.2335 NetType/WIFI</span><br></pre></td></tr></table></figure>\n<ul>\n<li>安卓微信内置浏览器UA:</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mozilla/5.0 (Linux; Android 5.0; SM-N9100 Build/LRX21V) &gt; AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 &gt; Chrome/37.0.0.0 Mobile Safari/537.36 &gt; MicroMessenger/6.0.2.56_r958800.520 NetType/WIFI</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>IOSQQ内置浏览器UA:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mozilla/5.0 (iPhone; CPU iPhone OS 7_1_2 like Mac OS X) &gt; AppleWebKit/537.51.2 (KHTML, like Gecko) Mobile/11D257 &gt; QQ/5.2.1.302 NetType/WIFI Mem/28</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>IOS微信内置浏览器UA:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mozilla/5.0 (iPhone; CPU iPhone OS 7_1_2 like Mac OS X) &gt; AppleWebKit/537.51.2 (KHTML, like Gecko) Mobile/11D257 &gt; MicroMessenger/6.0.1 NetType/WIFI</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"在Chrome添加UA\"><a href=\"#在Chrome添加UA\" class=\"headerlink\" title=\"在Chrome添加UA\"></a>在Chrome添加UA</h3><ul>\n<li><p>打开Chrome调试工具（F12），点击右上角竖着的三个点，如下图</p>\n<p><img src=\"http://ww3.sinaimg.cn/large/6aedb651gw1fazm90jatmj20bc09ggof.jpg\" alt=\"\"></p>\n</li>\n<li><p>打开后选择Setting，如下图</p>\n<p><img src=\"http://ww1.sinaimg.cn/large/6aedb651gw1fazma2xwtqj206n06ewew.jpg\" alt=\"\"></p>\n</li>\n<li><p>选择左边栏Devices，如下图</p>\n<p><img src=\"http://ww2.sinaimg.cn/large/6aedb651gw1fazmcukbx4j20b30a4752.jpg\" alt=\"\"></p>\n</li>\n<li><p>选择右边栏Add custom device</p>\n<p><img src=\"http://ww2.sinaimg.cn/large/6aedb651gw1fazmcukbx4j20b30a4752.jpg\" alt=\"\"></p>\n</li>\n<li><p>填写要模拟的设备，添加，如下图</p>\n<p><img src=\"http://ww4.sinaimg.cn/large/6aedb651gw1fazmhu5yg4j20br06v74o.jpg\" alt=\"\"></p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>Chrome 修改 user agent 简单模拟微信内置浏览器</p>\n<h2 id=\"微信和QQ内置浏览器UA\"><a href=\"#微信和QQ内置浏览器UA\" class=\"headerlink\" title=\"微信和QQ内置浏览器UA\"></a>微信和QQ内置浏览器UA</h2><ul>\n<li>安卓QQ内置浏览器UA:</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mozilla/5.0 (Linux; Android 5.0; SM-N9100 Build/LRX21V) &gt; AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 &gt; Chrome/37.0.0.0 Mobile Safari/537.36 V1_AND_SQ_5.3.1_196_YYB_D &gt; QQ/5.3.1.2335 NetType/WIFI</span><br></pre></td></tr></table></figure>\n<ul>\n<li>安卓微信内置浏览器UA:</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mozilla/5.0 (Linux; Android 5.0; SM-N9100 Build/LRX21V) &gt; AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 &gt; Chrome/37.0.0.0 Mobile Safari/537.36 &gt; MicroMessenger/6.0.2.56_r958800.520 NetType/WIFI</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>IOSQQ内置浏览器UA:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mozilla/5.0 (iPhone; CPU iPhone OS 7_1_2 like Mac OS X) &gt; AppleWebKit/537.51.2 (KHTML, like Gecko) Mobile/11D257 &gt; QQ/5.2.1.302 NetType/WIFI Mem/28</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>IOS微信内置浏览器UA:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mozilla/5.0 (iPhone; CPU iPhone OS 7_1_2 like Mac OS X) &gt; AppleWebKit/537.51.2 (KHTML, like Gecko) Mobile/11D257 &gt; MicroMessenger/6.0.1 NetType/WIFI</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"在Chrome添加UA\"><a href=\"#在Chrome添加UA\" class=\"headerlink\" title=\"在Chrome添加UA\"></a>在Chrome添加UA</h3><ul>\n<li><p>打开Chrome调试工具（F12），点击右上角竖着的三个点，如下图</p>\n<p><img src=\"http://ww3.sinaimg.cn/large/6aedb651gw1fazm90jatmj20bc09ggof.jpg\" alt=\"\"></p>\n</li>\n<li><p>打开后选择Setting，如下图</p>\n<p><img src=\"http://ww1.sinaimg.cn/large/6aedb651gw1fazma2xwtqj206n06ewew.jpg\" alt=\"\"></p>\n</li>\n<li><p>选择左边栏Devices，如下图</p>\n<p><img src=\"http://ww2.sinaimg.cn/large/6aedb651gw1fazmcukbx4j20b30a4752.jpg\" alt=\"\"></p>\n</li>\n<li><p>选择右边栏Add custom device</p>\n<p><img src=\"http://ww2.sinaimg.cn/large/6aedb651gw1fazmcukbx4j20b30a4752.jpg\" alt=\"\"></p>\n</li>\n<li><p>填写要模拟的设备，添加，如下图</p>\n<p><img src=\"http://ww4.sinaimg.cn/large/6aedb651gw1fazmhu5yg4j20br06v74o.jpg\" alt=\"\"></p>\n</li>\n</ul>\n"},{"title":"垂直居中的几种方法","comments":1,"abbrlink":"d5466a5b","date":"2018-10-05T02:43:46.000Z","_content":"\n# CSS垂直居中\n\n**方法一：`line-height`**\n\n适用场景：单行文字垂直居中\n\n**方法二：`line-height + display: inline-block`**\n\n适用场景：多对象垂直居中\n\n**方法三：`before +inline-block`**\n\n适用场景：多对象CSS垂直居中\n\n**方法四：`absolut + margin`**\n\n适用场景：多行文字的垂直居中\n\n**方法五：`absolut + margin auto`**\n\n适用场景：多行文字的垂直居中\n\n**方法六：`absolut + transform: translate(X,Y);`**\n\n适用场景：多行文字的垂直居中\n\n**方法七：`display: flex; + align-items: center;`**\n\n适用场景：多行文字的垂直居中\n\n**方法八：`display: flex; + margin`**\n\n适用场景：多行文字的垂直居中\n\n**方法九：`display: flex; + :before + flex-grow`**\n\n适用场景：多行文字的垂直居中\n\n**方法十：`display: flex; + align-self`**\n\n适用场景：多行文字的垂直居中\n\n**方法十一：`display: flex; + align-content`**\n\n适用场景：多行文字的垂直居中\n\n**方法十二：`grid + template`**\n\n适用场景：多行文字的垂直居中\n\n**方法十三：`grid + align-items`**\n\n适用场景：多行文字的垂直居中\n\n**方法十四：`grid + align-content`**\n\n适用场景：多行文字的垂直居中\n\n**方法十五：`grid + align-self`**\n\n适用场景：多行文字的垂直居中\n\n**方法十六：`grid + place-items`**\n\n适用场景：多行文字的垂直居中\n\n**方法十七：`grid + place-content`**\n\n适用场景：多行文字的垂直居中\n\n**方法十八：`grid + margin`**\n\n适用场景：多行文字的垂直居中\n\n**方法十九：`display:table-cell`**\n\n适用场景：多行文字的垂直居中\n\n**方法二十：`calc`**\n\n适用场景：多行文字的垂直居中\n\n**方法二十一：`relative + translate`**\n\n适用场景：多行文字的垂直居中\n\n**方法二十二：`padding`**\n\n适用场景：多行文字的垂直居中\n\n**方法二十三：`writing-mode`**\n\n适用场景：多行文字的垂直居中","source":"_posts/垂直居中的几种方法.md","raw":"---\ntitle: 垂直居中的几种方法\ncomments: true\ncategories:\n  - CSS\ntags:\n  - CSS\nabbrlink: d5466a5b\ndate: 2018-10-05 10:43:46\n---\n\n# CSS垂直居中\n\n**方法一：`line-height`**\n\n适用场景：单行文字垂直居中\n\n**方法二：`line-height + display: inline-block`**\n\n适用场景：多对象垂直居中\n\n**方法三：`before +inline-block`**\n\n适用场景：多对象CSS垂直居中\n\n**方法四：`absolut + margin`**\n\n适用场景：多行文字的垂直居中\n\n**方法五：`absolut + margin auto`**\n\n适用场景：多行文字的垂直居中\n\n**方法六：`absolut + transform: translate(X,Y);`**\n\n适用场景：多行文字的垂直居中\n\n**方法七：`display: flex; + align-items: center;`**\n\n适用场景：多行文字的垂直居中\n\n**方法八：`display: flex; + margin`**\n\n适用场景：多行文字的垂直居中\n\n**方法九：`display: flex; + :before + flex-grow`**\n\n适用场景：多行文字的垂直居中\n\n**方法十：`display: flex; + align-self`**\n\n适用场景：多行文字的垂直居中\n\n**方法十一：`display: flex; + align-content`**\n\n适用场景：多行文字的垂直居中\n\n**方法十二：`grid + template`**\n\n适用场景：多行文字的垂直居中\n\n**方法十三：`grid + align-items`**\n\n适用场景：多行文字的垂直居中\n\n**方法十四：`grid + align-content`**\n\n适用场景：多行文字的垂直居中\n\n**方法十五：`grid + align-self`**\n\n适用场景：多行文字的垂直居中\n\n**方法十六：`grid + place-items`**\n\n适用场景：多行文字的垂直居中\n\n**方法十七：`grid + place-content`**\n\n适用场景：多行文字的垂直居中\n\n**方法十八：`grid + margin`**\n\n适用场景：多行文字的垂直居中\n\n**方法十九：`display:table-cell`**\n\n适用场景：多行文字的垂直居中\n\n**方法二十：`calc`**\n\n适用场景：多行文字的垂直居中\n\n**方法二十一：`relative + translate`**\n\n适用场景：多行文字的垂直居中\n\n**方法二十二：`padding`**\n\n适用场景：多行文字的垂直居中\n\n**方法二十三：`writing-mode`**\n\n适用场景：多行文字的垂直居中","slug":"垂直居中的几种方法","published":1,"updated":"2020-05-18T16:35:00.486Z","layout":"post","photos":[],"link":"","_id":"cl78qfopf002rqic9e4fdnc54","content":"<h1 id=\"CSS垂直居中\"><a href=\"#CSS垂直居中\" class=\"headerlink\" title=\"CSS垂直居中\"></a>CSS垂直居中</h1><p><strong>方法一：<code>line-height</code></strong></p>\n<p>适用场景：单行文字垂直居中</p>\n<p><strong>方法二：<code>line-height + display: inline-block</code></strong></p>\n<p>适用场景：多对象垂直居中</p>\n<p><strong>方法三：<code>before +inline-block</code></strong></p>\n<p>适用场景：多对象CSS垂直居中</p>\n<p><strong>方法四：<code>absolut + margin</code></strong></p>\n<p>适用场景：多行文字的垂直居中</p>\n<p><strong>方法五：<code>absolut + margin auto</code></strong></p>\n<p>适用场景：多行文字的垂直居中</p>\n<p><strong>方法六：<code>absolut + transform: translate(X,Y);</code></strong></p>\n<p>适用场景：多行文字的垂直居中</p>\n<p><strong>方法七：<code>display: flex; + align-items: center;</code></strong></p>\n<p>适用场景：多行文字的垂直居中</p>\n<p><strong>方法八：<code>display: flex; + margin</code></strong></p>\n<p>适用场景：多行文字的垂直居中</p>\n<p><strong>方法九：<code>display: flex; + :before + flex-grow</code></strong></p>\n<p>适用场景：多行文字的垂直居中</p>\n<p><strong>方法十：<code>display: flex; + align-self</code></strong></p>\n<p>适用场景：多行文字的垂直居中</p>\n<p><strong>方法十一：<code>display: flex; + align-content</code></strong></p>\n<p>适用场景：多行文字的垂直居中</p>\n<p><strong>方法十二：<code>grid + template</code></strong></p>\n<p>适用场景：多行文字的垂直居中</p>\n<p><strong>方法十三：<code>grid + align-items</code></strong></p>\n<p>适用场景：多行文字的垂直居中</p>\n<p><strong>方法十四：<code>grid + align-content</code></strong></p>\n<p>适用场景：多行文字的垂直居中</p>\n<p><strong>方法十五：<code>grid + align-self</code></strong></p>\n<p>适用场景：多行文字的垂直居中</p>\n<p><strong>方法十六：<code>grid + place-items</code></strong></p>\n<p>适用场景：多行文字的垂直居中</p>\n<p><strong>方法十七：<code>grid + place-content</code></strong></p>\n<p>适用场景：多行文字的垂直居中</p>\n<p><strong>方法十八：<code>grid + margin</code></strong></p>\n<p>适用场景：多行文字的垂直居中</p>\n<p><strong>方法十九：<code>display:table-cell</code></strong></p>\n<p>适用场景：多行文字的垂直居中</p>\n<p><strong>方法二十：<code>calc</code></strong></p>\n<p>适用场景：多行文字的垂直居中</p>\n<p><strong>方法二十一：<code>relative + translate</code></strong></p>\n<p>适用场景：多行文字的垂直居中</p>\n<p><strong>方法二十二：<code>padding</code></strong></p>\n<p>适用场景：多行文字的垂直居中</p>\n<p><strong>方法二十三：<code>writing-mode</code></strong></p>\n<p>适用场景：多行文字的垂直居中</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"CSS垂直居中\"><a href=\"#CSS垂直居中\" class=\"headerlink\" title=\"CSS垂直居中\"></a>CSS垂直居中</h1><p><strong>方法一：<code>line-height</code></strong></p>\n<p>适用场景：单行文字垂直居中</p>\n<p><strong>方法二：<code>line-height + display: inline-block</code></strong></p>\n<p>适用场景：多对象垂直居中</p>\n<p><strong>方法三：<code>before +inline-block</code></strong></p>\n<p>适用场景：多对象CSS垂直居中</p>\n<p><strong>方法四：<code>absolut + margin</code></strong></p>\n<p>适用场景：多行文字的垂直居中</p>\n<p><strong>方法五：<code>absolut + margin auto</code></strong></p>\n<p>适用场景：多行文字的垂直居中</p>\n<p><strong>方法六：<code>absolut + transform: translate(X,Y);</code></strong></p>\n<p>适用场景：多行文字的垂直居中</p>\n<p><strong>方法七：<code>display: flex; + align-items: center;</code></strong></p>\n<p>适用场景：多行文字的垂直居中</p>\n<p><strong>方法八：<code>display: flex; + margin</code></strong></p>\n<p>适用场景：多行文字的垂直居中</p>\n<p><strong>方法九：<code>display: flex; + :before + flex-grow</code></strong></p>\n<p>适用场景：多行文字的垂直居中</p>\n<p><strong>方法十：<code>display: flex; + align-self</code></strong></p>\n<p>适用场景：多行文字的垂直居中</p>\n<p><strong>方法十一：<code>display: flex; + align-content</code></strong></p>\n<p>适用场景：多行文字的垂直居中</p>\n<p><strong>方法十二：<code>grid + template</code></strong></p>\n<p>适用场景：多行文字的垂直居中</p>\n<p><strong>方法十三：<code>grid + align-items</code></strong></p>\n<p>适用场景：多行文字的垂直居中</p>\n<p><strong>方法十四：<code>grid + align-content</code></strong></p>\n<p>适用场景：多行文字的垂直居中</p>\n<p><strong>方法十五：<code>grid + align-self</code></strong></p>\n<p>适用场景：多行文字的垂直居中</p>\n<p><strong>方法十六：<code>grid + place-items</code></strong></p>\n<p>适用场景：多行文字的垂直居中</p>\n<p><strong>方法十七：<code>grid + place-content</code></strong></p>\n<p>适用场景：多行文字的垂直居中</p>\n<p><strong>方法十八：<code>grid + margin</code></strong></p>\n<p>适用场景：多行文字的垂直居中</p>\n<p><strong>方法十九：<code>display:table-cell</code></strong></p>\n<p>适用场景：多行文字的垂直居中</p>\n<p><strong>方法二十：<code>calc</code></strong></p>\n<p>适用场景：多行文字的垂直居中</p>\n<p><strong>方法二十一：<code>relative + translate</code></strong></p>\n<p>适用场景：多行文字的垂直居中</p>\n<p><strong>方法二十二：<code>padding</code></strong></p>\n<p>适用场景：多行文字的垂直居中</p>\n<p><strong>方法二十三：<code>writing-mode</code></strong></p>\n<p>适用场景：多行文字的垂直居中</p>\n"},{"title":"安装Docker","comments":1,"abbrlink":"adt7e5ef","date":"2020-01-20T08:02:06.000Z","_content":"\n# Linux\n\n> Docker — 从入门到实践\nhttps://yeasy.gitbooks.io/docker_practice/content/\nhttps://juejin.im/post/5cce4b1cf265da0373719819\n\n详细的分步骤的安装说明可以参见官方文档，https://docs.docker.com/engine/installation/linux/ubuntu/\n\n在官方文档中详细说明了不同Linux系统的安装方法，安装流程根据文档一步步执行即可安装成功。\n\n但是为了使得安装更加方便，Docker官方还提供了一键安装脚本，使用它会使得安装更加便捷，不用再去一步步执行命令安装了，在此介绍一下一键脚本安装方式。\n\n首先是Docker官方提供的安装脚本，相比其他脚本，官方提供的一定更靠谱，安装命令如下：\n\n```\ncurl -sSL https://get.docker.com/ | sh\n```\n\n> 在安装过程中会出现`sudo usermod -aG docker your-user`只需要把`your-user`改成你当前的用户。\n\n*将当前用户加入到docker用户组中*\n```\nsudo usermod -aG docker your-user\n```\n*重新启动docker服务或者重新登录终端再运行docker命令*\n```\nsudo service docker restart\n```\n\n只要执行如上一条命令，等待一会儿Docker便会安装完成，非常方便。\n\n但是官方脚本安装有一个缺点，那就是慢，也可能下载超时，所以为了加快下载速度，我们可以使用国内的镜像来安装，所以在这里还有DaoCloud的安装脚本。\n\n- DaoCloud安装脚本：\n```\ncurl -sSL https://get.daocloud.io/docker | sh\n```\n\n等待脚本执行完毕之后，就可以使用Docker相关命令了，如运行测试Hello World镜像：\n\n```\ndocker run hello-world\n```\n\n运行结果：\n\n```\nUnable to find image 'hello-world:latest' locally\nlatest: Pulling from library/hello-world\n1b930d010525: Pull complete \nDigest: sha256:4fe721ccc2e8dc7362278a29dc660d833570ec2682f4e4194f4ee23e415e1064\nStatus: Downloaded newer image for hello-world:latest\n```\n如果出现上文类似提示内容则证明Docker可以正常使用了。\n\n\n## 一、删除Docker镜像\n\n> 在删除镜像前需要先删除docker，因为该image被对应的container引用，所以image删除失败\n\n```\n[root@VM_0_12_centos app]# docker images\nREPOSITORY          TAG                 IMAGE ID            CREATED             SIZE\nnode                8-slim              9cd4d5af4312        8 days ago          146MB\nhello-world         latest              fce289e99eb9        12 months ago       1.84kB\n```\n**1. 主要希望删除这两个imgae,根据image的id到container中找(由于已经删了是空的)**\n\n```\n[root@VM_0_12_centos app]# docker ps -a\nCONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS                   PORTS               NAMES\n1c3632d52e9f        node:8-slim         \"docker-entrypoint.s…\"   3 hours ago         Exited (0) 3 hours ago                       sweet_feynman\n0f6128a6443e        node:8-slim         \"docker-entrypoint.s…\"   3 hours ago         Exited (0) 3 hours ago                       determined_aryabhata\n45aff5568711        hello-world         \"/hello\"                 4 hours ago         Exited (0) 4 hours ago \n```\n删除\n```\n[root@VM_0_12_centos app]# docker rm 0f6128a6443e\n0f6128a6443e\n```\n\n**2. 现在就可以删除docker了**\n\n```\ndocker rmi 9cd4d5af4312\n```\n\n*官方建议的批量删除停止容器使用`docker rm $(sudo docker ps -a -q)`*\n\n*千万不要用 `docker rm -f $(sudo docker ps -a -q)`,会删除全部容器的*\n\n> 1、删除所有容器`docker rm docker ps -a -q`\\\n2、删除所有镜像 `docker rmi docker images -q`\n\n[引用Docker 删除镜像](https://www.cnblogs.com/sddai/p/10427785.html)\n\n3. 修改容器名字\n    - 修改容器(第一个参数可以是name和id)\nhttps://docs.docker.com/engine/reference/commandline/rename/\n```\ndocker ps -a\n\ndocker rename <my_container> <my_new_container>\n```\n\n# 二、进入容器\n**1. 进入容器内部**\n```\n[root@VM_0_12_centos ~]# docker exec -ti wepy/mall /bin/bash\n```\n\n**2.docker安装nginx静态文件服务器**\nhttps://blog.csdn.net/wugenqiang/article/details/86513257\n\n# 三、Dockerfile配置\n![](http://img.cdn.vmccc.cn/16ead7303985b8fd.png)\n\n# 参数对应\n- docker run 基于镜像启动一个容器\n- -p 3000:80 端口映射，将宿主的3000端口映射到容器的80端口\n- -d 后台方式运行\n- --name 容器名 查看 docker 进程","source":"_posts/安装Docker.md","raw":"---\ntitle: 安装Docker\ncomments: true\ncategories:\n  - Docker\ntags:\n  - Docker\nabbrlink: adt7e5ef\ndate: 2020-01-20 16:02:06\n---\n\n# Linux\n\n> Docker — 从入门到实践\nhttps://yeasy.gitbooks.io/docker_practice/content/\nhttps://juejin.im/post/5cce4b1cf265da0373719819\n\n详细的分步骤的安装说明可以参见官方文档，https://docs.docker.com/engine/installation/linux/ubuntu/\n\n在官方文档中详细说明了不同Linux系统的安装方法，安装流程根据文档一步步执行即可安装成功。\n\n但是为了使得安装更加方便，Docker官方还提供了一键安装脚本，使用它会使得安装更加便捷，不用再去一步步执行命令安装了，在此介绍一下一键脚本安装方式。\n\n首先是Docker官方提供的安装脚本，相比其他脚本，官方提供的一定更靠谱，安装命令如下：\n\n```\ncurl -sSL https://get.docker.com/ | sh\n```\n\n> 在安装过程中会出现`sudo usermod -aG docker your-user`只需要把`your-user`改成你当前的用户。\n\n*将当前用户加入到docker用户组中*\n```\nsudo usermod -aG docker your-user\n```\n*重新启动docker服务或者重新登录终端再运行docker命令*\n```\nsudo service docker restart\n```\n\n只要执行如上一条命令，等待一会儿Docker便会安装完成，非常方便。\n\n但是官方脚本安装有一个缺点，那就是慢，也可能下载超时，所以为了加快下载速度，我们可以使用国内的镜像来安装，所以在这里还有DaoCloud的安装脚本。\n\n- DaoCloud安装脚本：\n```\ncurl -sSL https://get.daocloud.io/docker | sh\n```\n\n等待脚本执行完毕之后，就可以使用Docker相关命令了，如运行测试Hello World镜像：\n\n```\ndocker run hello-world\n```\n\n运行结果：\n\n```\nUnable to find image 'hello-world:latest' locally\nlatest: Pulling from library/hello-world\n1b930d010525: Pull complete \nDigest: sha256:4fe721ccc2e8dc7362278a29dc660d833570ec2682f4e4194f4ee23e415e1064\nStatus: Downloaded newer image for hello-world:latest\n```\n如果出现上文类似提示内容则证明Docker可以正常使用了。\n\n\n## 一、删除Docker镜像\n\n> 在删除镜像前需要先删除docker，因为该image被对应的container引用，所以image删除失败\n\n```\n[root@VM_0_12_centos app]# docker images\nREPOSITORY          TAG                 IMAGE ID            CREATED             SIZE\nnode                8-slim              9cd4d5af4312        8 days ago          146MB\nhello-world         latest              fce289e99eb9        12 months ago       1.84kB\n```\n**1. 主要希望删除这两个imgae,根据image的id到container中找(由于已经删了是空的)**\n\n```\n[root@VM_0_12_centos app]# docker ps -a\nCONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS                   PORTS               NAMES\n1c3632d52e9f        node:8-slim         \"docker-entrypoint.s…\"   3 hours ago         Exited (0) 3 hours ago                       sweet_feynman\n0f6128a6443e        node:8-slim         \"docker-entrypoint.s…\"   3 hours ago         Exited (0) 3 hours ago                       determined_aryabhata\n45aff5568711        hello-world         \"/hello\"                 4 hours ago         Exited (0) 4 hours ago \n```\n删除\n```\n[root@VM_0_12_centos app]# docker rm 0f6128a6443e\n0f6128a6443e\n```\n\n**2. 现在就可以删除docker了**\n\n```\ndocker rmi 9cd4d5af4312\n```\n\n*官方建议的批量删除停止容器使用`docker rm $(sudo docker ps -a -q)`*\n\n*千万不要用 `docker rm -f $(sudo docker ps -a -q)`,会删除全部容器的*\n\n> 1、删除所有容器`docker rm docker ps -a -q`\\\n2、删除所有镜像 `docker rmi docker images -q`\n\n[引用Docker 删除镜像](https://www.cnblogs.com/sddai/p/10427785.html)\n\n3. 修改容器名字\n    - 修改容器(第一个参数可以是name和id)\nhttps://docs.docker.com/engine/reference/commandline/rename/\n```\ndocker ps -a\n\ndocker rename <my_container> <my_new_container>\n```\n\n# 二、进入容器\n**1. 进入容器内部**\n```\n[root@VM_0_12_centos ~]# docker exec -ti wepy/mall /bin/bash\n```\n\n**2.docker安装nginx静态文件服务器**\nhttps://blog.csdn.net/wugenqiang/article/details/86513257\n\n# 三、Dockerfile配置\n![](http://img.cdn.vmccc.cn/16ead7303985b8fd.png)\n\n# 参数对应\n- docker run 基于镜像启动一个容器\n- -p 3000:80 端口映射，将宿主的3000端口映射到容器的80端口\n- -d 后台方式运行\n- --name 容器名 查看 docker 进程","slug":"安装Docker","published":1,"updated":"2020-05-18T16:35:00.486Z","layout":"post","photos":[],"link":"","_id":"cl78qfopg002vqic9vs9bacxe","content":"<h1 id=\"Linux\"><a href=\"#Linux\" class=\"headerlink\" title=\"Linux\"></a>Linux</h1><blockquote>\n<p>Docker — 从入门到实践<br><a href=\"https://yeasy.gitbooks.io/docker_practice/content/\" target=\"_blank\" rel=\"noopener\">https://yeasy.gitbooks.io/docker_practice/content/</a><br><a href=\"https://juejin.im/post/5cce4b1cf265da0373719819\" target=\"_blank\" rel=\"noopener\">https://juejin.im/post/5cce4b1cf265da0373719819</a></p>\n</blockquote>\n<p>详细的分步骤的安装说明可以参见官方文档，<a href=\"https://docs.docker.com/engine/installation/linux/ubuntu/\" target=\"_blank\" rel=\"noopener\">https://docs.docker.com/engine/installation/linux/ubuntu/</a></p>\n<p>在官方文档中详细说明了不同Linux系统的安装方法，安装流程根据文档一步步执行即可安装成功。</p>\n<p>但是为了使得安装更加方便，Docker官方还提供了一键安装脚本，使用它会使得安装更加便捷，不用再去一步步执行命令安装了，在此介绍一下一键脚本安装方式。</p>\n<p>首先是Docker官方提供的安装脚本，相比其他脚本，官方提供的一定更靠谱，安装命令如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -sSL https://get.docker.com/ | sh</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>在安装过程中会出现<code>sudo usermod -aG docker your-user</code>只需要把<code>your-user</code>改成你当前的用户。</p>\n</blockquote>\n<p><em>将当前用户加入到docker用户组中</em><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo usermod -aG docker your-user</span><br></pre></td></tr></table></figure></p>\n<p><em>重新启动docker服务或者重新登录终端再运行docker命令</em><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo service docker restart</span><br></pre></td></tr></table></figure></p>\n<p>只要执行如上一条命令，等待一会儿Docker便会安装完成，非常方便。</p>\n<p>但是官方脚本安装有一个缺点，那就是慢，也可能下载超时，所以为了加快下载速度，我们可以使用国内的镜像来安装，所以在这里还有DaoCloud的安装脚本。</p>\n<ul>\n<li>DaoCloud安装脚本：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -sSL https://get.daocloud.io/docker | sh</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>等待脚本执行完毕之后，就可以使用Docker相关命令了，如运行测试Hello World镜像：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run hello-world</span><br></pre></td></tr></table></figure>\n<p>运行结果：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Unable to find image &apos;hello-world:latest&apos; locally</span><br><span class=\"line\">latest: Pulling from library/hello-world</span><br><span class=\"line\">1b930d010525: Pull complete </span><br><span class=\"line\">Digest: sha256:4fe721ccc2e8dc7362278a29dc660d833570ec2682f4e4194f4ee23e415e1064</span><br><span class=\"line\">Status: Downloaded newer image for hello-world:latest</span><br></pre></td></tr></table></figure>\n<p>如果出现上文类似提示内容则证明Docker可以正常使用了。</p>\n<h2 id=\"一、删除Docker镜像\"><a href=\"#一、删除Docker镜像\" class=\"headerlink\" title=\"一、删除Docker镜像\"></a>一、删除Docker镜像</h2><blockquote>\n<p>在删除镜像前需要先删除docker，因为该image被对应的container引用，所以image删除失败</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@VM_0_12_centos app]# docker images</span><br><span class=\"line\">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class=\"line\">node                8-slim              9cd4d5af4312        8 days ago          146MB</span><br><span class=\"line\">hello-world         latest              fce289e99eb9        12 months ago       1.84kB</span><br></pre></td></tr></table></figure>\n<p><strong>1. 主要希望删除这两个imgae,根据image的id到container中找(由于已经删了是空的)</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@VM_0_12_centos app]# docker ps -a</span><br><span class=\"line\">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS                   PORTS               NAMES</span><br><span class=\"line\">1c3632d52e9f        node:8-slim         &quot;docker-entrypoint.s…&quot;   3 hours ago         Exited (0) 3 hours ago                       sweet_feynman</span><br><span class=\"line\">0f6128a6443e        node:8-slim         &quot;docker-entrypoint.s…&quot;   3 hours ago         Exited (0) 3 hours ago                       determined_aryabhata</span><br><span class=\"line\">45aff5568711        hello-world         &quot;/hello&quot;                 4 hours ago         Exited (0) 4 hours ago</span><br></pre></td></tr></table></figure>\n<p>删除<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@VM_0_12_centos app]# docker rm 0f6128a6443e</span><br><span class=\"line\">0f6128a6443e</span><br></pre></td></tr></table></figure></p>\n<p><strong>2. 现在就可以删除docker了</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker rmi 9cd4d5af4312</span><br></pre></td></tr></table></figure>\n<p><em>官方建议的批量删除停止容器使用<code>docker rm $(sudo docker ps -a -q)</code></em></p>\n<p><em>千万不要用 <code>docker rm -f $(sudo docker ps -a -q)</code>,会删除全部容器的</em></p>\n<blockquote>\n<p>1、删除所有容器<code>docker rm docker ps -a -q</code>\\<br>2、删除所有镜像 <code>docker rmi docker images -q</code></p>\n</blockquote>\n<p><a href=\"https://www.cnblogs.com/sddai/p/10427785.html\" target=\"_blank\" rel=\"noopener\">引用Docker 删除镜像</a></p>\n<ol start=\"3\">\n<li>修改容器名字<ul>\n<li>修改容器(第一个参数可以是name和id)<br><a href=\"https://docs.docker.com/engine/reference/commandline/rename/\" target=\"_blank\" rel=\"noopener\">https://docs.docker.com/engine/reference/commandline/rename/</a><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker ps -a</span><br><span class=\"line\"></span><br><span class=\"line\">docker rename &lt;my_container&gt; &lt;my_new_container&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ol>\n<h1 id=\"二、进入容器\"><a href=\"#二、进入容器\" class=\"headerlink\" title=\"二、进入容器\"></a>二、进入容器</h1><p><strong>1. 进入容器内部</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@VM_0_12_centos ~]# docker exec -ti wepy/mall /bin/bash</span><br></pre></td></tr></table></figure></p>\n<p><strong>2.docker安装nginx静态文件服务器</strong><br><a href=\"https://blog.csdn.net/wugenqiang/article/details/86513257\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/wugenqiang/article/details/86513257</a></p>\n<h1 id=\"三、Dockerfile配置\"><a href=\"#三、Dockerfile配置\" class=\"headerlink\" title=\"三、Dockerfile配置\"></a>三、Dockerfile配置</h1><p><img src=\"http://img.cdn.vmccc.cn/16ead7303985b8fd.png\" alt=\"\"></p>\n<h1 id=\"参数对应\"><a href=\"#参数对应\" class=\"headerlink\" title=\"参数对应\"></a>参数对应</h1><ul>\n<li>docker run 基于镜像启动一个容器</li>\n<li>-p 3000:80 端口映射，将宿主的3000端口映射到容器的80端口</li>\n<li>-d 后台方式运行</li>\n<li>–name 容器名 查看 docker 进程</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Linux\"><a href=\"#Linux\" class=\"headerlink\" title=\"Linux\"></a>Linux</h1><blockquote>\n<p>Docker — 从入门到实践<br><a href=\"https://yeasy.gitbooks.io/docker_practice/content/\" target=\"_blank\" rel=\"noopener\">https://yeasy.gitbooks.io/docker_practice/content/</a><br><a href=\"https://juejin.im/post/5cce4b1cf265da0373719819\" target=\"_blank\" rel=\"noopener\">https://juejin.im/post/5cce4b1cf265da0373719819</a></p>\n</blockquote>\n<p>详细的分步骤的安装说明可以参见官方文档，<a href=\"https://docs.docker.com/engine/installation/linux/ubuntu/\" target=\"_blank\" rel=\"noopener\">https://docs.docker.com/engine/installation/linux/ubuntu/</a></p>\n<p>在官方文档中详细说明了不同Linux系统的安装方法，安装流程根据文档一步步执行即可安装成功。</p>\n<p>但是为了使得安装更加方便，Docker官方还提供了一键安装脚本，使用它会使得安装更加便捷，不用再去一步步执行命令安装了，在此介绍一下一键脚本安装方式。</p>\n<p>首先是Docker官方提供的安装脚本，相比其他脚本，官方提供的一定更靠谱，安装命令如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -sSL https://get.docker.com/ | sh</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>在安装过程中会出现<code>sudo usermod -aG docker your-user</code>只需要把<code>your-user</code>改成你当前的用户。</p>\n</blockquote>\n<p><em>将当前用户加入到docker用户组中</em><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo usermod -aG docker your-user</span><br></pre></td></tr></table></figure></p>\n<p><em>重新启动docker服务或者重新登录终端再运行docker命令</em><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo service docker restart</span><br></pre></td></tr></table></figure></p>\n<p>只要执行如上一条命令，等待一会儿Docker便会安装完成，非常方便。</p>\n<p>但是官方脚本安装有一个缺点，那就是慢，也可能下载超时，所以为了加快下载速度，我们可以使用国内的镜像来安装，所以在这里还有DaoCloud的安装脚本。</p>\n<ul>\n<li>DaoCloud安装脚本：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -sSL https://get.daocloud.io/docker | sh</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>等待脚本执行完毕之后，就可以使用Docker相关命令了，如运行测试Hello World镜像：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run hello-world</span><br></pre></td></tr></table></figure>\n<p>运行结果：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Unable to find image &apos;hello-world:latest&apos; locally</span><br><span class=\"line\">latest: Pulling from library/hello-world</span><br><span class=\"line\">1b930d010525: Pull complete </span><br><span class=\"line\">Digest: sha256:4fe721ccc2e8dc7362278a29dc660d833570ec2682f4e4194f4ee23e415e1064</span><br><span class=\"line\">Status: Downloaded newer image for hello-world:latest</span><br></pre></td></tr></table></figure>\n<p>如果出现上文类似提示内容则证明Docker可以正常使用了。</p>\n<h2 id=\"一、删除Docker镜像\"><a href=\"#一、删除Docker镜像\" class=\"headerlink\" title=\"一、删除Docker镜像\"></a>一、删除Docker镜像</h2><blockquote>\n<p>在删除镜像前需要先删除docker，因为该image被对应的container引用，所以image删除失败</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@VM_0_12_centos app]# docker images</span><br><span class=\"line\">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class=\"line\">node                8-slim              9cd4d5af4312        8 days ago          146MB</span><br><span class=\"line\">hello-world         latest              fce289e99eb9        12 months ago       1.84kB</span><br></pre></td></tr></table></figure>\n<p><strong>1. 主要希望删除这两个imgae,根据image的id到container中找(由于已经删了是空的)</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@VM_0_12_centos app]# docker ps -a</span><br><span class=\"line\">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS                   PORTS               NAMES</span><br><span class=\"line\">1c3632d52e9f        node:8-slim         &quot;docker-entrypoint.s…&quot;   3 hours ago         Exited (0) 3 hours ago                       sweet_feynman</span><br><span class=\"line\">0f6128a6443e        node:8-slim         &quot;docker-entrypoint.s…&quot;   3 hours ago         Exited (0) 3 hours ago                       determined_aryabhata</span><br><span class=\"line\">45aff5568711        hello-world         &quot;/hello&quot;                 4 hours ago         Exited (0) 4 hours ago</span><br></pre></td></tr></table></figure>\n<p>删除<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@VM_0_12_centos app]# docker rm 0f6128a6443e</span><br><span class=\"line\">0f6128a6443e</span><br></pre></td></tr></table></figure></p>\n<p><strong>2. 现在就可以删除docker了</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker rmi 9cd4d5af4312</span><br></pre></td></tr></table></figure>\n<p><em>官方建议的批量删除停止容器使用<code>docker rm $(sudo docker ps -a -q)</code></em></p>\n<p><em>千万不要用 <code>docker rm -f $(sudo docker ps -a -q)</code>,会删除全部容器的</em></p>\n<blockquote>\n<p>1、删除所有容器<code>docker rm docker ps -a -q</code>\\<br>2、删除所有镜像 <code>docker rmi docker images -q</code></p>\n</blockquote>\n<p><a href=\"https://www.cnblogs.com/sddai/p/10427785.html\" target=\"_blank\" rel=\"noopener\">引用Docker 删除镜像</a></p>\n<ol start=\"3\">\n<li>修改容器名字<ul>\n<li>修改容器(第一个参数可以是name和id)<br><a href=\"https://docs.docker.com/engine/reference/commandline/rename/\" target=\"_blank\" rel=\"noopener\">https://docs.docker.com/engine/reference/commandline/rename/</a><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker ps -a</span><br><span class=\"line\"></span><br><span class=\"line\">docker rename &lt;my_container&gt; &lt;my_new_container&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ol>\n<h1 id=\"二、进入容器\"><a href=\"#二、进入容器\" class=\"headerlink\" title=\"二、进入容器\"></a>二、进入容器</h1><p><strong>1. 进入容器内部</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@VM_0_12_centos ~]# docker exec -ti wepy/mall /bin/bash</span><br></pre></td></tr></table></figure></p>\n<p><strong>2.docker安装nginx静态文件服务器</strong><br><a href=\"https://blog.csdn.net/wugenqiang/article/details/86513257\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/wugenqiang/article/details/86513257</a></p>\n<h1 id=\"三、Dockerfile配置\"><a href=\"#三、Dockerfile配置\" class=\"headerlink\" title=\"三、Dockerfile配置\"></a>三、Dockerfile配置</h1><p><img src=\"http://img.cdn.vmccc.cn/16ead7303985b8fd.png\" alt=\"\"></p>\n<h1 id=\"参数对应\"><a href=\"#参数对应\" class=\"headerlink\" title=\"参数对应\"></a>参数对应</h1><ul>\n<li>docker run 基于镜像启动一个容器</li>\n<li>-p 3000:80 端口映射，将宿主的3000端口映射到容器的80端口</li>\n<li>-d 后台方式运行</li>\n<li>–name 容器名 查看 docker 进程</li>\n</ul>\n"},{"title":"小程序wxml页面进行数据替换","comments":1,"abbrlink":"fc17f2c8","date":"2019-04-01T15:39:12.000Z","_content":"\n参考1.[微信小程序WXML页面上直接进行字符串截取实现方式](https://blog.csdn.net/cangahi09025566/article/details/82589831)\n\n参考2.[wxs replace 正则用法该怎么用？？？？](https://www.aiyingli.com/51529.html)\n\n### 代码\n\n```html\n//顶部引用\n<!-- 引入wxs脚本 -->\n<wxs src=\"./subutil.wxs\" module=\"tools\" />\n<view class='nameSite'>{{tools.subs(addressModel.address_city)}} </view>\n```\n\nwxs脚本文件\n\n```js\nvar sub = function (val) {\n  if (val.length == 0 || val == undefined) {\n    return;\n  } else {\n    var reg = getRegExp(\"(\\|)\", \"g\");\n    console.log(reg);\n    return val.replace(reg, ' ');\n  }\n \n}\n\nmodule.exports.sub = sub;\n```\n\n","source":"_posts/小程序wxml页面进行数据替换.md","raw":"---\ntitle: 小程序wxml页面进行数据替换\ncomments: true\ncategories:\n  - 小程序\ntags:\n  - 小程序\nabbrlink: fc17f2c8\ndate: 2019-04-01 23:39:12\n---\n\n参考1.[微信小程序WXML页面上直接进行字符串截取实现方式](https://blog.csdn.net/cangahi09025566/article/details/82589831)\n\n参考2.[wxs replace 正则用法该怎么用？？？？](https://www.aiyingli.com/51529.html)\n\n### 代码\n\n```html\n//顶部引用\n<!-- 引入wxs脚本 -->\n<wxs src=\"./subutil.wxs\" module=\"tools\" />\n<view class='nameSite'>{{tools.subs(addressModel.address_city)}} </view>\n```\n\nwxs脚本文件\n\n```js\nvar sub = function (val) {\n  if (val.length == 0 || val == undefined) {\n    return;\n  } else {\n    var reg = getRegExp(\"(\\|)\", \"g\");\n    console.log(reg);\n    return val.replace(reg, ' ');\n  }\n \n}\n\nmodule.exports.sub = sub;\n```\n\n","slug":"小程序wxml页面进行数据替换","published":1,"updated":"2020-05-18T16:35:00.486Z","layout":"post","photos":[],"link":"","_id":"cl78qfoph002yqic99bbl7v1u","content":"<p>参考1.<a href=\"https://blog.csdn.net/cangahi09025566/article/details/82589831\" target=\"_blank\" rel=\"noopener\">微信小程序WXML页面上直接进行字符串截取实现方式</a></p>\n<p>参考2.<a href=\"https://www.aiyingli.com/51529.html\" target=\"_blank\" rel=\"noopener\">wxs replace 正则用法该怎么用？？？？</a></p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//顶部引用</span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 引入wxs脚本 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">wxs</span> <span class=\"attr\">src</span>=<span class=\"string\">\"./subutil.wxs\"</span> <span class=\"attr\">module</span>=<span class=\"string\">\"tools\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">class</span>=<span class=\"string\">'nameSite'</span>&gt;</span>&#123;&#123;tools.subs(addressModel.address_city)&#125;&#125; <span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>wxs脚本文件</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> sub = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">val</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (val.length == <span class=\"number\">0</span> || val == <span class=\"literal\">undefined</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> reg = getRegExp(<span class=\"string\">\"(\\|)\"</span>, <span class=\"string\">\"g\"</span>);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(reg);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> val.replace(reg, <span class=\"string\">' '</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports.sub = sub;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>参考1.<a href=\"https://blog.csdn.net/cangahi09025566/article/details/82589831\" target=\"_blank\" rel=\"noopener\">微信小程序WXML页面上直接进行字符串截取实现方式</a></p>\n<p>参考2.<a href=\"https://www.aiyingli.com/51529.html\" target=\"_blank\" rel=\"noopener\">wxs replace 正则用法该怎么用？？？？</a></p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//顶部引用</span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 引入wxs脚本 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">wxs</span> <span class=\"attr\">src</span>=<span class=\"string\">\"./subutil.wxs\"</span> <span class=\"attr\">module</span>=<span class=\"string\">\"tools\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">class</span>=<span class=\"string\">'nameSite'</span>&gt;</span>&#123;&#123;tools.subs(addressModel.address_city)&#125;&#125; <span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>wxs脚本文件</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> sub = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">val</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (val.length == <span class=\"number\">0</span> || val == <span class=\"literal\">undefined</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> reg = getRegExp(<span class=\"string\">\"(\\|)\"</span>, <span class=\"string\">\"g\"</span>);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(reg);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> val.replace(reg, <span class=\"string\">' '</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports.sub = sub;</span><br></pre></td></tr></table></figure>\n"},{"title":"小程序反编译","comments":1,"abbrlink":"1021e908","date":"2018-10-05T14:43:22.000Z","_content":"\n# 小程序反编译\n\n\n\n还原app-service.js用：node wuJs.js app-service.js\n\n还原page-frame.js用：node wuWxml.js page-frame.js\n\n还有个xmss文件是用：node wuWxss.js xxx\n\n隐藏的内容：\n\n1：先解分包.wxapkg文件\n\n比如：node wuWxapkg.js _-991772207_30.wxapkg\n\n2：再分别解app-service.js和page-frame.js文件\n\n比如：node wuJs.js app-service.js page-frame.js\n\n3：最后就是解pages里面的html文件\n\n比如：node wuWxss.js _-991772207_30\\pages\\seckill\n\n\n\n## 小程序前端反编译之人人商城小程序分包还原\n\n之前说了人人商城小程序的教程，里面没有说关于人人商城分包的事，由于原文文字已经够多了，我现在再次看感觉都有烦，所以单独写个文章吧。\n\n查看之前的：[微擎人人商城小程序前端反编译解包还原教程](https://www.zhujitop.com/2058.html)\n\n人人商城的拼团，秒杀之类的采用的是分包的形式，目前人人商城官方分包的有：快速购买quickbuy，秒杀seckill，拼团groups，砍价bargain，还有个raffle，但是raffle目前是空的，我之前还不知道这个文件夹是干嘛的，因为没解开看里面的文件，然后时光说这是游戏营销，估计是等待以后更新用到的。\n\n### 分包文件介绍：\n\n分包.wxapkg文件第一次解出来之后有：app-service.js， page-frame.js还有pages文件夹里面的html文件\n\napp-service.js可以解出来js文件， page-frame.js可以解出来wxml文件\n\n但是没有wxss文件，在微信小程序官方介绍也说了小程序的wxml和wxss混淆了，混淆之后就是在我们提取的html文件里面。\n\n所以现在单独解pages里面的html就能把wxss提取出来。\n\n解包命令：\n\nnode wuWxss.js 小程序分包名称\\pages文件夹\n\n最后整理的时候把html文件删了，如果在上传小程序的时候还提升代码包过大，就涨价整理下解包文件或者压缩下图片大小。\n\n比如我用人人商城的分包具体步骤就是：\n\n隐藏的内容：\n\n1：先解分包.wxapkg文件\n\n比如：node wuWxapkg.js _-991772207_30.wxapkg\n\n2：再分别解app-service.js和page-frame.js文件\n\n比如：node wuJs.js app-service.js\n\n3：最后就是解pages里面的html文件\n\n比如：node wuWxss.js _-991772207_30\\pages\\seckill\n\n## 参考资料\n\n[反编译获取任何微信小程序源码(完)](https://blog.csdn.net/qq_33858250/article/details/80543815)\n\n[反编译获取线上任何微信小程序源码（教程完结）](https://www.weipxiu.com/1887.html)\n\n[小程序前端反编译之人人商城小程序分包还原](https://www.zhujitop.com/2108.html#comment-4374)\n\n[Wechat App(微信小程序,.wxapkg)解包及相关文件(.wxss,.json,.wxs,.wxml)还原工具](https://github.com/qwerty472123/wxappUnpacker)","source":"_posts/小程序反编译.md","raw":"---\ntitle: 小程序反编译\ncomments: true\ncategories:\n  - 小程序\ntags:\n  - 小程序\n  - 小程序反编译\nabbrlink: '1021e908'\ndate: 2018-10-05 22:43:22\n---\n\n# 小程序反编译\n\n\n\n还原app-service.js用：node wuJs.js app-service.js\n\n还原page-frame.js用：node wuWxml.js page-frame.js\n\n还有个xmss文件是用：node wuWxss.js xxx\n\n隐藏的内容：\n\n1：先解分包.wxapkg文件\n\n比如：node wuWxapkg.js _-991772207_30.wxapkg\n\n2：再分别解app-service.js和page-frame.js文件\n\n比如：node wuJs.js app-service.js page-frame.js\n\n3：最后就是解pages里面的html文件\n\n比如：node wuWxss.js _-991772207_30\\pages\\seckill\n\n\n\n## 小程序前端反编译之人人商城小程序分包还原\n\n之前说了人人商城小程序的教程，里面没有说关于人人商城分包的事，由于原文文字已经够多了，我现在再次看感觉都有烦，所以单独写个文章吧。\n\n查看之前的：[微擎人人商城小程序前端反编译解包还原教程](https://www.zhujitop.com/2058.html)\n\n人人商城的拼团，秒杀之类的采用的是分包的形式，目前人人商城官方分包的有：快速购买quickbuy，秒杀seckill，拼团groups，砍价bargain，还有个raffle，但是raffle目前是空的，我之前还不知道这个文件夹是干嘛的，因为没解开看里面的文件，然后时光说这是游戏营销，估计是等待以后更新用到的。\n\n### 分包文件介绍：\n\n分包.wxapkg文件第一次解出来之后有：app-service.js， page-frame.js还有pages文件夹里面的html文件\n\napp-service.js可以解出来js文件， page-frame.js可以解出来wxml文件\n\n但是没有wxss文件，在微信小程序官方介绍也说了小程序的wxml和wxss混淆了，混淆之后就是在我们提取的html文件里面。\n\n所以现在单独解pages里面的html就能把wxss提取出来。\n\n解包命令：\n\nnode wuWxss.js 小程序分包名称\\pages文件夹\n\n最后整理的时候把html文件删了，如果在上传小程序的时候还提升代码包过大，就涨价整理下解包文件或者压缩下图片大小。\n\n比如我用人人商城的分包具体步骤就是：\n\n隐藏的内容：\n\n1：先解分包.wxapkg文件\n\n比如：node wuWxapkg.js _-991772207_30.wxapkg\n\n2：再分别解app-service.js和page-frame.js文件\n\n比如：node wuJs.js app-service.js\n\n3：最后就是解pages里面的html文件\n\n比如：node wuWxss.js _-991772207_30\\pages\\seckill\n\n## 参考资料\n\n[反编译获取任何微信小程序源码(完)](https://blog.csdn.net/qq_33858250/article/details/80543815)\n\n[反编译获取线上任何微信小程序源码（教程完结）](https://www.weipxiu.com/1887.html)\n\n[小程序前端反编译之人人商城小程序分包还原](https://www.zhujitop.com/2108.html#comment-4374)\n\n[Wechat App(微信小程序,.wxapkg)解包及相关文件(.wxss,.json,.wxs,.wxml)还原工具](https://github.com/qwerty472123/wxappUnpacker)","slug":"小程序反编译","published":1,"updated":"2020-05-18T16:35:00.486Z","layout":"post","photos":[],"link":"","_id":"cl78qfopj0032qic9lqvjxhjz","content":"<h1 id=\"小程序反编译\"><a href=\"#小程序反编译\" class=\"headerlink\" title=\"小程序反编译\"></a>小程序反编译</h1><p>还原app-service.js用：node wuJs.js app-service.js</p>\n<p>还原page-frame.js用：node wuWxml.js page-frame.js</p>\n<p>还有个xmss文件是用：node wuWxss.js xxx</p>\n<p>隐藏的内容：</p>\n<p>1：先解分包.wxapkg文件</p>\n<p>比如：node wuWxapkg.js _-991772207_30.wxapkg</p>\n<p>2：再分别解app-service.js和page-frame.js文件</p>\n<p>比如：node wuJs.js app-service.js page-frame.js</p>\n<p>3：最后就是解pages里面的html文件</p>\n<p>比如：node wuWxss.js _-991772207_30\\pages\\seckill</p>\n<h2 id=\"小程序前端反编译之人人商城小程序分包还原\"><a href=\"#小程序前端反编译之人人商城小程序分包还原\" class=\"headerlink\" title=\"小程序前端反编译之人人商城小程序分包还原\"></a>小程序前端反编译之人人商城小程序分包还原</h2><p>之前说了人人商城小程序的教程，里面没有说关于人人商城分包的事，由于原文文字已经够多了，我现在再次看感觉都有烦，所以单独写个文章吧。</p>\n<p>查看之前的：<a href=\"https://www.zhujitop.com/2058.html\" target=\"_blank\" rel=\"noopener\">微擎人人商城小程序前端反编译解包还原教程</a></p>\n<p>人人商城的拼团，秒杀之类的采用的是分包的形式，目前人人商城官方分包的有：快速购买quickbuy，秒杀seckill，拼团groups，砍价bargain，还有个raffle，但是raffle目前是空的，我之前还不知道这个文件夹是干嘛的，因为没解开看里面的文件，然后时光说这是游戏营销，估计是等待以后更新用到的。</p>\n<h3 id=\"分包文件介绍：\"><a href=\"#分包文件介绍：\" class=\"headerlink\" title=\"分包文件介绍：\"></a>分包文件介绍：</h3><p>分包.wxapkg文件第一次解出来之后有：app-service.js， page-frame.js还有pages文件夹里面的html文件</p>\n<p>app-service.js可以解出来js文件， page-frame.js可以解出来wxml文件</p>\n<p>但是没有wxss文件，在微信小程序官方介绍也说了小程序的wxml和wxss混淆了，混淆之后就是在我们提取的html文件里面。</p>\n<p>所以现在单独解pages里面的html就能把wxss提取出来。</p>\n<p>解包命令：</p>\n<p>node wuWxss.js 小程序分包名称\\pages文件夹</p>\n<p>最后整理的时候把html文件删了，如果在上传小程序的时候还提升代码包过大，就涨价整理下解包文件或者压缩下图片大小。</p>\n<p>比如我用人人商城的分包具体步骤就是：</p>\n<p>隐藏的内容：</p>\n<p>1：先解分包.wxapkg文件</p>\n<p>比如：node wuWxapkg.js _-991772207_30.wxapkg</p>\n<p>2：再分别解app-service.js和page-frame.js文件</p>\n<p>比如：node wuJs.js app-service.js</p>\n<p>3：最后就是解pages里面的html文件</p>\n<p>比如：node wuWxss.js _-991772207_30\\pages\\seckill</p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><p><a href=\"https://blog.csdn.net/qq_33858250/article/details/80543815\" target=\"_blank\" rel=\"noopener\">反编译获取任何微信小程序源码(完)</a></p>\n<p><a href=\"https://www.weipxiu.com/1887.html\" target=\"_blank\" rel=\"noopener\">反编译获取线上任何微信小程序源码（教程完结）</a></p>\n<p><a href=\"https://www.zhujitop.com/2108.html#comment-4374\" target=\"_blank\" rel=\"noopener\">小程序前端反编译之人人商城小程序分包还原</a></p>\n<p><a href=\"https://github.com/qwerty472123/wxappUnpacker\" target=\"_blank\" rel=\"noopener\">Wechat App(微信小程序,.wxapkg)解包及相关文件(.wxss,.json,.wxs,.wxml)还原工具</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"小程序反编译\"><a href=\"#小程序反编译\" class=\"headerlink\" title=\"小程序反编译\"></a>小程序反编译</h1><p>还原app-service.js用：node wuJs.js app-service.js</p>\n<p>还原page-frame.js用：node wuWxml.js page-frame.js</p>\n<p>还有个xmss文件是用：node wuWxss.js xxx</p>\n<p>隐藏的内容：</p>\n<p>1：先解分包.wxapkg文件</p>\n<p>比如：node wuWxapkg.js _-991772207_30.wxapkg</p>\n<p>2：再分别解app-service.js和page-frame.js文件</p>\n<p>比如：node wuJs.js app-service.js page-frame.js</p>\n<p>3：最后就是解pages里面的html文件</p>\n<p>比如：node wuWxss.js _-991772207_30\\pages\\seckill</p>\n<h2 id=\"小程序前端反编译之人人商城小程序分包还原\"><a href=\"#小程序前端反编译之人人商城小程序分包还原\" class=\"headerlink\" title=\"小程序前端反编译之人人商城小程序分包还原\"></a>小程序前端反编译之人人商城小程序分包还原</h2><p>之前说了人人商城小程序的教程，里面没有说关于人人商城分包的事，由于原文文字已经够多了，我现在再次看感觉都有烦，所以单独写个文章吧。</p>\n<p>查看之前的：<a href=\"https://www.zhujitop.com/2058.html\" target=\"_blank\" rel=\"noopener\">微擎人人商城小程序前端反编译解包还原教程</a></p>\n<p>人人商城的拼团，秒杀之类的采用的是分包的形式，目前人人商城官方分包的有：快速购买quickbuy，秒杀seckill，拼团groups，砍价bargain，还有个raffle，但是raffle目前是空的，我之前还不知道这个文件夹是干嘛的，因为没解开看里面的文件，然后时光说这是游戏营销，估计是等待以后更新用到的。</p>\n<h3 id=\"分包文件介绍：\"><a href=\"#分包文件介绍：\" class=\"headerlink\" title=\"分包文件介绍：\"></a>分包文件介绍：</h3><p>分包.wxapkg文件第一次解出来之后有：app-service.js， page-frame.js还有pages文件夹里面的html文件</p>\n<p>app-service.js可以解出来js文件， page-frame.js可以解出来wxml文件</p>\n<p>但是没有wxss文件，在微信小程序官方介绍也说了小程序的wxml和wxss混淆了，混淆之后就是在我们提取的html文件里面。</p>\n<p>所以现在单独解pages里面的html就能把wxss提取出来。</p>\n<p>解包命令：</p>\n<p>node wuWxss.js 小程序分包名称\\pages文件夹</p>\n<p>最后整理的时候把html文件删了，如果在上传小程序的时候还提升代码包过大，就涨价整理下解包文件或者压缩下图片大小。</p>\n<p>比如我用人人商城的分包具体步骤就是：</p>\n<p>隐藏的内容：</p>\n<p>1：先解分包.wxapkg文件</p>\n<p>比如：node wuWxapkg.js _-991772207_30.wxapkg</p>\n<p>2：再分别解app-service.js和page-frame.js文件</p>\n<p>比如：node wuJs.js app-service.js</p>\n<p>3：最后就是解pages里面的html文件</p>\n<p>比如：node wuWxss.js _-991772207_30\\pages\\seckill</p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><p><a href=\"https://blog.csdn.net/qq_33858250/article/details/80543815\" target=\"_blank\" rel=\"noopener\">反编译获取任何微信小程序源码(完)</a></p>\n<p><a href=\"https://www.weipxiu.com/1887.html\" target=\"_blank\" rel=\"noopener\">反编译获取线上任何微信小程序源码（教程完结）</a></p>\n<p><a href=\"https://www.zhujitop.com/2108.html#comment-4374\" target=\"_blank\" rel=\"noopener\">小程序前端反编译之人人商城小程序分包还原</a></p>\n<p><a href=\"https://github.com/qwerty472123/wxappUnpacker\" target=\"_blank\" rel=\"noopener\">Wechat App(微信小程序,.wxapkg)解包及相关文件(.wxss,.json,.wxs,.wxml)还原工具</a></p>\n"},{"title":"小程序开发问题集","comments":1,"abbrlink":"3f741c8d","date":"2019-03-19T14:49:23.000Z","_content":"\n目录\n\n- [Illegal Buffer报错(小程序开发解密encryptedData)](#IllegalBuffer报错(小程序开发解密encryptedData))\n  - [提出问题](#提出问题)\n- [UniApp小程序使用Echarts](#UniApp小程序使用Echarts)\n- [小程序中使用echarts-tooltip遇到的问题](#小程序中使用echarts-tooltip遇到的问题)\n- [extAppid没有授权](#extAppid没有授权);\n\n\n## Illegal Buffer报错(小程序开发解密encryptedData)\n> https://blog.csdn.net/xgangzai/article/details/90107311\n\n### 提出问题:\n最近在搞一下小程序授权登录(用户注册功能)，在密钥，appId等内容都没问题的情况下，请求授权注册接口等时候一直报错 Illegal Buffer。\n\n### 问题原因：\n在解密encryptedData数据的时候，传过来的数据里面可能会有+等符号，\n如下：\n\n```\n encryptedData: 'BQRDHWz16TcmEOkp1yV0eMd8L0a7orJeA1y8uNZycPHO41MBZmYm1jbMMh36tozePbtnbdxovStZhEbMKW9fYBpUKcXDedcChyowIXuYNic2CSItr4lv9TI47kfmBrhYE39wGE20BMtj8ORVQ2xM5A3X1uL7HHI5IZbnEqQS1W38PzGbJBW8IkybFQHXwtvigWquekDe1DmV1LA8vEFflUIjfuA5cWgGJJstzxi8bjtUMjQC/hcPRb+7pNzpo+jmtE0jU9F/a5V95lK6foYTu1ErWjEezaJ3YwujWK5oq581/b5TIL+vJPUn+vdXj71plfrH7WnSoC0ZS3yF6ToBcH17GAZsyaiGqOl88NVtkuwCA/WGMqpvnAUfromw5kaZj1QFA6U/N/lF43HdOyhjQUAkPsIMJLaHkfso6Aww0IYTcIc+qXOV8Rcrh0h61R34Dqkn11iE4mo1fmUc14ynvd4d6KXB2AvqOl+dHOd+SnRGYwTINAkPuyhxQRA/Yqj2F6MlUdKZxth73w2JEUYkoA==',\n iv: 'GcF/mmbBBQA7kJOSR9I/7w=='\n```\n\n这些符号传递给服务器就会消失，导致微信提供等解密函数一直报错。\n\n### 解决办法:\n前端在传递encryptedData和iv向量等时候需要进行encodeURIComponent编码\n\n\n## UniApp小程序使用Echarts\n\n> https://www.jianshu.com/p/5537e5053dc1\n> https://github.com/Zhuyi731/echarts-for-wx-uniapp\n\n\n### 问题？\n\n#### 1.通过uniapp打包的小程序`formatter: function` 不能用\n场景解决：通过隐藏一条`series`数据\n```\n{\n    //name,\n    type: 'line',\n    data: penData,\n    yAxisIndex: 0,\n    smooth: true,\n    symbolSize: 0, // symbol的大小设置为0\n    showSymbol: false, // 不显示symbol\n    lineStyle: {\n      width: 0, // 线宽是0\n      color: 'rgba(0, 0, 0, 0)', // 线的颜色是透明的\n    },\n},\n```\n\n## 小程序中使用echarts-tooltip遇到的问题\n\n[reference](https://github.com/ecomfe/echarts-for-weixin/issues/478)\n\n### 1、如何换行？\n\n用`\\n`换行，小程序版echarts使用富文本渲染，不支持`html`\n\n### 2、怎么显示图例的小圆点？\n\n用 formatter，彩色的圆点用 `'{marker0at0|}'`, `{marker1at0|}`, `{marker2at0|}`' 分别表示第 `0、1、2` 个系列，可能实现得不是很美，但是至少暂时可以这么用着。\n\n### 3、不支持`renderMode: html`\n\n最终解决🚀\n\n```\nformatter : function(params) {\n  // 可以打印一下params自行查看\n  let res = `${params[0].name}\\n`\n  res += `{marker0at0|} ${params[0].seriesName}: ${params[0].value[1]}\\n`\n  res += `{marker1at0|} ${params[1].seriesName}: ${params[1].value[2]}\\n`\n  res += `{marker2at0|} ${params[2].seriesName}: ${params[2].value[3]}`\n  return res\n},\n```\n\n## extAppid没有授权\n\n确保第三代平台已经授权了小程序\n`extAppid`和`appid`可以一样\n\n\n## 小程序 请求wx.requestPayment 返回支付场景非法\n\n记录一下我遇到的这个问题，先确保前端的数据有没有错，没有的话一般出现在接口的问题。\n\n后端需要排查：\n\n- openID要添加还有一个类型要改成JSAPI\n- 签名方式也要注意是不是根据文档一致\n\n## 小程序 经常报Length错误。\n\n当然页面出现`length = 0`或`length != '0'`容易出现数据类型错误","source":"_posts/小程序开发问题集.md","raw":"---\ntitle: 小程序开发问题集\ncomments: true\ncategories:\n  - 小程序\ntags:\n  - 小程序\nabbrlink: 3f741c8d\ndate: 2019-03-19 22:49:23\n---\n\n目录\n\n- [Illegal Buffer报错(小程序开发解密encryptedData)](#IllegalBuffer报错(小程序开发解密encryptedData))\n  - [提出问题](#提出问题)\n- [UniApp小程序使用Echarts](#UniApp小程序使用Echarts)\n- [小程序中使用echarts-tooltip遇到的问题](#小程序中使用echarts-tooltip遇到的问题)\n- [extAppid没有授权](#extAppid没有授权);\n\n\n## Illegal Buffer报错(小程序开发解密encryptedData)\n> https://blog.csdn.net/xgangzai/article/details/90107311\n\n### 提出问题:\n最近在搞一下小程序授权登录(用户注册功能)，在密钥，appId等内容都没问题的情况下，请求授权注册接口等时候一直报错 Illegal Buffer。\n\n### 问题原因：\n在解密encryptedData数据的时候，传过来的数据里面可能会有+等符号，\n如下：\n\n```\n encryptedData: 'BQRDHWz16TcmEOkp1yV0eMd8L0a7orJeA1y8uNZycPHO41MBZmYm1jbMMh36tozePbtnbdxovStZhEbMKW9fYBpUKcXDedcChyowIXuYNic2CSItr4lv9TI47kfmBrhYE39wGE20BMtj8ORVQ2xM5A3X1uL7HHI5IZbnEqQS1W38PzGbJBW8IkybFQHXwtvigWquekDe1DmV1LA8vEFflUIjfuA5cWgGJJstzxi8bjtUMjQC/hcPRb+7pNzpo+jmtE0jU9F/a5V95lK6foYTu1ErWjEezaJ3YwujWK5oq581/b5TIL+vJPUn+vdXj71plfrH7WnSoC0ZS3yF6ToBcH17GAZsyaiGqOl88NVtkuwCA/WGMqpvnAUfromw5kaZj1QFA6U/N/lF43HdOyhjQUAkPsIMJLaHkfso6Aww0IYTcIc+qXOV8Rcrh0h61R34Dqkn11iE4mo1fmUc14ynvd4d6KXB2AvqOl+dHOd+SnRGYwTINAkPuyhxQRA/Yqj2F6MlUdKZxth73w2JEUYkoA==',\n iv: 'GcF/mmbBBQA7kJOSR9I/7w=='\n```\n\n这些符号传递给服务器就会消失，导致微信提供等解密函数一直报错。\n\n### 解决办法:\n前端在传递encryptedData和iv向量等时候需要进行encodeURIComponent编码\n\n\n## UniApp小程序使用Echarts\n\n> https://www.jianshu.com/p/5537e5053dc1\n> https://github.com/Zhuyi731/echarts-for-wx-uniapp\n\n\n### 问题？\n\n#### 1.通过uniapp打包的小程序`formatter: function` 不能用\n场景解决：通过隐藏一条`series`数据\n```\n{\n    //name,\n    type: 'line',\n    data: penData,\n    yAxisIndex: 0,\n    smooth: true,\n    symbolSize: 0, // symbol的大小设置为0\n    showSymbol: false, // 不显示symbol\n    lineStyle: {\n      width: 0, // 线宽是0\n      color: 'rgba(0, 0, 0, 0)', // 线的颜色是透明的\n    },\n},\n```\n\n## 小程序中使用echarts-tooltip遇到的问题\n\n[reference](https://github.com/ecomfe/echarts-for-weixin/issues/478)\n\n### 1、如何换行？\n\n用`\\n`换行，小程序版echarts使用富文本渲染，不支持`html`\n\n### 2、怎么显示图例的小圆点？\n\n用 formatter，彩色的圆点用 `'{marker0at0|}'`, `{marker1at0|}`, `{marker2at0|}`' 分别表示第 `0、1、2` 个系列，可能实现得不是很美，但是至少暂时可以这么用着。\n\n### 3、不支持`renderMode: html`\n\n最终解决🚀\n\n```\nformatter : function(params) {\n  // 可以打印一下params自行查看\n  let res = `${params[0].name}\\n`\n  res += `{marker0at0|} ${params[0].seriesName}: ${params[0].value[1]}\\n`\n  res += `{marker1at0|} ${params[1].seriesName}: ${params[1].value[2]}\\n`\n  res += `{marker2at0|} ${params[2].seriesName}: ${params[2].value[3]}`\n  return res\n},\n```\n\n## extAppid没有授权\n\n确保第三代平台已经授权了小程序\n`extAppid`和`appid`可以一样\n\n\n## 小程序 请求wx.requestPayment 返回支付场景非法\n\n记录一下我遇到的这个问题，先确保前端的数据有没有错，没有的话一般出现在接口的问题。\n\n后端需要排查：\n\n- openID要添加还有一个类型要改成JSAPI\n- 签名方式也要注意是不是根据文档一致\n\n## 小程序 经常报Length错误。\n\n当然页面出现`length = 0`或`length != '0'`容易出现数据类型错误","slug":"小程序开发问题集","published":1,"updated":"2020-05-18T16:35:00.487Z","layout":"post","photos":[],"link":"","_id":"cl78qfopj0035qic9t4hnd31c","content":"<p>目录</p>\n<ul>\n<li><a href=\"#IllegalBuffer报错(小程序开发解密encryptedData\">Illegal Buffer报错(小程序开发解密encryptedData)</a>)<ul>\n<li><a href=\"#提出问题\">提出问题</a></li>\n</ul>\n</li>\n<li><a href=\"#UniApp小程序使用Echarts\">UniApp小程序使用Echarts</a></li>\n<li><a href=\"#小程序中使用echarts-tooltip遇到的问题\">小程序中使用echarts-tooltip遇到的问题</a></li>\n<li><a href=\"#extAppid没有授权\">extAppid没有授权</a>;</li>\n</ul>\n<h2 id=\"Illegal-Buffer报错-小程序开发解密encryptedData\"><a href=\"#Illegal-Buffer报错-小程序开发解密encryptedData\" class=\"headerlink\" title=\"Illegal Buffer报错(小程序开发解密encryptedData)\"></a>Illegal Buffer报错(小程序开发解密encryptedData)</h2><blockquote>\n<p><a href=\"https://blog.csdn.net/xgangzai/article/details/90107311\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/xgangzai/article/details/90107311</a></p>\n</blockquote>\n<h3 id=\"提出问题\"><a href=\"#提出问题\" class=\"headerlink\" title=\"提出问题:\"></a>提出问题:</h3><p>最近在搞一下小程序授权登录(用户注册功能)，在密钥，appId等内容都没问题的情况下，请求授权注册接口等时候一直报错 Illegal Buffer。</p>\n<h3 id=\"问题原因：\"><a href=\"#问题原因：\" class=\"headerlink\" title=\"问题原因：\"></a>问题原因：</h3><p>在解密encryptedData数据的时候，传过来的数据里面可能会有+等符号，<br>如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">encryptedData: &apos;BQRDHWz16TcmEOkp1yV0eMd8L0a7orJeA1y8uNZycPHO41MBZmYm1jbMMh36tozePbtnbdxovStZhEbMKW9fYBpUKcXDedcChyowIXuYNic2CSItr4lv9TI47kfmBrhYE39wGE20BMtj8ORVQ2xM5A3X1uL7HHI5IZbnEqQS1W38PzGbJBW8IkybFQHXwtvigWquekDe1DmV1LA8vEFflUIjfuA5cWgGJJstzxi8bjtUMjQC/hcPRb+7pNzpo+jmtE0jU9F/a5V95lK6foYTu1ErWjEezaJ3YwujWK5oq581/b5TIL+vJPUn+vdXj71plfrH7WnSoC0ZS3yF6ToBcH17GAZsyaiGqOl88NVtkuwCA/WGMqpvnAUfromw5kaZj1QFA6U/N/lF43HdOyhjQUAkPsIMJLaHkfso6Aww0IYTcIc+qXOV8Rcrh0h61R34Dqkn11iE4mo1fmUc14ynvd4d6KXB2AvqOl+dHOd+SnRGYwTINAkPuyhxQRA/Yqj2F6MlUdKZxth73w2JEUYkoA==&apos;,</span><br><span class=\"line\">iv: &apos;GcF/mmbBBQA7kJOSR9I/7w==&apos;</span><br></pre></td></tr></table></figure>\n<p>这些符号传递给服务器就会消失，导致微信提供等解密函数一直报错。</p>\n<h3 id=\"解决办法\"><a href=\"#解决办法\" class=\"headerlink\" title=\"解决办法:\"></a>解决办法:</h3><p>前端在传递encryptedData和iv向量等时候需要进行encodeURIComponent编码</p>\n<h2 id=\"UniApp小程序使用Echarts\"><a href=\"#UniApp小程序使用Echarts\" class=\"headerlink\" title=\"UniApp小程序使用Echarts\"></a>UniApp小程序使用Echarts</h2><blockquote>\n<p><a href=\"https://www.jianshu.com/p/5537e5053dc1\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/5537e5053dc1</a><br><a href=\"https://github.com/Zhuyi731/echarts-for-wx-uniapp\" target=\"_blank\" rel=\"noopener\">https://github.com/Zhuyi731/echarts-for-wx-uniapp</a></p>\n</blockquote>\n<h3 id=\"问题？\"><a href=\"#问题？\" class=\"headerlink\" title=\"问题？\"></a>问题？</h3><h4 id=\"1-通过uniapp打包的小程序formatter-function-不能用\"><a href=\"#1-通过uniapp打包的小程序formatter-function-不能用\" class=\"headerlink\" title=\"1.通过uniapp打包的小程序formatter: function 不能用\"></a>1.通过uniapp打包的小程序<code>formatter: function</code> 不能用</h4><p>场景解决：通过隐藏一条<code>series</code>数据<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    //name,</span><br><span class=\"line\">    type: &apos;line&apos;,</span><br><span class=\"line\">    data: penData,</span><br><span class=\"line\">    yAxisIndex: 0,</span><br><span class=\"line\">    smooth: true,</span><br><span class=\"line\">    symbolSize: 0, // symbol的大小设置为0</span><br><span class=\"line\">    showSymbol: false, // 不显示symbol</span><br><span class=\"line\">    lineStyle: &#123;</span><br><span class=\"line\">      width: 0, // 线宽是0</span><br><span class=\"line\">      color: &apos;rgba(0, 0, 0, 0)&apos;, // 线的颜色是透明的</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"小程序中使用echarts-tooltip遇到的问题\"><a href=\"#小程序中使用echarts-tooltip遇到的问题\" class=\"headerlink\" title=\"小程序中使用echarts-tooltip遇到的问题\"></a>小程序中使用echarts-tooltip遇到的问题</h2><p><a href=\"https://github.com/ecomfe/echarts-for-weixin/issues/478\" target=\"_blank\" rel=\"noopener\">reference</a></p>\n<h3 id=\"1、如何换行？\"><a href=\"#1、如何换行？\" class=\"headerlink\" title=\"1、如何换行？\"></a>1、如何换行？</h3><p>用<code>\\n</code>换行，小程序版echarts使用富文本渲染，不支持<code>html</code></p>\n<h3 id=\"2、怎么显示图例的小圆点？\"><a href=\"#2、怎么显示图例的小圆点？\" class=\"headerlink\" title=\"2、怎么显示图例的小圆点？\"></a>2、怎么显示图例的小圆点？</h3><p>用 formatter，彩色的圆点用 <code>&#39;{marker0at0|}&#39;</code>, <code>{marker1at0|}</code>, <code>{marker2at0|}</code>‘ 分别表示第 <code>0、1、2</code> 个系列，可能实现得不是很美，但是至少暂时可以这么用着。</p>\n<h3 id=\"3、不支持renderMode-html\"><a href=\"#3、不支持renderMode-html\" class=\"headerlink\" title=\"3、不支持renderMode: html\"></a>3、不支持<code>renderMode: html</code></h3><p>最终解决🚀</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">formatter : function(params) &#123;</span><br><span class=\"line\">  // 可以打印一下params自行查看</span><br><span class=\"line\">  let res = `$&#123;params[0].name&#125;\\n`</span><br><span class=\"line\">  res += `&#123;marker0at0|&#125; $&#123;params[0].seriesName&#125;: $&#123;params[0].value[1]&#125;\\n`</span><br><span class=\"line\">  res += `&#123;marker1at0|&#125; $&#123;params[1].seriesName&#125;: $&#123;params[1].value[2]&#125;\\n`</span><br><span class=\"line\">  res += `&#123;marker2at0|&#125; $&#123;params[2].seriesName&#125;: $&#123;params[2].value[3]&#125;`</span><br><span class=\"line\">  return res</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<h2 id=\"extAppid没有授权\"><a href=\"#extAppid没有授权\" class=\"headerlink\" title=\"extAppid没有授权\"></a>extAppid没有授权</h2><p>确保第三代平台已经授权了小程序<br><code>extAppid</code>和<code>appid</code>可以一样</p>\n<h2 id=\"小程序-请求wx-requestPayment-返回支付场景非法\"><a href=\"#小程序-请求wx-requestPayment-返回支付场景非法\" class=\"headerlink\" title=\"小程序 请求wx.requestPayment 返回支付场景非法\"></a>小程序 请求wx.requestPayment 返回支付场景非法</h2><p>记录一下我遇到的这个问题，先确保前端的数据有没有错，没有的话一般出现在接口的问题。</p>\n<p>后端需要排查：</p>\n<ul>\n<li>openID要添加还有一个类型要改成JSAPI</li>\n<li>签名方式也要注意是不是根据文档一致</li>\n</ul>\n<h2 id=\"小程序-经常报Length错误。\"><a href=\"#小程序-经常报Length错误。\" class=\"headerlink\" title=\"小程序 经常报Length错误。\"></a>小程序 经常报Length错误。</h2><p>当然页面出现<code>length = 0</code>或<code>length != &#39;0&#39;</code>容易出现数据类型错误</p>\n","site":{"data":{}},"excerpt":"","more":"<p>目录</p>\n<ul>\n<li><a href=\"#IllegalBuffer报错(小程序开发解密encryptedData\">Illegal Buffer报错(小程序开发解密encryptedData)</a>)<ul>\n<li><a href=\"#提出问题\">提出问题</a></li>\n</ul>\n</li>\n<li><a href=\"#UniApp小程序使用Echarts\">UniApp小程序使用Echarts</a></li>\n<li><a href=\"#小程序中使用echarts-tooltip遇到的问题\">小程序中使用echarts-tooltip遇到的问题</a></li>\n<li><a href=\"#extAppid没有授权\">extAppid没有授权</a>;</li>\n</ul>\n<h2 id=\"Illegal-Buffer报错-小程序开发解密encryptedData\"><a href=\"#Illegal-Buffer报错-小程序开发解密encryptedData\" class=\"headerlink\" title=\"Illegal Buffer报错(小程序开发解密encryptedData)\"></a>Illegal Buffer报错(小程序开发解密encryptedData)</h2><blockquote>\n<p><a href=\"https://blog.csdn.net/xgangzai/article/details/90107311\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/xgangzai/article/details/90107311</a></p>\n</blockquote>\n<h3 id=\"提出问题\"><a href=\"#提出问题\" class=\"headerlink\" title=\"提出问题:\"></a>提出问题:</h3><p>最近在搞一下小程序授权登录(用户注册功能)，在密钥，appId等内容都没问题的情况下，请求授权注册接口等时候一直报错 Illegal Buffer。</p>\n<h3 id=\"问题原因：\"><a href=\"#问题原因：\" class=\"headerlink\" title=\"问题原因：\"></a>问题原因：</h3><p>在解密encryptedData数据的时候，传过来的数据里面可能会有+等符号，<br>如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">encryptedData: &apos;BQRDHWz16TcmEOkp1yV0eMd8L0a7orJeA1y8uNZycPHO41MBZmYm1jbMMh36tozePbtnbdxovStZhEbMKW9fYBpUKcXDedcChyowIXuYNic2CSItr4lv9TI47kfmBrhYE39wGE20BMtj8ORVQ2xM5A3X1uL7HHI5IZbnEqQS1W38PzGbJBW8IkybFQHXwtvigWquekDe1DmV1LA8vEFflUIjfuA5cWgGJJstzxi8bjtUMjQC/hcPRb+7pNzpo+jmtE0jU9F/a5V95lK6foYTu1ErWjEezaJ3YwujWK5oq581/b5TIL+vJPUn+vdXj71plfrH7WnSoC0ZS3yF6ToBcH17GAZsyaiGqOl88NVtkuwCA/WGMqpvnAUfromw5kaZj1QFA6U/N/lF43HdOyhjQUAkPsIMJLaHkfso6Aww0IYTcIc+qXOV8Rcrh0h61R34Dqkn11iE4mo1fmUc14ynvd4d6KXB2AvqOl+dHOd+SnRGYwTINAkPuyhxQRA/Yqj2F6MlUdKZxth73w2JEUYkoA==&apos;,</span><br><span class=\"line\">iv: &apos;GcF/mmbBBQA7kJOSR9I/7w==&apos;</span><br></pre></td></tr></table></figure>\n<p>这些符号传递给服务器就会消失，导致微信提供等解密函数一直报错。</p>\n<h3 id=\"解决办法\"><a href=\"#解决办法\" class=\"headerlink\" title=\"解决办法:\"></a>解决办法:</h3><p>前端在传递encryptedData和iv向量等时候需要进行encodeURIComponent编码</p>\n<h2 id=\"UniApp小程序使用Echarts\"><a href=\"#UniApp小程序使用Echarts\" class=\"headerlink\" title=\"UniApp小程序使用Echarts\"></a>UniApp小程序使用Echarts</h2><blockquote>\n<p><a href=\"https://www.jianshu.com/p/5537e5053dc1\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/5537e5053dc1</a><br><a href=\"https://github.com/Zhuyi731/echarts-for-wx-uniapp\" target=\"_blank\" rel=\"noopener\">https://github.com/Zhuyi731/echarts-for-wx-uniapp</a></p>\n</blockquote>\n<h3 id=\"问题？\"><a href=\"#问题？\" class=\"headerlink\" title=\"问题？\"></a>问题？</h3><h4 id=\"1-通过uniapp打包的小程序formatter-function-不能用\"><a href=\"#1-通过uniapp打包的小程序formatter-function-不能用\" class=\"headerlink\" title=\"1.通过uniapp打包的小程序formatter: function 不能用\"></a>1.通过uniapp打包的小程序<code>formatter: function</code> 不能用</h4><p>场景解决：通过隐藏一条<code>series</code>数据<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    //name,</span><br><span class=\"line\">    type: &apos;line&apos;,</span><br><span class=\"line\">    data: penData,</span><br><span class=\"line\">    yAxisIndex: 0,</span><br><span class=\"line\">    smooth: true,</span><br><span class=\"line\">    symbolSize: 0, // symbol的大小设置为0</span><br><span class=\"line\">    showSymbol: false, // 不显示symbol</span><br><span class=\"line\">    lineStyle: &#123;</span><br><span class=\"line\">      width: 0, // 线宽是0</span><br><span class=\"line\">      color: &apos;rgba(0, 0, 0, 0)&apos;, // 线的颜色是透明的</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"小程序中使用echarts-tooltip遇到的问题\"><a href=\"#小程序中使用echarts-tooltip遇到的问题\" class=\"headerlink\" title=\"小程序中使用echarts-tooltip遇到的问题\"></a>小程序中使用echarts-tooltip遇到的问题</h2><p><a href=\"https://github.com/ecomfe/echarts-for-weixin/issues/478\" target=\"_blank\" rel=\"noopener\">reference</a></p>\n<h3 id=\"1、如何换行？\"><a href=\"#1、如何换行？\" class=\"headerlink\" title=\"1、如何换行？\"></a>1、如何换行？</h3><p>用<code>\\n</code>换行，小程序版echarts使用富文本渲染，不支持<code>html</code></p>\n<h3 id=\"2、怎么显示图例的小圆点？\"><a href=\"#2、怎么显示图例的小圆点？\" class=\"headerlink\" title=\"2、怎么显示图例的小圆点？\"></a>2、怎么显示图例的小圆点？</h3><p>用 formatter，彩色的圆点用 <code>&#39;{marker0at0|}&#39;</code>, <code>{marker1at0|}</code>, <code>{marker2at0|}</code>‘ 分别表示第 <code>0、1、2</code> 个系列，可能实现得不是很美，但是至少暂时可以这么用着。</p>\n<h3 id=\"3、不支持renderMode-html\"><a href=\"#3、不支持renderMode-html\" class=\"headerlink\" title=\"3、不支持renderMode: html\"></a>3、不支持<code>renderMode: html</code></h3><p>最终解决🚀</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">formatter : function(params) &#123;</span><br><span class=\"line\">  // 可以打印一下params自行查看</span><br><span class=\"line\">  let res = `$&#123;params[0].name&#125;\\n`</span><br><span class=\"line\">  res += `&#123;marker0at0|&#125; $&#123;params[0].seriesName&#125;: $&#123;params[0].value[1]&#125;\\n`</span><br><span class=\"line\">  res += `&#123;marker1at0|&#125; $&#123;params[1].seriesName&#125;: $&#123;params[1].value[2]&#125;\\n`</span><br><span class=\"line\">  res += `&#123;marker2at0|&#125; $&#123;params[2].seriesName&#125;: $&#123;params[2].value[3]&#125;`</span><br><span class=\"line\">  return res</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<h2 id=\"extAppid没有授权\"><a href=\"#extAppid没有授权\" class=\"headerlink\" title=\"extAppid没有授权\"></a>extAppid没有授权</h2><p>确保第三代平台已经授权了小程序<br><code>extAppid</code>和<code>appid</code>可以一样</p>\n<h2 id=\"小程序-请求wx-requestPayment-返回支付场景非法\"><a href=\"#小程序-请求wx-requestPayment-返回支付场景非法\" class=\"headerlink\" title=\"小程序 请求wx.requestPayment 返回支付场景非法\"></a>小程序 请求wx.requestPayment 返回支付场景非法</h2><p>记录一下我遇到的这个问题，先确保前端的数据有没有错，没有的话一般出现在接口的问题。</p>\n<p>后端需要排查：</p>\n<ul>\n<li>openID要添加还有一个类型要改成JSAPI</li>\n<li>签名方式也要注意是不是根据文档一致</li>\n</ul>\n<h2 id=\"小程序-经常报Length错误。\"><a href=\"#小程序-经常报Length错误。\" class=\"headerlink\" title=\"小程序 经常报Length错误。\"></a>小程序 经常报Length错误。</h2><p>当然页面出现<code>length = 0</code>或<code>length != &#39;0&#39;</code>容易出现数据类型错误</p>\n"},{"title":"常用Git命令清单","comments":1,"abbrlink":"724c121","date":"2018-10-02T16:16:31.000Z","_content":"\n# Git常用命令\n请前往阮一峰的文章[常用 Git 命令清单](http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html)\n\n## 增加\n - `reset`git bash 清除屏幕的方式 \n\n\n","source":"_posts/常用Git命令清单.md","raw":"---\ntitle: 常用Git命令清单\ncomments: true\ncategories:\n  - Git\ntags:\n  - Git\nabbrlink: 724c121\ndate: 2018-10-03 00:16:31\n---\n\n# Git常用命令\n请前往阮一峰的文章[常用 Git 命令清单](http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html)\n\n## 增加\n - `reset`git bash 清除屏幕的方式 \n\n\n","slug":"常用Git命令清单","published":1,"updated":"2020-05-18T16:35:00.487Z","layout":"post","photos":[],"link":"","_id":"cl78qfopl0038qic9vjwp3rqf","content":"<h1 id=\"Git常用命令\"><a href=\"#Git常用命令\" class=\"headerlink\" title=\"Git常用命令\"></a>Git常用命令</h1><p>请前往阮一峰的文章<a href=\"http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html\" target=\"_blank\" rel=\"noopener\">常用 Git 命令清单</a></p>\n<h2 id=\"增加\"><a href=\"#增加\" class=\"headerlink\" title=\"增加\"></a>增加</h2><ul>\n<li><code>reset</code>git bash 清除屏幕的方式 </li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Git常用命令\"><a href=\"#Git常用命令\" class=\"headerlink\" title=\"Git常用命令\"></a>Git常用命令</h1><p>请前往阮一峰的文章<a href=\"http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html\" target=\"_blank\" rel=\"noopener\">常用 Git 命令清单</a></p>\n<h2 id=\"增加\"><a href=\"#增加\" class=\"headerlink\" title=\"增加\"></a>增加</h2><ul>\n<li><code>reset</code>git bash 清除屏幕的方式 </li>\n</ul>\n"},{"title":"微信小程序父子组件通讯","comments":1,"abbrlink":"ada7e5ef","date":"2020-03-07T11:02:06.000Z","_content":"\n>   微信小程序父组件如何传参给子组件Component\n\n### 用法\n\n1. 父组件使用可以直接传参或者使用数据绑定向子组件动态传递数据\n组件在父组件内写法：\n```\n<component-tag-name prop-a=\"{{dataFieldA}}\" ></component-tag-name>\n```\n2. 子组件的properties属性内定义'propA'属性，给定type值，比如：\n\n```\nComponent({\n   properties: {\n       propA: {\n         type: String\n       }\n   }\n})\n```\n3. 然后在子组件js的`this.properties.propA.value`就可以访问到父组件传进的`dataFieldA`的值，或者wxml中直接按照data的使用方式，`{{ propname}}`来使用\n\n### 说明\n\n1. 父组件中传参的属性名字可以任意命名，名称符合js命名标准\n\n2. 子组件中properties与父组件同名的属性定义可以接收到父组件传进的值。如果父组件的属性名带-，需转为小驼峰形式:`prop-a ->propA`\n\n- 微信小程序文档中关于组件的properties的设置如下：\n\n```\nproperties: {\n   myProperty: { // 属性名\n     type: String, // 类型（必填），目前接受的类型包括：String, Number, Boolean, Object, Array, null（表示任意类型）\n     value: '', // 属性初始值（可选），如果未指定则会根据类型选择一个\n     observer: function(newVal, oldVal, changedPath) {\n        // 属性被改变时执行的函数（可选），也可以写成在methods段中定义的方法名字符串, 如：'_propertyChange'\n        // 通常 newVal 就是新设置的数据， oldVal 是旧数据\n     }\n   },\n   myProperty2: String // 简化的定义方式\n },\n```\n\n3.  一定不要设置value, 写成空值也不行。如果一开始设置了value，则无法传参，组件内只能访问到设置的值。\n\n\n>   子组件传值给父组件\n\n\n1. 子组件在需要传值时，使用trriggerEvent传给父组件一个事件( myevent ），并传递想要给父组件的值( sonParam )\n```\nthis.triggerEvent('myevent', {sonParam: true})\n```\n\n2. 在父组件中，子组件的引用处，通过这个myevent事件绑定一个方法( onMyEvent )\n\n \n```\n<selector bind:myevent=\"onMyEvent\"></selector>\n```\n3. 在父组件的js中，定义这个方法onMyEvent，在这个方法内就可以获取到子组件传递过来的值了\n\n```\nonMyEvent(e) {\n    console.log(e.detail.sonParam)\n}\n```","source":"_posts/微信小程序父子组件通讯.md","raw":"---\ntitle: 微信小程序父子组件通讯\ncomments: true\ncategories:\n  - 小程序\ntags:\n  - 小程序\nabbrlink: ada7e5ef\ndate: 2020-03-07 19:02:06\n---\n\n>   微信小程序父组件如何传参给子组件Component\n\n### 用法\n\n1. 父组件使用可以直接传参或者使用数据绑定向子组件动态传递数据\n组件在父组件内写法：\n```\n<component-tag-name prop-a=\"{{dataFieldA}}\" ></component-tag-name>\n```\n2. 子组件的properties属性内定义'propA'属性，给定type值，比如：\n\n```\nComponent({\n   properties: {\n       propA: {\n         type: String\n       }\n   }\n})\n```\n3. 然后在子组件js的`this.properties.propA.value`就可以访问到父组件传进的`dataFieldA`的值，或者wxml中直接按照data的使用方式，`{{ propname}}`来使用\n\n### 说明\n\n1. 父组件中传参的属性名字可以任意命名，名称符合js命名标准\n\n2. 子组件中properties与父组件同名的属性定义可以接收到父组件传进的值。如果父组件的属性名带-，需转为小驼峰形式:`prop-a ->propA`\n\n- 微信小程序文档中关于组件的properties的设置如下：\n\n```\nproperties: {\n   myProperty: { // 属性名\n     type: String, // 类型（必填），目前接受的类型包括：String, Number, Boolean, Object, Array, null（表示任意类型）\n     value: '', // 属性初始值（可选），如果未指定则会根据类型选择一个\n     observer: function(newVal, oldVal, changedPath) {\n        // 属性被改变时执行的函数（可选），也可以写成在methods段中定义的方法名字符串, 如：'_propertyChange'\n        // 通常 newVal 就是新设置的数据， oldVal 是旧数据\n     }\n   },\n   myProperty2: String // 简化的定义方式\n },\n```\n\n3.  一定不要设置value, 写成空值也不行。如果一开始设置了value，则无法传参，组件内只能访问到设置的值。\n\n\n>   子组件传值给父组件\n\n\n1. 子组件在需要传值时，使用trriggerEvent传给父组件一个事件( myevent ），并传递想要给父组件的值( sonParam )\n```\nthis.triggerEvent('myevent', {sonParam: true})\n```\n\n2. 在父组件中，子组件的引用处，通过这个myevent事件绑定一个方法( onMyEvent )\n\n \n```\n<selector bind:myevent=\"onMyEvent\"></selector>\n```\n3. 在父组件的js中，定义这个方法onMyEvent，在这个方法内就可以获取到子组件传递过来的值了\n\n```\nonMyEvent(e) {\n    console.log(e.detail.sonParam)\n}\n```","slug":"微信小程序父子组件通讯","published":1,"updated":"2020-05-18T16:35:00.487Z","layout":"post","photos":[],"link":"","_id":"cl78qfopm003aqic9wc04jn7f","content":"<blockquote>\n<p>  微信小程序父组件如何传参给子组件Component</p>\n</blockquote>\n<h3 id=\"用法\"><a href=\"#用法\" class=\"headerlink\" title=\"用法\"></a>用法</h3><ol>\n<li><p>父组件使用可以直接传参或者使用数据绑定向子组件动态传递数据<br>组件在父组件内写法：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;component-tag-name prop-a=&quot;&#123;&#123;dataFieldA&#125;&#125;&quot; &gt;&lt;/component-tag-name&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>子组件的properties属性内定义’propA’属性，给定type值，比如：</p>\n</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Component(&#123;</span><br><span class=\"line\">   properties: &#123;</span><br><span class=\"line\">       propA: &#123;</span><br><span class=\"line\">         type: String</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>然后在子组件js的<code>this.properties.propA.value</code>就可以访问到父组件传进的<code>dataFieldA</code>的值，或者wxml中直接按照data的使用方式，<code></code>来使用</li>\n</ol>\n<h3 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h3><ol>\n<li><p>父组件中传参的属性名字可以任意命名，名称符合js命名标准</p>\n</li>\n<li><p>子组件中properties与父组件同名的属性定义可以接收到父组件传进的值。如果父组件的属性名带-，需转为小驼峰形式:<code>prop-a -&gt;propA</code></p>\n</li>\n</ol>\n<ul>\n<li>微信小程序文档中关于组件的properties的设置如下：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">properties: &#123;</span><br><span class=\"line\">   myProperty: &#123; // 属性名</span><br><span class=\"line\">     type: String, // 类型（必填），目前接受的类型包括：String, Number, Boolean, Object, Array, null（表示任意类型）</span><br><span class=\"line\">     value: &apos;&apos;, // 属性初始值（可选），如果未指定则会根据类型选择一个</span><br><span class=\"line\">     observer: function(newVal, oldVal, changedPath) &#123;</span><br><span class=\"line\">        // 属性被改变时执行的函数（可选），也可以写成在methods段中定义的方法名字符串, 如：&apos;_propertyChange&apos;</span><br><span class=\"line\">        // 通常 newVal 就是新设置的数据， oldVal 是旧数据</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">   &#125;,</span><br><span class=\"line\">   myProperty2: String // 简化的定义方式</span><br><span class=\"line\"> &#125;,</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>一定不要设置value, 写成空值也不行。如果一开始设置了value，则无法传参，组件内只能访问到设置的值。</li>\n</ol>\n<blockquote>\n<p>  子组件传值给父组件</p>\n</blockquote>\n<ol>\n<li><p>子组件在需要传值时，使用trriggerEvent传给父组件一个事件( myevent ），并传递想要给父组件的值( sonParam )</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">this.triggerEvent(&apos;myevent&apos;, &#123;sonParam: true&#125;)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在父组件中，子组件的引用处，通过这个myevent事件绑定一个方法( onMyEvent )</p>\n</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;selector bind:myevent=&quot;onMyEvent&quot;&gt;&lt;/selector&gt;</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>在父组件的js中，定义这个方法onMyEvent，在这个方法内就可以获取到子组件传递过来的值了</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">onMyEvent(e) &#123;</span><br><span class=\"line\">    console.log(e.detail.sonParam)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>  微信小程序父组件如何传参给子组件Component</p>\n</blockquote>\n<h3 id=\"用法\"><a href=\"#用法\" class=\"headerlink\" title=\"用法\"></a>用法</h3><ol>\n<li><p>父组件使用可以直接传参或者使用数据绑定向子组件动态传递数据<br>组件在父组件内写法：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;component-tag-name prop-a=&quot;&#123;&#123;dataFieldA&#125;&#125;&quot; &gt;&lt;/component-tag-name&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>子组件的properties属性内定义’propA’属性，给定type值，比如：</p>\n</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Component(&#123;</span><br><span class=\"line\">   properties: &#123;</span><br><span class=\"line\">       propA: &#123;</span><br><span class=\"line\">         type: String</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>然后在子组件js的<code>this.properties.propA.value</code>就可以访问到父组件传进的<code>dataFieldA</code>的值，或者wxml中直接按照data的使用方式，<code></code>来使用</li>\n</ol>\n<h3 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h3><ol>\n<li><p>父组件中传参的属性名字可以任意命名，名称符合js命名标准</p>\n</li>\n<li><p>子组件中properties与父组件同名的属性定义可以接收到父组件传进的值。如果父组件的属性名带-，需转为小驼峰形式:<code>prop-a -&gt;propA</code></p>\n</li>\n</ol>\n<ul>\n<li>微信小程序文档中关于组件的properties的设置如下：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">properties: &#123;</span><br><span class=\"line\">   myProperty: &#123; // 属性名</span><br><span class=\"line\">     type: String, // 类型（必填），目前接受的类型包括：String, Number, Boolean, Object, Array, null（表示任意类型）</span><br><span class=\"line\">     value: &apos;&apos;, // 属性初始值（可选），如果未指定则会根据类型选择一个</span><br><span class=\"line\">     observer: function(newVal, oldVal, changedPath) &#123;</span><br><span class=\"line\">        // 属性被改变时执行的函数（可选），也可以写成在methods段中定义的方法名字符串, 如：&apos;_propertyChange&apos;</span><br><span class=\"line\">        // 通常 newVal 就是新设置的数据， oldVal 是旧数据</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">   &#125;,</span><br><span class=\"line\">   myProperty2: String // 简化的定义方式</span><br><span class=\"line\"> &#125;,</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>一定不要设置value, 写成空值也不行。如果一开始设置了value，则无法传参，组件内只能访问到设置的值。</li>\n</ol>\n<blockquote>\n<p>  子组件传值给父组件</p>\n</blockquote>\n<ol>\n<li><p>子组件在需要传值时，使用trriggerEvent传给父组件一个事件( myevent ），并传递想要给父组件的值( sonParam )</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">this.triggerEvent(&apos;myevent&apos;, &#123;sonParam: true&#125;)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在父组件中，子组件的引用处，通过这个myevent事件绑定一个方法( onMyEvent )</p>\n</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;selector bind:myevent=&quot;onMyEvent&quot;&gt;&lt;/selector&gt;</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>在父组件的js中，定义这个方法onMyEvent，在这个方法内就可以获取到子组件传递过来的值了</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">onMyEvent(e) &#123;</span><br><span class=\"line\">    console.log(e.detail.sonParam)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"正则表达式获取URL参数","comments":1,"abbrlink":"a2dbbd02","date":"2019-03-29T15:11:13.000Z","_content":"\n```javascript\n/**\n * 获取所有参数转化为数组\n */\nfunction parseQuery(url) {\n  let queryObj={};\n  let reg=/[?&]([^=&#]+)=([^&#]*)/g;\n  let querys=url.match(reg);\n  if(querys){\n    for(var i in querys){\n      let query=querys[i].split('=');\n      let key=query[0].substr(1),\n      value=query[1];\n      queryObj[key]?queryObj[key]=[].concat(queryObj[key],value):queryObj[key]=value;\n    }\n  }\n  return queryObj;\n}\n\n/**\n * 获取某个字符串\n */\nfunction getQueryByName(url,name){\n  var reg=new RegExp('[?&]'+name+'=([^&#]+)');\n  var query=url.match(reg);\n  return query?query[1]:null;\n}\n```","source":"_posts/正则表达式获取URL参数.md","raw":"---\ntitle: 正则表达式获取URL参数\ncomments: true\ncategories:\n  - JavaScript\ntags:\n  - JavaScript\n  - 正则表达式\nabbrlink: a2dbbd02\ndate: 2019-03-29 23:11:13\n---\n\n```javascript\n/**\n * 获取所有参数转化为数组\n */\nfunction parseQuery(url) {\n  let queryObj={};\n  let reg=/[?&]([^=&#]+)=([^&#]*)/g;\n  let querys=url.match(reg);\n  if(querys){\n    for(var i in querys){\n      let query=querys[i].split('=');\n      let key=query[0].substr(1),\n      value=query[1];\n      queryObj[key]?queryObj[key]=[].concat(queryObj[key],value):queryObj[key]=value;\n    }\n  }\n  return queryObj;\n}\n\n/**\n * 获取某个字符串\n */\nfunction getQueryByName(url,name){\n  var reg=new RegExp('[?&]'+name+'=([^&#]+)');\n  var query=url.match(reg);\n  return query?query[1]:null;\n}\n```","slug":"正则表达式获取URL参数","published":1,"updated":"2020-05-18T16:35:00.488Z","layout":"post","photos":[],"link":"","_id":"cl78qfopn003eqic9x4ivy3zg","content":"<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 获取所有参数转化为数组</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">parseQuery</span>(<span class=\"params\">url</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> queryObj=&#123;&#125;;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> reg=<span class=\"regexp\">/[?&amp;]([^=&amp;#]+)=([^&amp;#]*)/g</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> querys=url.match(reg);</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(querys)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i <span class=\"keyword\">in</span> querys)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> query=querys[i].split(<span class=\"string\">'='</span>);</span><br><span class=\"line\">      <span class=\"keyword\">let</span> key=query[<span class=\"number\">0</span>].substr(<span class=\"number\">1</span>),</span><br><span class=\"line\">      value=query[<span class=\"number\">1</span>];</span><br><span class=\"line\">      queryObj[key]?queryObj[key]=[].concat(queryObj[key],value):queryObj[key]=value;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> queryObj;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 获取某个字符串</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getQueryByName</span>(<span class=\"params\">url,name</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> reg=<span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(<span class=\"string\">'[?&amp;]'</span>+name+<span class=\"string\">'=([^&amp;#]+)'</span>);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> query=url.match(reg);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> query?query[<span class=\"number\">1</span>]:<span class=\"literal\">null</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 获取所有参数转化为数组</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">parseQuery</span>(<span class=\"params\">url</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> queryObj=&#123;&#125;;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> reg=<span class=\"regexp\">/[?&amp;]([^=&amp;#]+)=([^&amp;#]*)/g</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> querys=url.match(reg);</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(querys)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i <span class=\"keyword\">in</span> querys)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> query=querys[i].split(<span class=\"string\">'='</span>);</span><br><span class=\"line\">      <span class=\"keyword\">let</span> key=query[<span class=\"number\">0</span>].substr(<span class=\"number\">1</span>),</span><br><span class=\"line\">      value=query[<span class=\"number\">1</span>];</span><br><span class=\"line\">      queryObj[key]?queryObj[key]=[].concat(queryObj[key],value):queryObj[key]=value;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> queryObj;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 获取某个字符串</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getQueryByName</span>(<span class=\"params\">url,name</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> reg=<span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(<span class=\"string\">'[?&amp;]'</span>+name+<span class=\"string\">'=([^&amp;#]+)'</span>);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> query=url.match(reg);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> query?query[<span class=\"number\">1</span>]:<span class=\"literal\">null</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"网页结构命名","comments":1,"abbrlink":"34da003d","date":"2019-03-18T15:34:08.000Z","_content":"\n按功能命名：\n头：header\n内容：content/container\n页脚：footer\n导航：nav\n子导航：subnav\n侧栏：sidebar\n栏目：column\n广告条：banner\n主体：main\n左中右：left/right/center\n菜单：menu\n子菜单：submenu\n注册：register\n登陆：login\n标志：logo\n按钮：btn\n图标：icon\n热点：hot\n新闻：news\n下载：download\n搜索：search\n滚动条：scroll\n标签页：tab\n小技巧：tips\n标题：title\n加入：joinus\n文章列表：list\n注释：note\n友情链接：friendlink\n服务：service\n状态：status\n合作伙伴：partner\n摘要：summary\n版权：copyright\n指南：guid\n提示信息：msg\n\n\n按页面结构命名：\n容器：container 。就是将页面中的所有元素包在一起的部分，这部分还可以命名为：“wrapper”，“wrap”，”page”.\n页头：header。网站页面的头部部分，包含网站的logo和一些其他元素。还可以命名为“page-header”(或pageHeader).\n内容：content/container\n页面主体：main。\n页尾：footer。包含网站的一些附加信息。还可以命名为copyright。\n导航：nav。等同于横向的导航栏，还可以命名为：“navigation”，“nav-wrapper”,” navbar”.\n侧栏：sidebar。可以包含网站的次要内容，比如最近更新内容列表、关于网站的介绍或广告元素等。还可以命名为：subNav、side-panel、secondary-content。\n栏目：column","source":"_posts/网页结构命名.md","raw":"---\ntitle: 网页结构命名\ncomments: true\ncategories:\n  - HTML\ntags:\n  - HTML\nabbrlink: 34da003d\ndate: 2019-03-18 23:34:08\n---\n\n按功能命名：\n头：header\n内容：content/container\n页脚：footer\n导航：nav\n子导航：subnav\n侧栏：sidebar\n栏目：column\n广告条：banner\n主体：main\n左中右：left/right/center\n菜单：menu\n子菜单：submenu\n注册：register\n登陆：login\n标志：logo\n按钮：btn\n图标：icon\n热点：hot\n新闻：news\n下载：download\n搜索：search\n滚动条：scroll\n标签页：tab\n小技巧：tips\n标题：title\n加入：joinus\n文章列表：list\n注释：note\n友情链接：friendlink\n服务：service\n状态：status\n合作伙伴：partner\n摘要：summary\n版权：copyright\n指南：guid\n提示信息：msg\n\n\n按页面结构命名：\n容器：container 。就是将页面中的所有元素包在一起的部分，这部分还可以命名为：“wrapper”，“wrap”，”page”.\n页头：header。网站页面的头部部分，包含网站的logo和一些其他元素。还可以命名为“page-header”(或pageHeader).\n内容：content/container\n页面主体：main。\n页尾：footer。包含网站的一些附加信息。还可以命名为copyright。\n导航：nav。等同于横向的导航栏，还可以命名为：“navigation”，“nav-wrapper”,” navbar”.\n侧栏：sidebar。可以包含网站的次要内容，比如最近更新内容列表、关于网站的介绍或广告元素等。还可以命名为：subNav、side-panel、secondary-content。\n栏目：column","slug":"网页结构命名","published":1,"updated":"2020-05-18T16:35:00.488Z","layout":"post","photos":[],"link":"","_id":"cl78qfopo003gqic9dyl7xcnv","content":"<p>按功能命名：<br>头：header<br>内容：content/container<br>页脚：footer<br>导航：nav<br>子导航：subnav<br>侧栏：sidebar<br>栏目：column<br>广告条：banner<br>主体：main<br>左中右：left/right/center<br>菜单：menu<br>子菜单：submenu<br>注册：register<br>登陆：login<br>标志：logo<br>按钮：btn<br>图标：icon<br>热点：hot<br>新闻：news<br>下载：download<br>搜索：search<br>滚动条：scroll<br>标签页：tab<br>小技巧：tips<br>标题：title<br>加入：joinus<br>文章列表：list<br>注释：note<br>友情链接：friendlink<br>服务：service<br>状态：status<br>合作伙伴：partner<br>摘要：summary<br>版权：copyright<br>指南：guid<br>提示信息：msg</p>\n<p>按页面结构命名：<br>容器：container 。就是将页面中的所有元素包在一起的部分，这部分还可以命名为：“wrapper”，“wrap”，”page”.<br>页头：header。网站页面的头部部分，包含网站的logo和一些其他元素。还可以命名为“page-header”(或pageHeader).<br>内容：content/container<br>页面主体：main。<br>页尾：footer。包含网站的一些附加信息。还可以命名为copyright。<br>导航：nav。等同于横向的导航栏，还可以命名为：“navigation”，“nav-wrapper”,” navbar”.<br>侧栏：sidebar。可以包含网站的次要内容，比如最近更新内容列表、关于网站的介绍或广告元素等。还可以命名为：subNav、side-panel、secondary-content。<br>栏目：column</p>\n","site":{"data":{}},"excerpt":"","more":"<p>按功能命名：<br>头：header<br>内容：content/container<br>页脚：footer<br>导航：nav<br>子导航：subnav<br>侧栏：sidebar<br>栏目：column<br>广告条：banner<br>主体：main<br>左中右：left/right/center<br>菜单：menu<br>子菜单：submenu<br>注册：register<br>登陆：login<br>标志：logo<br>按钮：btn<br>图标：icon<br>热点：hot<br>新闻：news<br>下载：download<br>搜索：search<br>滚动条：scroll<br>标签页：tab<br>小技巧：tips<br>标题：title<br>加入：joinus<br>文章列表：list<br>注释：note<br>友情链接：friendlink<br>服务：service<br>状态：status<br>合作伙伴：partner<br>摘要：summary<br>版权：copyright<br>指南：guid<br>提示信息：msg</p>\n<p>按页面结构命名：<br>容器：container 。就是将页面中的所有元素包在一起的部分，这部分还可以命名为：“wrapper”，“wrap”，”page”.<br>页头：header。网站页面的头部部分，包含网站的logo和一些其他元素。还可以命名为“page-header”(或pageHeader).<br>内容：content/container<br>页面主体：main。<br>页尾：footer。包含网站的一些附加信息。还可以命名为copyright。<br>导航：nav。等同于横向的导航栏，还可以命名为：“navigation”，“nav-wrapper”,” navbar”.<br>侧栏：sidebar。可以包含网站的次要内容，比如最近更新内容列表、关于网站的介绍或广告元素等。还可以命名为：subNav、side-panel、secondary-content。<br>栏目：column</p>\n"},{"title":"解决微信小程序使用switchTab跳转后页面不刷新的问题","comments":1,"abbrlink":"adg7e5ef","date":"2020-04-01T11:02:06.000Z","_content":"\n```\nwx.switchTab({\n    url: '/pages/cart/index',\n    success:function () {\n        var page = getCurrentPages().pop();\n        if (page == undefined || page == null) return;\n        page.onLoad();   //重新刷新页面\n    }\n})\n```\n","source":"_posts/解决微信小程序使用switchTab跳转后页面不刷新的问题.md","raw":"---\ntitle: 解决微信小程序使用switchTab跳转后页面不刷新的问题\ncomments: true\ncategories:\n  - 小程序\ntags:\n  - 小程序\nabbrlink: adg7e5ef\ndate: 2020-04-01 19:02:06\n---\n\n```\nwx.switchTab({\n    url: '/pages/cart/index',\n    success:function () {\n        var page = getCurrentPages().pop();\n        if (page == undefined || page == null) return;\n        page.onLoad();   //重新刷新页面\n    }\n})\n```\n","slug":"解决微信小程序使用switchTab跳转后页面不刷新的问题","published":1,"updated":"2020-05-18T16:35:00.488Z","layout":"post","photos":[],"link":"","_id":"cl78qfopp003jqic939bkeg33","content":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wx.switchTab(&#123;</span><br><span class=\"line\">    url: &apos;/pages/cart/index&apos;,</span><br><span class=\"line\">    success:function () &#123;</span><br><span class=\"line\">        var page = getCurrentPages().pop();</span><br><span class=\"line\">        if (page == undefined || page == null) return;</span><br><span class=\"line\">        page.onLoad();   //重新刷新页面</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wx.switchTab(&#123;</span><br><span class=\"line\">    url: &apos;/pages/cart/index&apos;,</span><br><span class=\"line\">    success:function () &#123;</span><br><span class=\"line\">        var page = getCurrentPages().pop();</span><br><span class=\"line\">        if (page == undefined || page == null) return;</span><br><span class=\"line\">        page.onLoad();   //重新刷新页面</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n"},{"title":"Dayjs API","comments":1,"abbrlink":"adr7e5ef","date":"2019-11-02T08:02:06.000Z","_content":"\n## API\n\n> https://github.com/iamkun/dayjs/blob/master/docs/zh-cn/README.zh-CN.md\n\n`Dayjs` 并没有改变或覆盖 Javascript 原生的 `Date.prototype`， 而是创造了一个全新的包含 `Javascript Date` 对象的 `Dayjs` 的对象。\n\n`Dayjs` 对象是不可变的, 所有的 API 操作都将返回一个新的 `Dayjs` 对象。\n\n- [解析](#解析)\n  - [当前时间](#当前时间)\n  - [时间字符串](#时间字符串)\n  - [Date 对象](#date-对象)\n  - [Unix 时间戳 (毫秒)](#unix-时间戳-毫秒)\n  - [Unix 时间戳 (秒)](#unix-时间戳-秒)\n  - [自定义时间格式](#自定义时间格式)\n  - [复制](#复制)\n  - [验证](#验证)\n- [获取+设置](#获取设置)\n  - [年](#年)\n  - [月](#月)\n  - [日](#日)\n  - [星期](#星期)\n  - [时](#时)\n  - [分](#分)\n  - [秒](#秒)\n  - [毫秒](#毫秒)\n  - [获取](#获取)\n  - [设置](#设置)\n- [操作](#操作)\n  - [增加](#增加)\n  - [减少](#减少)\n  - [开头时间](#开头时间)\n  - [末尾时间](#末尾时间)\n- [显示](#显示)\n  - [格式化](#格式化)\n  - [时间差](#时间差)\n  - [Unix 时间戳 (毫秒)](#unix-时间戳-毫秒-1)\n  - [Unix 时间戳 (秒)](#unix-时间戳-秒)\n  - [UTC 偏移量 (分)](#utc-偏移量-分)\n  - [天数 (月)](#天数-月)\n  - [Date 对象](#date-对象-1)\n  - [JSON](#as-json)\n  - [ISO 8601 字符串](#iso-8601-字符串)\n  - [字符串](#字符串)\n- [查询](#查询)\n  - [是否之前](#是否之前)\n  - [是否相同](#是否相同)\n  - [是否之后](#是否之后)\n  - [是否是 Dayjs `.isDayjs()`](#是否是-dayjs-isdayjscompared-any)\n- [UTC](#utc)\n- [插件 APIs](#plugin-apis)\n\n---\n\n如果没有特别说明，Day.js 的返回值都是新的 `Dayjs` 对象。\n\n### 解析\n\n在 `dayjs()` 中传入支持的格式\n\n#### 当前时间\n\n直接运行 `dayjs()`，得到包含当前时间和日期的 `Dayjs` 对象。\n\n```js\ndayjs()\n```\n\n### 时间字符串\n\n可以解析传入的一个标准的[ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)时间字符串。\n\n```js\ndayjs(String)\ndayjs('1995-12-25')\n```\n\n### Date 对象\n\n可以解析传入的一个 Javascript Date 对象。\n\n```js\ndayjs(Date)\ndayjs(new Date(2018, 8, 18))\n```\n\n### Unix 时间戳 (毫秒)\n\n可以解析传入的一个 Unix 时间戳 (13 位数字)。\n\n```js\ndayjs(Number)\ndayjs(1318781876406)\n```\n\n### Unix 时间戳 (秒)\n\n可以解析传入的一个 Unix 时间戳 (10 位数字)。\n\n```js\ndayjs.unix(Number)\ndayjs.unix(1318781876)\n```\n\n### 自定义时间格式\n\n- 解析自定义时间格式如 `dayjs(\"12-25-1995\", \"MM-DD-YYYY\")` 可以使用插件 [`CustomParseFormat`](./Plugin.md#customparseformat)\n\n### 复制\n\n`Dayjs` 对象是不可变的，如果您想获得一个对象的拷贝，请执行 `.clone()`。\n向 `dayjs()` 里传入一个 `Dayjs` 对象也能实现同样的效果。\n\n```js\ndayjs(Dayjs)\ndayjs().clone()\n```\n\n### 验证\n\n- return Boolean\n\n检测当前 `Dayjs` 对象是否是一个有效的时间。\n\n```js\ndayjs().isValid()\n```\n\n---\n\n### 获取+设置\n\n获取和改变日期。\n\n#### 年\n\n获取或设置年份。\n\n```js\ndayjs().year()\ndayjs().year(2000)\n```\n\n#### 月\n\n获取或设置月份。从 0 开始\n\n```js\ndayjs().month()\ndayjs().month(0)\n```\n\n#### 日\n\n获取或设置日期。从 1 开始\n\n```js\ndayjs().date()\ndayjs().date(1)\n```\n\n#### 星期\n\n获取或设置星期。从星期天 0 开始\n\n```js\ndayjs().day()\ndayjs().day(0)\n```\n\n#### 时\n\n获取或设置小时。\n\n```js\ndayjs().hour()\ndayjs().hour(12)\n```\n\n#### 分\n\n获取或设置分钟。\n\n```js\ndayjs().minute()\ndayjs().minute(59)\n```\n\n#### 秒\n\n获取或设置秒。\n\n```js\ndayjs().second()\ndayjs().second(1)\n```\n\n#### 毫秒\n\n获取或设置毫秒。\n\n```js\ndayjs().millisecond()\ndayjs().millisecond(1)\n```\n\n#### 获取\n\n获取从 `Dayjs` 对象中取到的信息\n传入的单位 (unit) 对大小写不敏感。\n\n```js\ndayjs().get(unit : String)\ndayjs().get('month') // 从 0 开始\ndayjs().get('day')\n```\n\n#### 可用单位\n\n| 单位          | 缩写 | 描述                        |\n| ------------- | ---- | --------------------------- |\n| `date`        |      | 日期                        |\n| `day`         | `d`  | 星期几 (星期天 0, 星期六 6) |\n| `month`       | `M`  | 月 (一月 0, 十二月 11)      |\n| `year`        | `y`  | 年                          |\n| `hour`        | `h`  | 时                          |\n| `minute`      | `m`  | 分                          |\n| `second`      | `s`  | 秒                          |\n| `millisecond` | `ms` | 毫秒                        |\n\n#### 设置\n\n设置时间\n\n```js\ndayjs().set(unit : String, value : Int);\ndayjs().set('date', 1);\ndayjs().set('month', 3); // 四月\ndayjs().set('second', 30);\n```\n\n### 操作\n\n您可以对 `Dayjs` 对象如下增加减少之类的操作：\n\n```js\ndayjs()\n  .startOf('month')\n  .add(1, 'day')\n  .subtract(1, 'year')\n```\n\n#### 增加\n\n增加时间并返回一个新的 `Dayjs()` 对象。\n\n```js\ndayjs().add(value : Number, unit : String);\ndayjs().add(7, 'day');\n```\n\n#### 减少\n\n减少时间并返回一个新的 `Dayjs()` 对象。\n\n```js\ndayjs().subtract(value : Number, unit : String);\ndayjs().subtract(7, 'year');\n```\n\n#### 开头时间\n\n返回当前时间的开头时间的 `Dayjs()` 对象，如月份的第一天。\n\n```js\ndayjs().startOf(unit : String);\ndayjs().startOf('week'); // 取决于 locale 文件里 `weekStart` 的值\n```\n\n#### 末尾时间\n\n返回当前时间的末尾时间的 `Dayjs()` 对象，如月份的最后一天。\n\n```js\ndayjs().endOf(unit : String);\ndayjs().endOf('month');\n```\n\n---\n\n### 显示\n\n格式化 `Dayjs` 对象并展示。\n\n#### 格式化\n\n- return String\n\n接收一系列的时间日期字符串并替换成相应的值。\n\n```js\ndayjs().format(String)\ndayjs('2019-01-25').format('[YYYY] YYYY-MM-DDTHH:mm:ssZ[Z]') // 'YYYY 2019-01-25T00:00:00-02:00Z'\ndayjs().format('{YYYY} MM-DDTHH:mm:ssZ[Z]') // \"{2014} 09-08T08:02:17-05:00Z\"\n```\n\n详情如下:\n\n| 格式   | 输出             | 描述                         |\n| ------ | ---------------- | ---------------------------- |\n| `YY`   | 18               | 两位数的年份                 |\n| `YYYY` | 2018             | 四位数的年份                 |\n| `M`    | 1-12             | 月份，从 1 开始              |\n| `MM`   | 01-12            | 月份，两位数                 |\n| `MMM`  | Jan-Dec          | 简写的月份名称               |\n| `MMMM` | January-December | 完整的月份名称               |\n| `D`    | 1-31             | 月份里的一天                 |\n| `DD`   | 01-31            | 月份里的一天，两位数         |\n| `d`    | 0-6              | 一周中的一天，星期天是 0     |\n| `dd`   | Su-Sa            | 最简写的一周中一天的名称     |\n| `ddd`  | Sun-Sat          | 简写的一周中一天的名称       |\n| `dddd` | Sunday-Saturday  | 一周中一天的名称             |\n| `H`    | 0-23             | 小时                         |\n| `HH`   | 00-23            | 小时，两位数                 |\n| `h`    | 1-12             | 小时, 12 小时制              |\n| `hh`   | 01-12            | Hours, 12 小时制, 两位数     |\n| `m`    | 0-59             | 分钟                         |\n| `mm`   | 00-59            | 分钟，两位数                 |\n| `s`    | 0-59             | 秒                           |\n| `ss`   | 00-59            | 秒 两位数                    |\n| `SSS`  | 000-999          | 毫秒 三位数                  |\n| `Z`    | +05:00           | UTC 的偏移量                 |\n| `ZZ`   | +0500            | UTC 的偏移量，数字前面加上 0 |\n| `A`    | AM PM            |                              |\n| `a`    | am pm            |                              |\n\n- 更多格式化的选项 `Q Do k kk X x ...` 可以使用插件 [`AdvancedFormat`](./Plugin.md#advancedformat)\n- 本地化的长日期格式 `L LT LTS ...` 可以使用插件 [`LocalizedFormat`](./Plugin.md#localizedFormat)\n\n#### 时间差\n\n- return Number\n\n获取两个 `Dayjs` 对象的时间差，默认毫秒。\n\n```js\nconst date1 = dayjs('2019-01-25')\nconst date2 = dayjs('2018-06-05')\ndate1.diff(date2) // 20214000000\ndate1.diff(date2, 'month') // 7\ndate1.diff(date2, 'month', true) // 7.645161290322581\ndate1.diff(date2, 'day') // 233\n```\n\n#### Unix 时间戳 (毫秒)\n\n- return Number\n\n返回 Unix 时间戳 (毫秒)\n\n```js\ndayjs().valueOf()\n```\n\n#### Unix 时间戳 (秒)\n\n- return Number\n\n返回 Unix 时间戳 (秒)。\n\n```js\ndayjs().unix()\n```\n\n### UTC 偏移量 (分)\n\n返回 UTC 偏移量 (分)\n\n```js\ndayjs().utcOffset()\n```\n\n#### 天数 (月)\n\n- return Number\n\n返回月份的天数。\n\n```js\ndayjs().daysInMonth()\n```\n\n#### Date 对象\n\n- return Javascript `Date` object\n\n返回原生的 `Date` 对象。\n\n```js\ndayjs().toDate()\n```\n\n#### As JSON\n\n- return JSON String\n\n当序列化 `Dayjs` 对象时，会返回 ISO8601 格式的字符串。\n\n```js\ndayjs().toJSON() //\"2018-08-08T00:00:00.000Z\"\n```\n\n#### ISO 8601 字符串\n\n- return String\n\n返回 ISO8601 格式的字符串。\n\n```js\ndayjs().toISOString()\n```\n\n#### 字符串\n\n- return String\n\n```js\ndayjs().toString()\n```\n\n---\n\n### 查询\n\n#### 是否之前\n\n- return Boolean\n\n检查一个 `Dayjs` 对象是否在另一个 `Dayjs` 对象时间之前。\n\n```js\ndayjs().isBefore(Dayjs, unit? : String);\ndayjs().isBefore(dayjs()); // false\ndayjs().isBefore(dayjs(), 'year'); // false\n```\n\n#### 是否相同\n\n- return Boolean\n\n检查一个 `Dayjs` 对象是否和另一个 `Dayjs` 对象时间相同。\n\n```js\ndayjs().isSame(Dayjs, unit? : String);\ndayjs().isSame(dayjs()); // true\ndayjs().isSame(dayjs(), 'year'); // true\n```\n\n#### 是否之后\n\n- return Boolean\n\n检查一个 `Dayjs` 对象是否在另一个 `Dayjs` 对象时间之后。\n\n```js\ndayjs().isAfter(Dayjs, unit? : String);\ndayjs().isAfter(dayjs()); // false\ndayjs().isAfter(dayjs(), 'year'); // false\n```\n\n### 是否是 Dayjs `.isDayjs(compared: any)`\n\n返回一个 `boolean` 验证传入值是否是一个 Dayjs 对象.\n\n```js\ndayjs.isDayjs(dayjs()) // true\ndayjs.isDayjs(new Date()) // false\n```\n\n也可以使用 `instanceof`\n\n```js\ndayjs() instanceof dayjs // true\n```\n\n## UTC\n\n如果想要使用 UTC 模式来解析和展示时间，`.utc` `.local` `.isUTC` 可以使用插件 [`UTC`](./Plugin.md#utc)\n\n## 插件 APIs\n\n### 相对时间\n\n`.from` `.to` `.fromNow` `.toNow` 获得相对时间\n\n插件 [`RelativeTime`](./Plugin.md#relativetime)\n\n### 是否是闰年\n\n`.isLeapYear` 获得是否闰年\n\n插件 [`IsLeapYear`](./Plugin.md#isleapyear)\n\n### 年中的第几周\n\n`.week` 获取是第几个周\n\n插件 [`WeekOfYear`](./Plugin.md#weekofyear)\n\n### 星期\n\n`.weekday` 来获取或设置当前语言的星期\n\nplugin [`WeekDay`](./Plugin.md#weekday)\n\n### 年中有几周 ISO\n\n`.isoWeeksInYear` 获得年中有几周\n\nplugin [`IsoWeeksInYear`](./Plugin.md#isoweeksinyear)\n\n### 是否相同或之后\n\n`.isSameOrAfter` 返回一个时间和一个时间相同或在一个时间之后\n\n插件 [`IsSameOrAfter`](./Plugin.md#issameorafter)\n\n### 是否相同或之前\n\n`.isSameOrBefore` 返回一个时间是否和一个时间相同或在一个时间之前\n\n插件 [`IsSameOrBefore`](./Plugin.md#issameorbefore)\n\n### 是否之间\n\n`.isBetween` 返回一个时间是否介于两个时间之间\n\n插件 [`IsBetween`](./Plugin.md#isbetween)\n\n### 年中第几季度\n\n`.quarter` 返回年中第几季度\n\n插件 [`QuarterOfYear`](./Plugin.md#quarterofyear)\n\n### 转成数组\n\n`.toArray` 返回包含时间数值的数组。\n\n插件 [`ToArray`](./Plugin.md#toarray)\n\n### 转成对象\n\n`.toObject` 返回包含时间数值的对象\n\n插件 [`ToObject`](./Plugin.md#toobject)\n\n### 最小最大\n\n`.min` `.max` 比较传入的 dayjs 实例的大小\n\nplugin [`MinMax`](./Plugin.md#minmax)\n\n### 日历时间\n\n`.calendar` 来显示日历时间\n\nplugin [`Calendar`](./Plugin.md#calendar)\n\n### 更新语言配置\n\n`.updateLocale` 来更新语言配置的属性\n\nplugin [`UpdateLocale`](./Plugin.md#updateLocale)\n\n","source":"_posts/Dayjs API.md","raw":"---\ntitle: Dayjs API\ncomments: true\ncategories:\n  - Dayjs\ntags:\n  - Dayjs\nabbrlink: adr7e5ef\ndate: 2019-11-02 16:02:06\n---\n\n## API\n\n> https://github.com/iamkun/dayjs/blob/master/docs/zh-cn/README.zh-CN.md\n\n`Dayjs` 并没有改变或覆盖 Javascript 原生的 `Date.prototype`， 而是创造了一个全新的包含 `Javascript Date` 对象的 `Dayjs` 的对象。\n\n`Dayjs` 对象是不可变的, 所有的 API 操作都将返回一个新的 `Dayjs` 对象。\n\n- [解析](#解析)\n  - [当前时间](#当前时间)\n  - [时间字符串](#时间字符串)\n  - [Date 对象](#date-对象)\n  - [Unix 时间戳 (毫秒)](#unix-时间戳-毫秒)\n  - [Unix 时间戳 (秒)](#unix-时间戳-秒)\n  - [自定义时间格式](#自定义时间格式)\n  - [复制](#复制)\n  - [验证](#验证)\n- [获取+设置](#获取设置)\n  - [年](#年)\n  - [月](#月)\n  - [日](#日)\n  - [星期](#星期)\n  - [时](#时)\n  - [分](#分)\n  - [秒](#秒)\n  - [毫秒](#毫秒)\n  - [获取](#获取)\n  - [设置](#设置)\n- [操作](#操作)\n  - [增加](#增加)\n  - [减少](#减少)\n  - [开头时间](#开头时间)\n  - [末尾时间](#末尾时间)\n- [显示](#显示)\n  - [格式化](#格式化)\n  - [时间差](#时间差)\n  - [Unix 时间戳 (毫秒)](#unix-时间戳-毫秒-1)\n  - [Unix 时间戳 (秒)](#unix-时间戳-秒)\n  - [UTC 偏移量 (分)](#utc-偏移量-分)\n  - [天数 (月)](#天数-月)\n  - [Date 对象](#date-对象-1)\n  - [JSON](#as-json)\n  - [ISO 8601 字符串](#iso-8601-字符串)\n  - [字符串](#字符串)\n- [查询](#查询)\n  - [是否之前](#是否之前)\n  - [是否相同](#是否相同)\n  - [是否之后](#是否之后)\n  - [是否是 Dayjs `.isDayjs()`](#是否是-dayjs-isdayjscompared-any)\n- [UTC](#utc)\n- [插件 APIs](#plugin-apis)\n\n---\n\n如果没有特别说明，Day.js 的返回值都是新的 `Dayjs` 对象。\n\n### 解析\n\n在 `dayjs()` 中传入支持的格式\n\n#### 当前时间\n\n直接运行 `dayjs()`，得到包含当前时间和日期的 `Dayjs` 对象。\n\n```js\ndayjs()\n```\n\n### 时间字符串\n\n可以解析传入的一个标准的[ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)时间字符串。\n\n```js\ndayjs(String)\ndayjs('1995-12-25')\n```\n\n### Date 对象\n\n可以解析传入的一个 Javascript Date 对象。\n\n```js\ndayjs(Date)\ndayjs(new Date(2018, 8, 18))\n```\n\n### Unix 时间戳 (毫秒)\n\n可以解析传入的一个 Unix 时间戳 (13 位数字)。\n\n```js\ndayjs(Number)\ndayjs(1318781876406)\n```\n\n### Unix 时间戳 (秒)\n\n可以解析传入的一个 Unix 时间戳 (10 位数字)。\n\n```js\ndayjs.unix(Number)\ndayjs.unix(1318781876)\n```\n\n### 自定义时间格式\n\n- 解析自定义时间格式如 `dayjs(\"12-25-1995\", \"MM-DD-YYYY\")` 可以使用插件 [`CustomParseFormat`](./Plugin.md#customparseformat)\n\n### 复制\n\n`Dayjs` 对象是不可变的，如果您想获得一个对象的拷贝，请执行 `.clone()`。\n向 `dayjs()` 里传入一个 `Dayjs` 对象也能实现同样的效果。\n\n```js\ndayjs(Dayjs)\ndayjs().clone()\n```\n\n### 验证\n\n- return Boolean\n\n检测当前 `Dayjs` 对象是否是一个有效的时间。\n\n```js\ndayjs().isValid()\n```\n\n---\n\n### 获取+设置\n\n获取和改变日期。\n\n#### 年\n\n获取或设置年份。\n\n```js\ndayjs().year()\ndayjs().year(2000)\n```\n\n#### 月\n\n获取或设置月份。从 0 开始\n\n```js\ndayjs().month()\ndayjs().month(0)\n```\n\n#### 日\n\n获取或设置日期。从 1 开始\n\n```js\ndayjs().date()\ndayjs().date(1)\n```\n\n#### 星期\n\n获取或设置星期。从星期天 0 开始\n\n```js\ndayjs().day()\ndayjs().day(0)\n```\n\n#### 时\n\n获取或设置小时。\n\n```js\ndayjs().hour()\ndayjs().hour(12)\n```\n\n#### 分\n\n获取或设置分钟。\n\n```js\ndayjs().minute()\ndayjs().minute(59)\n```\n\n#### 秒\n\n获取或设置秒。\n\n```js\ndayjs().second()\ndayjs().second(1)\n```\n\n#### 毫秒\n\n获取或设置毫秒。\n\n```js\ndayjs().millisecond()\ndayjs().millisecond(1)\n```\n\n#### 获取\n\n获取从 `Dayjs` 对象中取到的信息\n传入的单位 (unit) 对大小写不敏感。\n\n```js\ndayjs().get(unit : String)\ndayjs().get('month') // 从 0 开始\ndayjs().get('day')\n```\n\n#### 可用单位\n\n| 单位          | 缩写 | 描述                        |\n| ------------- | ---- | --------------------------- |\n| `date`        |      | 日期                        |\n| `day`         | `d`  | 星期几 (星期天 0, 星期六 6) |\n| `month`       | `M`  | 月 (一月 0, 十二月 11)      |\n| `year`        | `y`  | 年                          |\n| `hour`        | `h`  | 时                          |\n| `minute`      | `m`  | 分                          |\n| `second`      | `s`  | 秒                          |\n| `millisecond` | `ms` | 毫秒                        |\n\n#### 设置\n\n设置时间\n\n```js\ndayjs().set(unit : String, value : Int);\ndayjs().set('date', 1);\ndayjs().set('month', 3); // 四月\ndayjs().set('second', 30);\n```\n\n### 操作\n\n您可以对 `Dayjs` 对象如下增加减少之类的操作：\n\n```js\ndayjs()\n  .startOf('month')\n  .add(1, 'day')\n  .subtract(1, 'year')\n```\n\n#### 增加\n\n增加时间并返回一个新的 `Dayjs()` 对象。\n\n```js\ndayjs().add(value : Number, unit : String);\ndayjs().add(7, 'day');\n```\n\n#### 减少\n\n减少时间并返回一个新的 `Dayjs()` 对象。\n\n```js\ndayjs().subtract(value : Number, unit : String);\ndayjs().subtract(7, 'year');\n```\n\n#### 开头时间\n\n返回当前时间的开头时间的 `Dayjs()` 对象，如月份的第一天。\n\n```js\ndayjs().startOf(unit : String);\ndayjs().startOf('week'); // 取决于 locale 文件里 `weekStart` 的值\n```\n\n#### 末尾时间\n\n返回当前时间的末尾时间的 `Dayjs()` 对象，如月份的最后一天。\n\n```js\ndayjs().endOf(unit : String);\ndayjs().endOf('month');\n```\n\n---\n\n### 显示\n\n格式化 `Dayjs` 对象并展示。\n\n#### 格式化\n\n- return String\n\n接收一系列的时间日期字符串并替换成相应的值。\n\n```js\ndayjs().format(String)\ndayjs('2019-01-25').format('[YYYY] YYYY-MM-DDTHH:mm:ssZ[Z]') // 'YYYY 2019-01-25T00:00:00-02:00Z'\ndayjs().format('{YYYY} MM-DDTHH:mm:ssZ[Z]') // \"{2014} 09-08T08:02:17-05:00Z\"\n```\n\n详情如下:\n\n| 格式   | 输出             | 描述                         |\n| ------ | ---------------- | ---------------------------- |\n| `YY`   | 18               | 两位数的年份                 |\n| `YYYY` | 2018             | 四位数的年份                 |\n| `M`    | 1-12             | 月份，从 1 开始              |\n| `MM`   | 01-12            | 月份，两位数                 |\n| `MMM`  | Jan-Dec          | 简写的月份名称               |\n| `MMMM` | January-December | 完整的月份名称               |\n| `D`    | 1-31             | 月份里的一天                 |\n| `DD`   | 01-31            | 月份里的一天，两位数         |\n| `d`    | 0-6              | 一周中的一天，星期天是 0     |\n| `dd`   | Su-Sa            | 最简写的一周中一天的名称     |\n| `ddd`  | Sun-Sat          | 简写的一周中一天的名称       |\n| `dddd` | Sunday-Saturday  | 一周中一天的名称             |\n| `H`    | 0-23             | 小时                         |\n| `HH`   | 00-23            | 小时，两位数                 |\n| `h`    | 1-12             | 小时, 12 小时制              |\n| `hh`   | 01-12            | Hours, 12 小时制, 两位数     |\n| `m`    | 0-59             | 分钟                         |\n| `mm`   | 00-59            | 分钟，两位数                 |\n| `s`    | 0-59             | 秒                           |\n| `ss`   | 00-59            | 秒 两位数                    |\n| `SSS`  | 000-999          | 毫秒 三位数                  |\n| `Z`    | +05:00           | UTC 的偏移量                 |\n| `ZZ`   | +0500            | UTC 的偏移量，数字前面加上 0 |\n| `A`    | AM PM            |                              |\n| `a`    | am pm            |                              |\n\n- 更多格式化的选项 `Q Do k kk X x ...` 可以使用插件 [`AdvancedFormat`](./Plugin.md#advancedformat)\n- 本地化的长日期格式 `L LT LTS ...` 可以使用插件 [`LocalizedFormat`](./Plugin.md#localizedFormat)\n\n#### 时间差\n\n- return Number\n\n获取两个 `Dayjs` 对象的时间差，默认毫秒。\n\n```js\nconst date1 = dayjs('2019-01-25')\nconst date2 = dayjs('2018-06-05')\ndate1.diff(date2) // 20214000000\ndate1.diff(date2, 'month') // 7\ndate1.diff(date2, 'month', true) // 7.645161290322581\ndate1.diff(date2, 'day') // 233\n```\n\n#### Unix 时间戳 (毫秒)\n\n- return Number\n\n返回 Unix 时间戳 (毫秒)\n\n```js\ndayjs().valueOf()\n```\n\n#### Unix 时间戳 (秒)\n\n- return Number\n\n返回 Unix 时间戳 (秒)。\n\n```js\ndayjs().unix()\n```\n\n### UTC 偏移量 (分)\n\n返回 UTC 偏移量 (分)\n\n```js\ndayjs().utcOffset()\n```\n\n#### 天数 (月)\n\n- return Number\n\n返回月份的天数。\n\n```js\ndayjs().daysInMonth()\n```\n\n#### Date 对象\n\n- return Javascript `Date` object\n\n返回原生的 `Date` 对象。\n\n```js\ndayjs().toDate()\n```\n\n#### As JSON\n\n- return JSON String\n\n当序列化 `Dayjs` 对象时，会返回 ISO8601 格式的字符串。\n\n```js\ndayjs().toJSON() //\"2018-08-08T00:00:00.000Z\"\n```\n\n#### ISO 8601 字符串\n\n- return String\n\n返回 ISO8601 格式的字符串。\n\n```js\ndayjs().toISOString()\n```\n\n#### 字符串\n\n- return String\n\n```js\ndayjs().toString()\n```\n\n---\n\n### 查询\n\n#### 是否之前\n\n- return Boolean\n\n检查一个 `Dayjs` 对象是否在另一个 `Dayjs` 对象时间之前。\n\n```js\ndayjs().isBefore(Dayjs, unit? : String);\ndayjs().isBefore(dayjs()); // false\ndayjs().isBefore(dayjs(), 'year'); // false\n```\n\n#### 是否相同\n\n- return Boolean\n\n检查一个 `Dayjs` 对象是否和另一个 `Dayjs` 对象时间相同。\n\n```js\ndayjs().isSame(Dayjs, unit? : String);\ndayjs().isSame(dayjs()); // true\ndayjs().isSame(dayjs(), 'year'); // true\n```\n\n#### 是否之后\n\n- return Boolean\n\n检查一个 `Dayjs` 对象是否在另一个 `Dayjs` 对象时间之后。\n\n```js\ndayjs().isAfter(Dayjs, unit? : String);\ndayjs().isAfter(dayjs()); // false\ndayjs().isAfter(dayjs(), 'year'); // false\n```\n\n### 是否是 Dayjs `.isDayjs(compared: any)`\n\n返回一个 `boolean` 验证传入值是否是一个 Dayjs 对象.\n\n```js\ndayjs.isDayjs(dayjs()) // true\ndayjs.isDayjs(new Date()) // false\n```\n\n也可以使用 `instanceof`\n\n```js\ndayjs() instanceof dayjs // true\n```\n\n## UTC\n\n如果想要使用 UTC 模式来解析和展示时间，`.utc` `.local` `.isUTC` 可以使用插件 [`UTC`](./Plugin.md#utc)\n\n## 插件 APIs\n\n### 相对时间\n\n`.from` `.to` `.fromNow` `.toNow` 获得相对时间\n\n插件 [`RelativeTime`](./Plugin.md#relativetime)\n\n### 是否是闰年\n\n`.isLeapYear` 获得是否闰年\n\n插件 [`IsLeapYear`](./Plugin.md#isleapyear)\n\n### 年中的第几周\n\n`.week` 获取是第几个周\n\n插件 [`WeekOfYear`](./Plugin.md#weekofyear)\n\n### 星期\n\n`.weekday` 来获取或设置当前语言的星期\n\nplugin [`WeekDay`](./Plugin.md#weekday)\n\n### 年中有几周 ISO\n\n`.isoWeeksInYear` 获得年中有几周\n\nplugin [`IsoWeeksInYear`](./Plugin.md#isoweeksinyear)\n\n### 是否相同或之后\n\n`.isSameOrAfter` 返回一个时间和一个时间相同或在一个时间之后\n\n插件 [`IsSameOrAfter`](./Plugin.md#issameorafter)\n\n### 是否相同或之前\n\n`.isSameOrBefore` 返回一个时间是否和一个时间相同或在一个时间之前\n\n插件 [`IsSameOrBefore`](./Plugin.md#issameorbefore)\n\n### 是否之间\n\n`.isBetween` 返回一个时间是否介于两个时间之间\n\n插件 [`IsBetween`](./Plugin.md#isbetween)\n\n### 年中第几季度\n\n`.quarter` 返回年中第几季度\n\n插件 [`QuarterOfYear`](./Plugin.md#quarterofyear)\n\n### 转成数组\n\n`.toArray` 返回包含时间数值的数组。\n\n插件 [`ToArray`](./Plugin.md#toarray)\n\n### 转成对象\n\n`.toObject` 返回包含时间数值的对象\n\n插件 [`ToObject`](./Plugin.md#toobject)\n\n### 最小最大\n\n`.min` `.max` 比较传入的 dayjs 实例的大小\n\nplugin [`MinMax`](./Plugin.md#minmax)\n\n### 日历时间\n\n`.calendar` 来显示日历时间\n\nplugin [`Calendar`](./Plugin.md#calendar)\n\n### 更新语言配置\n\n`.updateLocale` 来更新语言配置的属性\n\nplugin [`UpdateLocale`](./Plugin.md#updateLocale)\n\n","slug":"Dayjs API","published":1,"updated":"2020-05-18T16:35:00.477Z","layout":"post","photos":[],"link":"","_id":"cl78qfoqg006jqic9969mqwck","content":"<h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><blockquote>\n<p><a href=\"https://github.com/iamkun/dayjs/blob/master/docs/zh-cn/README.zh-CN.md\" target=\"_blank\" rel=\"noopener\">https://github.com/iamkun/dayjs/blob/master/docs/zh-cn/README.zh-CN.md</a></p>\n</blockquote>\n<p><code>Dayjs</code> 并没有改变或覆盖 Javascript 原生的 <code>Date.prototype</code>， 而是创造了一个全新的包含 <code>Javascript Date</code> 对象的 <code>Dayjs</code> 的对象。</p>\n<p><code>Dayjs</code> 对象是不可变的, 所有的 API 操作都将返回一个新的 <code>Dayjs</code> 对象。</p>\n<ul>\n<li><a href=\"#解析\">解析</a><ul>\n<li><a href=\"#当前时间\">当前时间</a></li>\n<li><a href=\"#时间字符串\">时间字符串</a></li>\n<li><a href=\"#date-对象\">Date 对象</a></li>\n<li><a href=\"#unix-时间戳-毫秒\">Unix 时间戳 (毫秒)</a></li>\n<li><a href=\"#unix-时间戳-秒\">Unix 时间戳 (秒)</a></li>\n<li><a href=\"#自定义时间格式\">自定义时间格式</a></li>\n<li><a href=\"#复制\">复制</a></li>\n<li><a href=\"#验证\">验证</a></li>\n</ul>\n</li>\n<li><a href=\"#获取设置\">获取+设置</a><ul>\n<li><a href=\"#年\">年</a></li>\n<li><a href=\"#月\">月</a></li>\n<li><a href=\"#日\">日</a></li>\n<li><a href=\"#星期\">星期</a></li>\n<li><a href=\"#时\">时</a></li>\n<li><a href=\"#分\">分</a></li>\n<li><a href=\"#秒\">秒</a></li>\n<li><a href=\"#毫秒\">毫秒</a></li>\n<li><a href=\"#获取\">获取</a></li>\n<li><a href=\"#设置\">设置</a></li>\n</ul>\n</li>\n<li><a href=\"#操作\">操作</a><ul>\n<li><a href=\"#增加\">增加</a></li>\n<li><a href=\"#减少\">减少</a></li>\n<li><a href=\"#开头时间\">开头时间</a></li>\n<li><a href=\"#末尾时间\">末尾时间</a></li>\n</ul>\n</li>\n<li><a href=\"#显示\">显示</a><ul>\n<li><a href=\"#格式化\">格式化</a></li>\n<li><a href=\"#时间差\">时间差</a></li>\n<li><a href=\"#unix-时间戳-毫秒-1\">Unix 时间戳 (毫秒)</a></li>\n<li><a href=\"#unix-时间戳-秒\">Unix 时间戳 (秒)</a></li>\n<li><a href=\"#utc-偏移量-分\">UTC 偏移量 (分)</a></li>\n<li><a href=\"#天数-月\">天数 (月)</a></li>\n<li><a href=\"#date-对象-1\">Date 对象</a></li>\n<li><a href=\"#as-json\">JSON</a></li>\n<li><a href=\"#iso-8601-字符串\">ISO 8601 字符串</a></li>\n<li><a href=\"#字符串\">字符串</a></li>\n</ul>\n</li>\n<li><a href=\"#查询\">查询</a><ul>\n<li><a href=\"#是否之前\">是否之前</a></li>\n<li><a href=\"#是否相同\">是否相同</a></li>\n<li><a href=\"#是否之后\">是否之后</a></li>\n<li><a href=\"#是否是-dayjs-isdayjscompared-any\">是否是 Dayjs <code>.isDayjs()</code></a></li>\n</ul>\n</li>\n<li><a href=\"#utc\">UTC</a></li>\n<li><a href=\"#plugin-apis\">插件 APIs</a></li>\n</ul>\n<hr>\n<p>如果没有特别说明，Day.js 的返回值都是新的 <code>Dayjs</code> 对象。</p>\n<h3 id=\"解析\"><a href=\"#解析\" class=\"headerlink\" title=\"解析\"></a>解析</h3><p>在 <code>dayjs()</code> 中传入支持的格式</p>\n<h4 id=\"当前时间\"><a href=\"#当前时间\" class=\"headerlink\" title=\"当前时间\"></a>当前时间</h4><p>直接运行 <code>dayjs()</code>，得到包含当前时间和日期的 <code>Dayjs</code> 对象。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs()</span><br></pre></td></tr></table></figure>\n<h3 id=\"时间字符串\"><a href=\"#时间字符串\" class=\"headerlink\" title=\"时间字符串\"></a>时间字符串</h3><p>可以解析传入的一个标准的<a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener\">ISO 8601</a>时间字符串。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs(<span class=\"built_in\">String</span>)</span><br><span class=\"line\">dayjs(<span class=\"string\">'1995-12-25'</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"Date-对象\"><a href=\"#Date-对象\" class=\"headerlink\" title=\"Date 对象\"></a>Date 对象</h3><p>可以解析传入的一个 Javascript Date 对象。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs(<span class=\"built_in\">Date</span>)</span><br><span class=\"line\">dayjs(<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(<span class=\"number\">2018</span>, <span class=\"number\">8</span>, <span class=\"number\">18</span>))</span><br></pre></td></tr></table></figure>\n<h3 id=\"Unix-时间戳-毫秒\"><a href=\"#Unix-时间戳-毫秒\" class=\"headerlink\" title=\"Unix 时间戳 (毫秒)\"></a>Unix 时间戳 (毫秒)</h3><p>可以解析传入的一个 Unix 时间戳 (13 位数字)。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs(<span class=\"built_in\">Number</span>)</span><br><span class=\"line\">dayjs(<span class=\"number\">1318781876406</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"Unix-时间戳-秒\"><a href=\"#Unix-时间戳-秒\" class=\"headerlink\" title=\"Unix 时间戳 (秒)\"></a>Unix 时间戳 (秒)</h3><p>可以解析传入的一个 Unix 时间戳 (10 位数字)。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs.unix(<span class=\"built_in\">Number</span>)</span><br><span class=\"line\">dayjs.unix(<span class=\"number\">1318781876</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"自定义时间格式\"><a href=\"#自定义时间格式\" class=\"headerlink\" title=\"自定义时间格式\"></a>自定义时间格式</h3><ul>\n<li>解析自定义时间格式如 <code>dayjs(&quot;12-25-1995&quot;, &quot;MM-DD-YYYY&quot;)</code> 可以使用插件 <a href=\"./Plugin.md#customparseformat\"><code>CustomParseFormat</code></a></li>\n</ul>\n<h3 id=\"复制\"><a href=\"#复制\" class=\"headerlink\" title=\"复制\"></a>复制</h3><p><code>Dayjs</code> 对象是不可变的，如果您想获得一个对象的拷贝，请执行 <code>.clone()</code>。<br>向 <code>dayjs()</code> 里传入一个 <code>Dayjs</code> 对象也能实现同样的效果。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs(Dayjs)</span><br><span class=\"line\">dayjs().clone()</span><br></pre></td></tr></table></figure>\n<h3 id=\"验证\"><a href=\"#验证\" class=\"headerlink\" title=\"验证\"></a>验证</h3><ul>\n<li>return Boolean</li>\n</ul>\n<p>检测当前 <code>Dayjs</code> 对象是否是一个有效的时间。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().isValid()</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"获取-设置\"><a href=\"#获取-设置\" class=\"headerlink\" title=\"获取+设置\"></a>获取+设置</h3><p>获取和改变日期。</p>\n<h4 id=\"年\"><a href=\"#年\" class=\"headerlink\" title=\"年\"></a>年</h4><p>获取或设置年份。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().year()</span><br><span class=\"line\">dayjs().year(<span class=\"number\">2000</span>)</span><br></pre></td></tr></table></figure>\n<h4 id=\"月\"><a href=\"#月\" class=\"headerlink\" title=\"月\"></a>月</h4><p>获取或设置月份。从 0 开始</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().month()</span><br><span class=\"line\">dayjs().month(<span class=\"number\">0</span>)</span><br></pre></td></tr></table></figure>\n<h4 id=\"日\"><a href=\"#日\" class=\"headerlink\" title=\"日\"></a>日</h4><p>获取或设置日期。从 1 开始</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().date()</span><br><span class=\"line\">dayjs().date(<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n<h4 id=\"星期\"><a href=\"#星期\" class=\"headerlink\" title=\"星期\"></a>星期</h4><p>获取或设置星期。从星期天 0 开始</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().day()</span><br><span class=\"line\">dayjs().day(<span class=\"number\">0</span>)</span><br></pre></td></tr></table></figure>\n<h4 id=\"时\"><a href=\"#时\" class=\"headerlink\" title=\"时\"></a>时</h4><p>获取或设置小时。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().hour()</span><br><span class=\"line\">dayjs().hour(<span class=\"number\">12</span>)</span><br></pre></td></tr></table></figure>\n<h4 id=\"分\"><a href=\"#分\" class=\"headerlink\" title=\"分\"></a>分</h4><p>获取或设置分钟。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().minute()</span><br><span class=\"line\">dayjs().minute(<span class=\"number\">59</span>)</span><br></pre></td></tr></table></figure>\n<h4 id=\"秒\"><a href=\"#秒\" class=\"headerlink\" title=\"秒\"></a>秒</h4><p>获取或设置秒。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().second()</span><br><span class=\"line\">dayjs().second(<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n<h4 id=\"毫秒\"><a href=\"#毫秒\" class=\"headerlink\" title=\"毫秒\"></a>毫秒</h4><p>获取或设置毫秒。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().millisecond()</span><br><span class=\"line\">dayjs().millisecond(<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n<h4 id=\"获取\"><a href=\"#获取\" class=\"headerlink\" title=\"获取\"></a>获取</h4><p>获取从 <code>Dayjs</code> 对象中取到的信息<br>传入的单位 (unit) 对大小写不敏感。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().get(unit : <span class=\"built_in\">String</span>)</span><br><span class=\"line\">dayjs().get(<span class=\"string\">'month'</span>) <span class=\"comment\">// 从 0 开始</span></span><br><span class=\"line\">dayjs().get(<span class=\"string\">'day'</span>)</span><br></pre></td></tr></table></figure>\n<h4 id=\"可用单位\"><a href=\"#可用单位\" class=\"headerlink\" title=\"可用单位\"></a>可用单位</h4><table>\n<thead>\n<tr>\n<th>单位</th>\n<th>缩写</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>date</code></td>\n<td></td>\n<td>日期</td>\n</tr>\n<tr>\n<td><code>day</code></td>\n<td><code>d</code></td>\n<td>星期几 (星期天 0, 星期六 6)</td>\n</tr>\n<tr>\n<td><code>month</code></td>\n<td><code>M</code></td>\n<td>月 (一月 0, 十二月 11)</td>\n</tr>\n<tr>\n<td><code>year</code></td>\n<td><code>y</code></td>\n<td>年</td>\n</tr>\n<tr>\n<td><code>hour</code></td>\n<td><code>h</code></td>\n<td>时</td>\n</tr>\n<tr>\n<td><code>minute</code></td>\n<td><code>m</code></td>\n<td>分</td>\n</tr>\n<tr>\n<td><code>second</code></td>\n<td><code>s</code></td>\n<td>秒</td>\n</tr>\n<tr>\n<td><code>millisecond</code></td>\n<td><code>ms</code></td>\n<td>毫秒</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"设置\"><a href=\"#设置\" class=\"headerlink\" title=\"设置\"></a>设置</h4><p>设置时间</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().set(unit : <span class=\"built_in\">String</span>, <span class=\"attr\">value</span> : Int);</span><br><span class=\"line\">dayjs().set(<span class=\"string\">'date'</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">dayjs().set(<span class=\"string\">'month'</span>, <span class=\"number\">3</span>); <span class=\"comment\">// 四月</span></span><br><span class=\"line\">dayjs().set(<span class=\"string\">'second'</span>, <span class=\"number\">30</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"操作\"><a href=\"#操作\" class=\"headerlink\" title=\"操作\"></a>操作</h3><p>您可以对 <code>Dayjs</code> 对象如下增加减少之类的操作：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs()</span><br><span class=\"line\">  .startOf(<span class=\"string\">'month'</span>)</span><br><span class=\"line\">  .add(<span class=\"number\">1</span>, <span class=\"string\">'day'</span>)</span><br><span class=\"line\">  .subtract(<span class=\"number\">1</span>, <span class=\"string\">'year'</span>)</span><br></pre></td></tr></table></figure>\n<h4 id=\"增加\"><a href=\"#增加\" class=\"headerlink\" title=\"增加\"></a>增加</h4><p>增加时间并返回一个新的 <code>Dayjs()</code> 对象。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().add(value : <span class=\"built_in\">Number</span>, <span class=\"attr\">unit</span> : <span class=\"built_in\">String</span>);</span><br><span class=\"line\">dayjs().add(<span class=\"number\">7</span>, <span class=\"string\">'day'</span>);</span><br></pre></td></tr></table></figure>\n<h4 id=\"减少\"><a href=\"#减少\" class=\"headerlink\" title=\"减少\"></a>减少</h4><p>减少时间并返回一个新的 <code>Dayjs()</code> 对象。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().subtract(value : <span class=\"built_in\">Number</span>, <span class=\"attr\">unit</span> : <span class=\"built_in\">String</span>);</span><br><span class=\"line\">dayjs().subtract(<span class=\"number\">7</span>, <span class=\"string\">'year'</span>);</span><br></pre></td></tr></table></figure>\n<h4 id=\"开头时间\"><a href=\"#开头时间\" class=\"headerlink\" title=\"开头时间\"></a>开头时间</h4><p>返回当前时间的开头时间的 <code>Dayjs()</code> 对象，如月份的第一天。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().startOf(unit : <span class=\"built_in\">String</span>);</span><br><span class=\"line\">dayjs().startOf(<span class=\"string\">'week'</span>); <span class=\"comment\">// 取决于 locale 文件里 `weekStart` 的值</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"末尾时间\"><a href=\"#末尾时间\" class=\"headerlink\" title=\"末尾时间\"></a>末尾时间</h4><p>返回当前时间的末尾时间的 <code>Dayjs()</code> 对象，如月份的最后一天。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().endOf(unit : <span class=\"built_in\">String</span>);</span><br><span class=\"line\">dayjs().endOf(<span class=\"string\">'month'</span>);</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"显示\"><a href=\"#显示\" class=\"headerlink\" title=\"显示\"></a>显示</h3><p>格式化 <code>Dayjs</code> 对象并展示。</p>\n<h4 id=\"格式化\"><a href=\"#格式化\" class=\"headerlink\" title=\"格式化\"></a>格式化</h4><ul>\n<li>return String</li>\n</ul>\n<p>接收一系列的时间日期字符串并替换成相应的值。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().format(<span class=\"built_in\">String</span>)</span><br><span class=\"line\">dayjs(<span class=\"string\">'2019-01-25'</span>).format(<span class=\"string\">'[YYYY] YYYY-MM-DDTHH:mm:ssZ[Z]'</span>) <span class=\"comment\">// 'YYYY 2019-01-25T00:00:00-02:00Z'</span></span><br><span class=\"line\">dayjs().format(<span class=\"string\">'&#123;YYYY&#125; MM-DDTHH:mm:ssZ[Z]'</span>) <span class=\"comment\">// \"&#123;2014&#125; 09-08T08:02:17-05:00Z\"</span></span><br></pre></td></tr></table></figure>\n<p>详情如下:</p>\n<table>\n<thead>\n<tr>\n<th>格式</th>\n<th>输出</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>YY</code></td>\n<td>18</td>\n<td>两位数的年份</td>\n</tr>\n<tr>\n<td><code>YYYY</code></td>\n<td>2018</td>\n<td>四位数的年份</td>\n</tr>\n<tr>\n<td><code>M</code></td>\n<td>1-12</td>\n<td>月份，从 1 开始</td>\n</tr>\n<tr>\n<td><code>MM</code></td>\n<td>01-12</td>\n<td>月份，两位数</td>\n</tr>\n<tr>\n<td><code>MMM</code></td>\n<td>Jan-Dec</td>\n<td>简写的月份名称</td>\n</tr>\n<tr>\n<td><code>MMMM</code></td>\n<td>January-December</td>\n<td>完整的月份名称</td>\n</tr>\n<tr>\n<td><code>D</code></td>\n<td>1-31</td>\n<td>月份里的一天</td>\n</tr>\n<tr>\n<td><code>DD</code></td>\n<td>01-31</td>\n<td>月份里的一天，两位数</td>\n</tr>\n<tr>\n<td><code>d</code></td>\n<td>0-6</td>\n<td>一周中的一天，星期天是 0</td>\n</tr>\n<tr>\n<td><code>dd</code></td>\n<td>Su-Sa</td>\n<td>最简写的一周中一天的名称</td>\n</tr>\n<tr>\n<td><code>ddd</code></td>\n<td>Sun-Sat</td>\n<td>简写的一周中一天的名称</td>\n</tr>\n<tr>\n<td><code>dddd</code></td>\n<td>Sunday-Saturday</td>\n<td>一周中一天的名称</td>\n</tr>\n<tr>\n<td><code>H</code></td>\n<td>0-23</td>\n<td>小时</td>\n</tr>\n<tr>\n<td><code>HH</code></td>\n<td>00-23</td>\n<td>小时，两位数</td>\n</tr>\n<tr>\n<td><code>h</code></td>\n<td>1-12</td>\n<td>小时, 12 小时制</td>\n</tr>\n<tr>\n<td><code>hh</code></td>\n<td>01-12</td>\n<td>Hours, 12 小时制, 两位数</td>\n</tr>\n<tr>\n<td><code>m</code></td>\n<td>0-59</td>\n<td>分钟</td>\n</tr>\n<tr>\n<td><code>mm</code></td>\n<td>00-59</td>\n<td>分钟，两位数</td>\n</tr>\n<tr>\n<td><code>s</code></td>\n<td>0-59</td>\n<td>秒</td>\n</tr>\n<tr>\n<td><code>ss</code></td>\n<td>00-59</td>\n<td>秒 两位数</td>\n</tr>\n<tr>\n<td><code>SSS</code></td>\n<td>000-999</td>\n<td>毫秒 三位数</td>\n</tr>\n<tr>\n<td><code>Z</code></td>\n<td>+05:00</td>\n<td>UTC 的偏移量</td>\n</tr>\n<tr>\n<td><code>ZZ</code></td>\n<td>+0500</td>\n<td>UTC 的偏移量，数字前面加上 0</td>\n</tr>\n<tr>\n<td><code>A</code></td>\n<td>AM PM</td>\n<td></td>\n</tr>\n<tr>\n<td><code>a</code></td>\n<td>am pm</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>更多格式化的选项 <code>Q Do k kk X x ...</code> 可以使用插件 <a href=\"./Plugin.md#advancedformat\"><code>AdvancedFormat</code></a></li>\n<li>本地化的长日期格式 <code>L LT LTS ...</code> 可以使用插件 <a href=\"./Plugin.md#localizedFormat\"><code>LocalizedFormat</code></a></li>\n</ul>\n<h4 id=\"时间差\"><a href=\"#时间差\" class=\"headerlink\" title=\"时间差\"></a>时间差</h4><ul>\n<li>return Number</li>\n</ul>\n<p>获取两个 <code>Dayjs</code> 对象的时间差，默认毫秒。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> date1 = dayjs(<span class=\"string\">'2019-01-25'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> date2 = dayjs(<span class=\"string\">'2018-06-05'</span>)</span><br><span class=\"line\">date1.diff(date2) <span class=\"comment\">// 20214000000</span></span><br><span class=\"line\">date1.diff(date2, <span class=\"string\">'month'</span>) <span class=\"comment\">// 7</span></span><br><span class=\"line\">date1.diff(date2, <span class=\"string\">'month'</span>, <span class=\"literal\">true</span>) <span class=\"comment\">// 7.645161290322581</span></span><br><span class=\"line\">date1.diff(date2, <span class=\"string\">'day'</span>) <span class=\"comment\">// 233</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"Unix-时间戳-毫秒-1\"><a href=\"#Unix-时间戳-毫秒-1\" class=\"headerlink\" title=\"Unix 时间戳 (毫秒)\"></a>Unix 时间戳 (毫秒)</h4><ul>\n<li>return Number</li>\n</ul>\n<p>返回 Unix 时间戳 (毫秒)</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().valueOf()</span><br></pre></td></tr></table></figure>\n<h4 id=\"Unix-时间戳-秒-1\"><a href=\"#Unix-时间戳-秒-1\" class=\"headerlink\" title=\"Unix 时间戳 (秒)\"></a>Unix 时间戳 (秒)</h4><ul>\n<li>return Number</li>\n</ul>\n<p>返回 Unix 时间戳 (秒)。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().unix()</span><br></pre></td></tr></table></figure>\n<h3 id=\"UTC-偏移量-分\"><a href=\"#UTC-偏移量-分\" class=\"headerlink\" title=\"UTC 偏移量 (分)\"></a>UTC 偏移量 (分)</h3><p>返回 UTC 偏移量 (分)</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().utcOffset()</span><br></pre></td></tr></table></figure>\n<h4 id=\"天数-月\"><a href=\"#天数-月\" class=\"headerlink\" title=\"天数 (月)\"></a>天数 (月)</h4><ul>\n<li>return Number</li>\n</ul>\n<p>返回月份的天数。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().daysInMonth()</span><br></pre></td></tr></table></figure>\n<h4 id=\"Date-对象-1\"><a href=\"#Date-对象-1\" class=\"headerlink\" title=\"Date 对象\"></a>Date 对象</h4><ul>\n<li>return Javascript <code>Date</code> object</li>\n</ul>\n<p>返回原生的 <code>Date</code> 对象。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().toDate()</span><br></pre></td></tr></table></figure>\n<h4 id=\"As-JSON\"><a href=\"#As-JSON\" class=\"headerlink\" title=\"As JSON\"></a>As JSON</h4><ul>\n<li>return JSON String</li>\n</ul>\n<p>当序列化 <code>Dayjs</code> 对象时，会返回 ISO8601 格式的字符串。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().toJSON() <span class=\"comment\">//\"2018-08-08T00:00:00.000Z\"</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"ISO-8601-字符串\"><a href=\"#ISO-8601-字符串\" class=\"headerlink\" title=\"ISO 8601 字符串\"></a>ISO 8601 字符串</h4><ul>\n<li>return String</li>\n</ul>\n<p>返回 ISO8601 格式的字符串。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().toISOString()</span><br></pre></td></tr></table></figure>\n<h4 id=\"字符串\"><a href=\"#字符串\" class=\"headerlink\" title=\"字符串\"></a>字符串</h4><ul>\n<li>return String</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().toString()</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"查询\"><a href=\"#查询\" class=\"headerlink\" title=\"查询\"></a>查询</h3><h4 id=\"是否之前\"><a href=\"#是否之前\" class=\"headerlink\" title=\"是否之前\"></a>是否之前</h4><ul>\n<li>return Boolean</li>\n</ul>\n<p>检查一个 <code>Dayjs</code> 对象是否在另一个 <code>Dayjs</code> 对象时间之前。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().isBefore(Dayjs, unit? : <span class=\"built_in\">String</span>);</span><br><span class=\"line\">dayjs().isBefore(dayjs()); <span class=\"comment\">// false</span></span><br><span class=\"line\">dayjs().isBefore(dayjs(), <span class=\"string\">'year'</span>); <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"是否相同\"><a href=\"#是否相同\" class=\"headerlink\" title=\"是否相同\"></a>是否相同</h4><ul>\n<li>return Boolean</li>\n</ul>\n<p>检查一个 <code>Dayjs</code> 对象是否和另一个 <code>Dayjs</code> 对象时间相同。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().isSame(Dayjs, unit? : <span class=\"built_in\">String</span>);</span><br><span class=\"line\">dayjs().isSame(dayjs()); <span class=\"comment\">// true</span></span><br><span class=\"line\">dayjs().isSame(dayjs(), <span class=\"string\">'year'</span>); <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"是否之后\"><a href=\"#是否之后\" class=\"headerlink\" title=\"是否之后\"></a>是否之后</h4><ul>\n<li>return Boolean</li>\n</ul>\n<p>检查一个 <code>Dayjs</code> 对象是否在另一个 <code>Dayjs</code> 对象时间之后。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().isAfter(Dayjs, unit? : <span class=\"built_in\">String</span>);</span><br><span class=\"line\">dayjs().isAfter(dayjs()); <span class=\"comment\">// false</span></span><br><span class=\"line\">dayjs().isAfter(dayjs(), <span class=\"string\">'year'</span>); <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"是否是-Dayjs-isDayjs-compared-any\"><a href=\"#是否是-Dayjs-isDayjs-compared-any\" class=\"headerlink\" title=\"是否是 Dayjs .isDayjs(compared: any)\"></a>是否是 Dayjs <code>.isDayjs(compared: any)</code></h3><p>返回一个 <code>boolean</code> 验证传入值是否是一个 Dayjs 对象.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs.isDayjs(dayjs()) <span class=\"comment\">// true</span></span><br><span class=\"line\">dayjs.isDayjs(<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>()) <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure>\n<p>也可以使用 <code>instanceof</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs() <span class=\"keyword\">instanceof</span> dayjs <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"UTC\"><a href=\"#UTC\" class=\"headerlink\" title=\"UTC\"></a>UTC</h2><p>如果想要使用 UTC 模式来解析和展示时间，<code>.utc</code> <code>.local</code> <code>.isUTC</code> 可以使用插件 <a href=\"./Plugin.md#utc\"><code>UTC</code></a></p>\n<h2 id=\"插件-APIs\"><a href=\"#插件-APIs\" class=\"headerlink\" title=\"插件 APIs\"></a>插件 APIs</h2><h3 id=\"相对时间\"><a href=\"#相对时间\" class=\"headerlink\" title=\"相对时间\"></a>相对时间</h3><p><code>.from</code> <code>.to</code> <code>.fromNow</code> <code>.toNow</code> 获得相对时间</p>\n<p>插件 <a href=\"./Plugin.md#relativetime\"><code>RelativeTime</code></a></p>\n<h3 id=\"是否是闰年\"><a href=\"#是否是闰年\" class=\"headerlink\" title=\"是否是闰年\"></a>是否是闰年</h3><p><code>.isLeapYear</code> 获得是否闰年</p>\n<p>插件 <a href=\"./Plugin.md#isleapyear\"><code>IsLeapYear</code></a></p>\n<h3 id=\"年中的第几周\"><a href=\"#年中的第几周\" class=\"headerlink\" title=\"年中的第几周\"></a>年中的第几周</h3><p><code>.week</code> 获取是第几个周</p>\n<p>插件 <a href=\"./Plugin.md#weekofyear\"><code>WeekOfYear</code></a></p>\n<h3 id=\"星期-1\"><a href=\"#星期-1\" class=\"headerlink\" title=\"星期\"></a>星期</h3><p><code>.weekday</code> 来获取或设置当前语言的星期</p>\n<p>plugin <a href=\"./Plugin.md#weekday\"><code>WeekDay</code></a></p>\n<h3 id=\"年中有几周-ISO\"><a href=\"#年中有几周-ISO\" class=\"headerlink\" title=\"年中有几周 ISO\"></a>年中有几周 ISO</h3><p><code>.isoWeeksInYear</code> 获得年中有几周</p>\n<p>plugin <a href=\"./Plugin.md#isoweeksinyear\"><code>IsoWeeksInYear</code></a></p>\n<h3 id=\"是否相同或之后\"><a href=\"#是否相同或之后\" class=\"headerlink\" title=\"是否相同或之后\"></a>是否相同或之后</h3><p><code>.isSameOrAfter</code> 返回一个时间和一个时间相同或在一个时间之后</p>\n<p>插件 <a href=\"./Plugin.md#issameorafter\"><code>IsSameOrAfter</code></a></p>\n<h3 id=\"是否相同或之前\"><a href=\"#是否相同或之前\" class=\"headerlink\" title=\"是否相同或之前\"></a>是否相同或之前</h3><p><code>.isSameOrBefore</code> 返回一个时间是否和一个时间相同或在一个时间之前</p>\n<p>插件 <a href=\"./Plugin.md#issameorbefore\"><code>IsSameOrBefore</code></a></p>\n<h3 id=\"是否之间\"><a href=\"#是否之间\" class=\"headerlink\" title=\"是否之间\"></a>是否之间</h3><p><code>.isBetween</code> 返回一个时间是否介于两个时间之间</p>\n<p>插件 <a href=\"./Plugin.md#isbetween\"><code>IsBetween</code></a></p>\n<h3 id=\"年中第几季度\"><a href=\"#年中第几季度\" class=\"headerlink\" title=\"年中第几季度\"></a>年中第几季度</h3><p><code>.quarter</code> 返回年中第几季度</p>\n<p>插件 <a href=\"./Plugin.md#quarterofyear\"><code>QuarterOfYear</code></a></p>\n<h3 id=\"转成数组\"><a href=\"#转成数组\" class=\"headerlink\" title=\"转成数组\"></a>转成数组</h3><p><code>.toArray</code> 返回包含时间数值的数组。</p>\n<p>插件 <a href=\"./Plugin.md#toarray\"><code>ToArray</code></a></p>\n<h3 id=\"转成对象\"><a href=\"#转成对象\" class=\"headerlink\" title=\"转成对象\"></a>转成对象</h3><p><code>.toObject</code> 返回包含时间数值的对象</p>\n<p>插件 <a href=\"./Plugin.md#toobject\"><code>ToObject</code></a></p>\n<h3 id=\"最小最大\"><a href=\"#最小最大\" class=\"headerlink\" title=\"最小最大\"></a>最小最大</h3><p><code>.min</code> <code>.max</code> 比较传入的 dayjs 实例的大小</p>\n<p>plugin <a href=\"./Plugin.md#minmax\"><code>MinMax</code></a></p>\n<h3 id=\"日历时间\"><a href=\"#日历时间\" class=\"headerlink\" title=\"日历时间\"></a>日历时间</h3><p><code>.calendar</code> 来显示日历时间</p>\n<p>plugin <a href=\"./Plugin.md#calendar\"><code>Calendar</code></a></p>\n<h3 id=\"更新语言配置\"><a href=\"#更新语言配置\" class=\"headerlink\" title=\"更新语言配置\"></a>更新语言配置</h3><p><code>.updateLocale</code> 来更新语言配置的属性</p>\n<p>plugin <a href=\"./Plugin.md#updateLocale\"><code>UpdateLocale</code></a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><blockquote>\n<p><a href=\"https://github.com/iamkun/dayjs/blob/master/docs/zh-cn/README.zh-CN.md\" target=\"_blank\" rel=\"noopener\">https://github.com/iamkun/dayjs/blob/master/docs/zh-cn/README.zh-CN.md</a></p>\n</blockquote>\n<p><code>Dayjs</code> 并没有改变或覆盖 Javascript 原生的 <code>Date.prototype</code>， 而是创造了一个全新的包含 <code>Javascript Date</code> 对象的 <code>Dayjs</code> 的对象。</p>\n<p><code>Dayjs</code> 对象是不可变的, 所有的 API 操作都将返回一个新的 <code>Dayjs</code> 对象。</p>\n<ul>\n<li><a href=\"#解析\">解析</a><ul>\n<li><a href=\"#当前时间\">当前时间</a></li>\n<li><a href=\"#时间字符串\">时间字符串</a></li>\n<li><a href=\"#date-对象\">Date 对象</a></li>\n<li><a href=\"#unix-时间戳-毫秒\">Unix 时间戳 (毫秒)</a></li>\n<li><a href=\"#unix-时间戳-秒\">Unix 时间戳 (秒)</a></li>\n<li><a href=\"#自定义时间格式\">自定义时间格式</a></li>\n<li><a href=\"#复制\">复制</a></li>\n<li><a href=\"#验证\">验证</a></li>\n</ul>\n</li>\n<li><a href=\"#获取设置\">获取+设置</a><ul>\n<li><a href=\"#年\">年</a></li>\n<li><a href=\"#月\">月</a></li>\n<li><a href=\"#日\">日</a></li>\n<li><a href=\"#星期\">星期</a></li>\n<li><a href=\"#时\">时</a></li>\n<li><a href=\"#分\">分</a></li>\n<li><a href=\"#秒\">秒</a></li>\n<li><a href=\"#毫秒\">毫秒</a></li>\n<li><a href=\"#获取\">获取</a></li>\n<li><a href=\"#设置\">设置</a></li>\n</ul>\n</li>\n<li><a href=\"#操作\">操作</a><ul>\n<li><a href=\"#增加\">增加</a></li>\n<li><a href=\"#减少\">减少</a></li>\n<li><a href=\"#开头时间\">开头时间</a></li>\n<li><a href=\"#末尾时间\">末尾时间</a></li>\n</ul>\n</li>\n<li><a href=\"#显示\">显示</a><ul>\n<li><a href=\"#格式化\">格式化</a></li>\n<li><a href=\"#时间差\">时间差</a></li>\n<li><a href=\"#unix-时间戳-毫秒-1\">Unix 时间戳 (毫秒)</a></li>\n<li><a href=\"#unix-时间戳-秒\">Unix 时间戳 (秒)</a></li>\n<li><a href=\"#utc-偏移量-分\">UTC 偏移量 (分)</a></li>\n<li><a href=\"#天数-月\">天数 (月)</a></li>\n<li><a href=\"#date-对象-1\">Date 对象</a></li>\n<li><a href=\"#as-json\">JSON</a></li>\n<li><a href=\"#iso-8601-字符串\">ISO 8601 字符串</a></li>\n<li><a href=\"#字符串\">字符串</a></li>\n</ul>\n</li>\n<li><a href=\"#查询\">查询</a><ul>\n<li><a href=\"#是否之前\">是否之前</a></li>\n<li><a href=\"#是否相同\">是否相同</a></li>\n<li><a href=\"#是否之后\">是否之后</a></li>\n<li><a href=\"#是否是-dayjs-isdayjscompared-any\">是否是 Dayjs <code>.isDayjs()</code></a></li>\n</ul>\n</li>\n<li><a href=\"#utc\">UTC</a></li>\n<li><a href=\"#plugin-apis\">插件 APIs</a></li>\n</ul>\n<hr>\n<p>如果没有特别说明，Day.js 的返回值都是新的 <code>Dayjs</code> 对象。</p>\n<h3 id=\"解析\"><a href=\"#解析\" class=\"headerlink\" title=\"解析\"></a>解析</h3><p>在 <code>dayjs()</code> 中传入支持的格式</p>\n<h4 id=\"当前时间\"><a href=\"#当前时间\" class=\"headerlink\" title=\"当前时间\"></a>当前时间</h4><p>直接运行 <code>dayjs()</code>，得到包含当前时间和日期的 <code>Dayjs</code> 对象。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs()</span><br></pre></td></tr></table></figure>\n<h3 id=\"时间字符串\"><a href=\"#时间字符串\" class=\"headerlink\" title=\"时间字符串\"></a>时间字符串</h3><p>可以解析传入的一个标准的<a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" rel=\"noopener\">ISO 8601</a>时间字符串。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs(<span class=\"built_in\">String</span>)</span><br><span class=\"line\">dayjs(<span class=\"string\">'1995-12-25'</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"Date-对象\"><a href=\"#Date-对象\" class=\"headerlink\" title=\"Date 对象\"></a>Date 对象</h3><p>可以解析传入的一个 Javascript Date 对象。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs(<span class=\"built_in\">Date</span>)</span><br><span class=\"line\">dayjs(<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(<span class=\"number\">2018</span>, <span class=\"number\">8</span>, <span class=\"number\">18</span>))</span><br></pre></td></tr></table></figure>\n<h3 id=\"Unix-时间戳-毫秒\"><a href=\"#Unix-时间戳-毫秒\" class=\"headerlink\" title=\"Unix 时间戳 (毫秒)\"></a>Unix 时间戳 (毫秒)</h3><p>可以解析传入的一个 Unix 时间戳 (13 位数字)。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs(<span class=\"built_in\">Number</span>)</span><br><span class=\"line\">dayjs(<span class=\"number\">1318781876406</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"Unix-时间戳-秒\"><a href=\"#Unix-时间戳-秒\" class=\"headerlink\" title=\"Unix 时间戳 (秒)\"></a>Unix 时间戳 (秒)</h3><p>可以解析传入的一个 Unix 时间戳 (10 位数字)。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs.unix(<span class=\"built_in\">Number</span>)</span><br><span class=\"line\">dayjs.unix(<span class=\"number\">1318781876</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"自定义时间格式\"><a href=\"#自定义时间格式\" class=\"headerlink\" title=\"自定义时间格式\"></a>自定义时间格式</h3><ul>\n<li>解析自定义时间格式如 <code>dayjs(&quot;12-25-1995&quot;, &quot;MM-DD-YYYY&quot;)</code> 可以使用插件 <a href=\"./Plugin.md#customparseformat\"><code>CustomParseFormat</code></a></li>\n</ul>\n<h3 id=\"复制\"><a href=\"#复制\" class=\"headerlink\" title=\"复制\"></a>复制</h3><p><code>Dayjs</code> 对象是不可变的，如果您想获得一个对象的拷贝，请执行 <code>.clone()</code>。<br>向 <code>dayjs()</code> 里传入一个 <code>Dayjs</code> 对象也能实现同样的效果。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs(Dayjs)</span><br><span class=\"line\">dayjs().clone()</span><br></pre></td></tr></table></figure>\n<h3 id=\"验证\"><a href=\"#验证\" class=\"headerlink\" title=\"验证\"></a>验证</h3><ul>\n<li>return Boolean</li>\n</ul>\n<p>检测当前 <code>Dayjs</code> 对象是否是一个有效的时间。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().isValid()</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"获取-设置\"><a href=\"#获取-设置\" class=\"headerlink\" title=\"获取+设置\"></a>获取+设置</h3><p>获取和改变日期。</p>\n<h4 id=\"年\"><a href=\"#年\" class=\"headerlink\" title=\"年\"></a>年</h4><p>获取或设置年份。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().year()</span><br><span class=\"line\">dayjs().year(<span class=\"number\">2000</span>)</span><br></pre></td></tr></table></figure>\n<h4 id=\"月\"><a href=\"#月\" class=\"headerlink\" title=\"月\"></a>月</h4><p>获取或设置月份。从 0 开始</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().month()</span><br><span class=\"line\">dayjs().month(<span class=\"number\">0</span>)</span><br></pre></td></tr></table></figure>\n<h4 id=\"日\"><a href=\"#日\" class=\"headerlink\" title=\"日\"></a>日</h4><p>获取或设置日期。从 1 开始</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().date()</span><br><span class=\"line\">dayjs().date(<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n<h4 id=\"星期\"><a href=\"#星期\" class=\"headerlink\" title=\"星期\"></a>星期</h4><p>获取或设置星期。从星期天 0 开始</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().day()</span><br><span class=\"line\">dayjs().day(<span class=\"number\">0</span>)</span><br></pre></td></tr></table></figure>\n<h4 id=\"时\"><a href=\"#时\" class=\"headerlink\" title=\"时\"></a>时</h4><p>获取或设置小时。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().hour()</span><br><span class=\"line\">dayjs().hour(<span class=\"number\">12</span>)</span><br></pre></td></tr></table></figure>\n<h4 id=\"分\"><a href=\"#分\" class=\"headerlink\" title=\"分\"></a>分</h4><p>获取或设置分钟。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().minute()</span><br><span class=\"line\">dayjs().minute(<span class=\"number\">59</span>)</span><br></pre></td></tr></table></figure>\n<h4 id=\"秒\"><a href=\"#秒\" class=\"headerlink\" title=\"秒\"></a>秒</h4><p>获取或设置秒。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().second()</span><br><span class=\"line\">dayjs().second(<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n<h4 id=\"毫秒\"><a href=\"#毫秒\" class=\"headerlink\" title=\"毫秒\"></a>毫秒</h4><p>获取或设置毫秒。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().millisecond()</span><br><span class=\"line\">dayjs().millisecond(<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n<h4 id=\"获取\"><a href=\"#获取\" class=\"headerlink\" title=\"获取\"></a>获取</h4><p>获取从 <code>Dayjs</code> 对象中取到的信息<br>传入的单位 (unit) 对大小写不敏感。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().get(unit : <span class=\"built_in\">String</span>)</span><br><span class=\"line\">dayjs().get(<span class=\"string\">'month'</span>) <span class=\"comment\">// 从 0 开始</span></span><br><span class=\"line\">dayjs().get(<span class=\"string\">'day'</span>)</span><br></pre></td></tr></table></figure>\n<h4 id=\"可用单位\"><a href=\"#可用单位\" class=\"headerlink\" title=\"可用单位\"></a>可用单位</h4><table>\n<thead>\n<tr>\n<th>单位</th>\n<th>缩写</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>date</code></td>\n<td></td>\n<td>日期</td>\n</tr>\n<tr>\n<td><code>day</code></td>\n<td><code>d</code></td>\n<td>星期几 (星期天 0, 星期六 6)</td>\n</tr>\n<tr>\n<td><code>month</code></td>\n<td><code>M</code></td>\n<td>月 (一月 0, 十二月 11)</td>\n</tr>\n<tr>\n<td><code>year</code></td>\n<td><code>y</code></td>\n<td>年</td>\n</tr>\n<tr>\n<td><code>hour</code></td>\n<td><code>h</code></td>\n<td>时</td>\n</tr>\n<tr>\n<td><code>minute</code></td>\n<td><code>m</code></td>\n<td>分</td>\n</tr>\n<tr>\n<td><code>second</code></td>\n<td><code>s</code></td>\n<td>秒</td>\n</tr>\n<tr>\n<td><code>millisecond</code></td>\n<td><code>ms</code></td>\n<td>毫秒</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"设置\"><a href=\"#设置\" class=\"headerlink\" title=\"设置\"></a>设置</h4><p>设置时间</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().set(unit : <span class=\"built_in\">String</span>, <span class=\"attr\">value</span> : Int);</span><br><span class=\"line\">dayjs().set(<span class=\"string\">'date'</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">dayjs().set(<span class=\"string\">'month'</span>, <span class=\"number\">3</span>); <span class=\"comment\">// 四月</span></span><br><span class=\"line\">dayjs().set(<span class=\"string\">'second'</span>, <span class=\"number\">30</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"操作\"><a href=\"#操作\" class=\"headerlink\" title=\"操作\"></a>操作</h3><p>您可以对 <code>Dayjs</code> 对象如下增加减少之类的操作：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs()</span><br><span class=\"line\">  .startOf(<span class=\"string\">'month'</span>)</span><br><span class=\"line\">  .add(<span class=\"number\">1</span>, <span class=\"string\">'day'</span>)</span><br><span class=\"line\">  .subtract(<span class=\"number\">1</span>, <span class=\"string\">'year'</span>)</span><br></pre></td></tr></table></figure>\n<h4 id=\"增加\"><a href=\"#增加\" class=\"headerlink\" title=\"增加\"></a>增加</h4><p>增加时间并返回一个新的 <code>Dayjs()</code> 对象。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().add(value : <span class=\"built_in\">Number</span>, <span class=\"attr\">unit</span> : <span class=\"built_in\">String</span>);</span><br><span class=\"line\">dayjs().add(<span class=\"number\">7</span>, <span class=\"string\">'day'</span>);</span><br></pre></td></tr></table></figure>\n<h4 id=\"减少\"><a href=\"#减少\" class=\"headerlink\" title=\"减少\"></a>减少</h4><p>减少时间并返回一个新的 <code>Dayjs()</code> 对象。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().subtract(value : <span class=\"built_in\">Number</span>, <span class=\"attr\">unit</span> : <span class=\"built_in\">String</span>);</span><br><span class=\"line\">dayjs().subtract(<span class=\"number\">7</span>, <span class=\"string\">'year'</span>);</span><br></pre></td></tr></table></figure>\n<h4 id=\"开头时间\"><a href=\"#开头时间\" class=\"headerlink\" title=\"开头时间\"></a>开头时间</h4><p>返回当前时间的开头时间的 <code>Dayjs()</code> 对象，如月份的第一天。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().startOf(unit : <span class=\"built_in\">String</span>);</span><br><span class=\"line\">dayjs().startOf(<span class=\"string\">'week'</span>); <span class=\"comment\">// 取决于 locale 文件里 `weekStart` 的值</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"末尾时间\"><a href=\"#末尾时间\" class=\"headerlink\" title=\"末尾时间\"></a>末尾时间</h4><p>返回当前时间的末尾时间的 <code>Dayjs()</code> 对象，如月份的最后一天。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().endOf(unit : <span class=\"built_in\">String</span>);</span><br><span class=\"line\">dayjs().endOf(<span class=\"string\">'month'</span>);</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"显示\"><a href=\"#显示\" class=\"headerlink\" title=\"显示\"></a>显示</h3><p>格式化 <code>Dayjs</code> 对象并展示。</p>\n<h4 id=\"格式化\"><a href=\"#格式化\" class=\"headerlink\" title=\"格式化\"></a>格式化</h4><ul>\n<li>return String</li>\n</ul>\n<p>接收一系列的时间日期字符串并替换成相应的值。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().format(<span class=\"built_in\">String</span>)</span><br><span class=\"line\">dayjs(<span class=\"string\">'2019-01-25'</span>).format(<span class=\"string\">'[YYYY] YYYY-MM-DDTHH:mm:ssZ[Z]'</span>) <span class=\"comment\">// 'YYYY 2019-01-25T00:00:00-02:00Z'</span></span><br><span class=\"line\">dayjs().format(<span class=\"string\">'&#123;YYYY&#125; MM-DDTHH:mm:ssZ[Z]'</span>) <span class=\"comment\">// \"&#123;2014&#125; 09-08T08:02:17-05:00Z\"</span></span><br></pre></td></tr></table></figure>\n<p>详情如下:</p>\n<table>\n<thead>\n<tr>\n<th>格式</th>\n<th>输出</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>YY</code></td>\n<td>18</td>\n<td>两位数的年份</td>\n</tr>\n<tr>\n<td><code>YYYY</code></td>\n<td>2018</td>\n<td>四位数的年份</td>\n</tr>\n<tr>\n<td><code>M</code></td>\n<td>1-12</td>\n<td>月份，从 1 开始</td>\n</tr>\n<tr>\n<td><code>MM</code></td>\n<td>01-12</td>\n<td>月份，两位数</td>\n</tr>\n<tr>\n<td><code>MMM</code></td>\n<td>Jan-Dec</td>\n<td>简写的月份名称</td>\n</tr>\n<tr>\n<td><code>MMMM</code></td>\n<td>January-December</td>\n<td>完整的月份名称</td>\n</tr>\n<tr>\n<td><code>D</code></td>\n<td>1-31</td>\n<td>月份里的一天</td>\n</tr>\n<tr>\n<td><code>DD</code></td>\n<td>01-31</td>\n<td>月份里的一天，两位数</td>\n</tr>\n<tr>\n<td><code>d</code></td>\n<td>0-6</td>\n<td>一周中的一天，星期天是 0</td>\n</tr>\n<tr>\n<td><code>dd</code></td>\n<td>Su-Sa</td>\n<td>最简写的一周中一天的名称</td>\n</tr>\n<tr>\n<td><code>ddd</code></td>\n<td>Sun-Sat</td>\n<td>简写的一周中一天的名称</td>\n</tr>\n<tr>\n<td><code>dddd</code></td>\n<td>Sunday-Saturday</td>\n<td>一周中一天的名称</td>\n</tr>\n<tr>\n<td><code>H</code></td>\n<td>0-23</td>\n<td>小时</td>\n</tr>\n<tr>\n<td><code>HH</code></td>\n<td>00-23</td>\n<td>小时，两位数</td>\n</tr>\n<tr>\n<td><code>h</code></td>\n<td>1-12</td>\n<td>小时, 12 小时制</td>\n</tr>\n<tr>\n<td><code>hh</code></td>\n<td>01-12</td>\n<td>Hours, 12 小时制, 两位数</td>\n</tr>\n<tr>\n<td><code>m</code></td>\n<td>0-59</td>\n<td>分钟</td>\n</tr>\n<tr>\n<td><code>mm</code></td>\n<td>00-59</td>\n<td>分钟，两位数</td>\n</tr>\n<tr>\n<td><code>s</code></td>\n<td>0-59</td>\n<td>秒</td>\n</tr>\n<tr>\n<td><code>ss</code></td>\n<td>00-59</td>\n<td>秒 两位数</td>\n</tr>\n<tr>\n<td><code>SSS</code></td>\n<td>000-999</td>\n<td>毫秒 三位数</td>\n</tr>\n<tr>\n<td><code>Z</code></td>\n<td>+05:00</td>\n<td>UTC 的偏移量</td>\n</tr>\n<tr>\n<td><code>ZZ</code></td>\n<td>+0500</td>\n<td>UTC 的偏移量，数字前面加上 0</td>\n</tr>\n<tr>\n<td><code>A</code></td>\n<td>AM PM</td>\n<td></td>\n</tr>\n<tr>\n<td><code>a</code></td>\n<td>am pm</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>更多格式化的选项 <code>Q Do k kk X x ...</code> 可以使用插件 <a href=\"./Plugin.md#advancedformat\"><code>AdvancedFormat</code></a></li>\n<li>本地化的长日期格式 <code>L LT LTS ...</code> 可以使用插件 <a href=\"./Plugin.md#localizedFormat\"><code>LocalizedFormat</code></a></li>\n</ul>\n<h4 id=\"时间差\"><a href=\"#时间差\" class=\"headerlink\" title=\"时间差\"></a>时间差</h4><ul>\n<li>return Number</li>\n</ul>\n<p>获取两个 <code>Dayjs</code> 对象的时间差，默认毫秒。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> date1 = dayjs(<span class=\"string\">'2019-01-25'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> date2 = dayjs(<span class=\"string\">'2018-06-05'</span>)</span><br><span class=\"line\">date1.diff(date2) <span class=\"comment\">// 20214000000</span></span><br><span class=\"line\">date1.diff(date2, <span class=\"string\">'month'</span>) <span class=\"comment\">// 7</span></span><br><span class=\"line\">date1.diff(date2, <span class=\"string\">'month'</span>, <span class=\"literal\">true</span>) <span class=\"comment\">// 7.645161290322581</span></span><br><span class=\"line\">date1.diff(date2, <span class=\"string\">'day'</span>) <span class=\"comment\">// 233</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"Unix-时间戳-毫秒-1\"><a href=\"#Unix-时间戳-毫秒-1\" class=\"headerlink\" title=\"Unix 时间戳 (毫秒)\"></a>Unix 时间戳 (毫秒)</h4><ul>\n<li>return Number</li>\n</ul>\n<p>返回 Unix 时间戳 (毫秒)</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().valueOf()</span><br></pre></td></tr></table></figure>\n<h4 id=\"Unix-时间戳-秒-1\"><a href=\"#Unix-时间戳-秒-1\" class=\"headerlink\" title=\"Unix 时间戳 (秒)\"></a>Unix 时间戳 (秒)</h4><ul>\n<li>return Number</li>\n</ul>\n<p>返回 Unix 时间戳 (秒)。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().unix()</span><br></pre></td></tr></table></figure>\n<h3 id=\"UTC-偏移量-分\"><a href=\"#UTC-偏移量-分\" class=\"headerlink\" title=\"UTC 偏移量 (分)\"></a>UTC 偏移量 (分)</h3><p>返回 UTC 偏移量 (分)</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().utcOffset()</span><br></pre></td></tr></table></figure>\n<h4 id=\"天数-月\"><a href=\"#天数-月\" class=\"headerlink\" title=\"天数 (月)\"></a>天数 (月)</h4><ul>\n<li>return Number</li>\n</ul>\n<p>返回月份的天数。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().daysInMonth()</span><br></pre></td></tr></table></figure>\n<h4 id=\"Date-对象-1\"><a href=\"#Date-对象-1\" class=\"headerlink\" title=\"Date 对象\"></a>Date 对象</h4><ul>\n<li>return Javascript <code>Date</code> object</li>\n</ul>\n<p>返回原生的 <code>Date</code> 对象。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().toDate()</span><br></pre></td></tr></table></figure>\n<h4 id=\"As-JSON\"><a href=\"#As-JSON\" class=\"headerlink\" title=\"As JSON\"></a>As JSON</h4><ul>\n<li>return JSON String</li>\n</ul>\n<p>当序列化 <code>Dayjs</code> 对象时，会返回 ISO8601 格式的字符串。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().toJSON() <span class=\"comment\">//\"2018-08-08T00:00:00.000Z\"</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"ISO-8601-字符串\"><a href=\"#ISO-8601-字符串\" class=\"headerlink\" title=\"ISO 8601 字符串\"></a>ISO 8601 字符串</h4><ul>\n<li>return String</li>\n</ul>\n<p>返回 ISO8601 格式的字符串。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().toISOString()</span><br></pre></td></tr></table></figure>\n<h4 id=\"字符串\"><a href=\"#字符串\" class=\"headerlink\" title=\"字符串\"></a>字符串</h4><ul>\n<li>return String</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().toString()</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"查询\"><a href=\"#查询\" class=\"headerlink\" title=\"查询\"></a>查询</h3><h4 id=\"是否之前\"><a href=\"#是否之前\" class=\"headerlink\" title=\"是否之前\"></a>是否之前</h4><ul>\n<li>return Boolean</li>\n</ul>\n<p>检查一个 <code>Dayjs</code> 对象是否在另一个 <code>Dayjs</code> 对象时间之前。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().isBefore(Dayjs, unit? : <span class=\"built_in\">String</span>);</span><br><span class=\"line\">dayjs().isBefore(dayjs()); <span class=\"comment\">// false</span></span><br><span class=\"line\">dayjs().isBefore(dayjs(), <span class=\"string\">'year'</span>); <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"是否相同\"><a href=\"#是否相同\" class=\"headerlink\" title=\"是否相同\"></a>是否相同</h4><ul>\n<li>return Boolean</li>\n</ul>\n<p>检查一个 <code>Dayjs</code> 对象是否和另一个 <code>Dayjs</code> 对象时间相同。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().isSame(Dayjs, unit? : <span class=\"built_in\">String</span>);</span><br><span class=\"line\">dayjs().isSame(dayjs()); <span class=\"comment\">// true</span></span><br><span class=\"line\">dayjs().isSame(dayjs(), <span class=\"string\">'year'</span>); <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"是否之后\"><a href=\"#是否之后\" class=\"headerlink\" title=\"是否之后\"></a>是否之后</h4><ul>\n<li>return Boolean</li>\n</ul>\n<p>检查一个 <code>Dayjs</code> 对象是否在另一个 <code>Dayjs</code> 对象时间之后。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs().isAfter(Dayjs, unit? : <span class=\"built_in\">String</span>);</span><br><span class=\"line\">dayjs().isAfter(dayjs()); <span class=\"comment\">// false</span></span><br><span class=\"line\">dayjs().isAfter(dayjs(), <span class=\"string\">'year'</span>); <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"是否是-Dayjs-isDayjs-compared-any\"><a href=\"#是否是-Dayjs-isDayjs-compared-any\" class=\"headerlink\" title=\"是否是 Dayjs .isDayjs(compared: any)\"></a>是否是 Dayjs <code>.isDayjs(compared: any)</code></h3><p>返回一个 <code>boolean</code> 验证传入值是否是一个 Dayjs 对象.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs.isDayjs(dayjs()) <span class=\"comment\">// true</span></span><br><span class=\"line\">dayjs.isDayjs(<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>()) <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure>\n<p>也可以使用 <code>instanceof</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs() <span class=\"keyword\">instanceof</span> dayjs <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"UTC\"><a href=\"#UTC\" class=\"headerlink\" title=\"UTC\"></a>UTC</h2><p>如果想要使用 UTC 模式来解析和展示时间，<code>.utc</code> <code>.local</code> <code>.isUTC</code> 可以使用插件 <a href=\"./Plugin.md#utc\"><code>UTC</code></a></p>\n<h2 id=\"插件-APIs\"><a href=\"#插件-APIs\" class=\"headerlink\" title=\"插件 APIs\"></a>插件 APIs</h2><h3 id=\"相对时间\"><a href=\"#相对时间\" class=\"headerlink\" title=\"相对时间\"></a>相对时间</h3><p><code>.from</code> <code>.to</code> <code>.fromNow</code> <code>.toNow</code> 获得相对时间</p>\n<p>插件 <a href=\"./Plugin.md#relativetime\"><code>RelativeTime</code></a></p>\n<h3 id=\"是否是闰年\"><a href=\"#是否是闰年\" class=\"headerlink\" title=\"是否是闰年\"></a>是否是闰年</h3><p><code>.isLeapYear</code> 获得是否闰年</p>\n<p>插件 <a href=\"./Plugin.md#isleapyear\"><code>IsLeapYear</code></a></p>\n<h3 id=\"年中的第几周\"><a href=\"#年中的第几周\" class=\"headerlink\" title=\"年中的第几周\"></a>年中的第几周</h3><p><code>.week</code> 获取是第几个周</p>\n<p>插件 <a href=\"./Plugin.md#weekofyear\"><code>WeekOfYear</code></a></p>\n<h3 id=\"星期-1\"><a href=\"#星期-1\" class=\"headerlink\" title=\"星期\"></a>星期</h3><p><code>.weekday</code> 来获取或设置当前语言的星期</p>\n<p>plugin <a href=\"./Plugin.md#weekday\"><code>WeekDay</code></a></p>\n<h3 id=\"年中有几周-ISO\"><a href=\"#年中有几周-ISO\" class=\"headerlink\" title=\"年中有几周 ISO\"></a>年中有几周 ISO</h3><p><code>.isoWeeksInYear</code> 获得年中有几周</p>\n<p>plugin <a href=\"./Plugin.md#isoweeksinyear\"><code>IsoWeeksInYear</code></a></p>\n<h3 id=\"是否相同或之后\"><a href=\"#是否相同或之后\" class=\"headerlink\" title=\"是否相同或之后\"></a>是否相同或之后</h3><p><code>.isSameOrAfter</code> 返回一个时间和一个时间相同或在一个时间之后</p>\n<p>插件 <a href=\"./Plugin.md#issameorafter\"><code>IsSameOrAfter</code></a></p>\n<h3 id=\"是否相同或之前\"><a href=\"#是否相同或之前\" class=\"headerlink\" title=\"是否相同或之前\"></a>是否相同或之前</h3><p><code>.isSameOrBefore</code> 返回一个时间是否和一个时间相同或在一个时间之前</p>\n<p>插件 <a href=\"./Plugin.md#issameorbefore\"><code>IsSameOrBefore</code></a></p>\n<h3 id=\"是否之间\"><a href=\"#是否之间\" class=\"headerlink\" title=\"是否之间\"></a>是否之间</h3><p><code>.isBetween</code> 返回一个时间是否介于两个时间之间</p>\n<p>插件 <a href=\"./Plugin.md#isbetween\"><code>IsBetween</code></a></p>\n<h3 id=\"年中第几季度\"><a href=\"#年中第几季度\" class=\"headerlink\" title=\"年中第几季度\"></a>年中第几季度</h3><p><code>.quarter</code> 返回年中第几季度</p>\n<p>插件 <a href=\"./Plugin.md#quarterofyear\"><code>QuarterOfYear</code></a></p>\n<h3 id=\"转成数组\"><a href=\"#转成数组\" class=\"headerlink\" title=\"转成数组\"></a>转成数组</h3><p><code>.toArray</code> 返回包含时间数值的数组。</p>\n<p>插件 <a href=\"./Plugin.md#toarray\"><code>ToArray</code></a></p>\n<h3 id=\"转成对象\"><a href=\"#转成对象\" class=\"headerlink\" title=\"转成对象\"></a>转成对象</h3><p><code>.toObject</code> 返回包含时间数值的对象</p>\n<p>插件 <a href=\"./Plugin.md#toobject\"><code>ToObject</code></a></p>\n<h3 id=\"最小最大\"><a href=\"#最小最大\" class=\"headerlink\" title=\"最小最大\"></a>最小最大</h3><p><code>.min</code> <code>.max</code> 比较传入的 dayjs 实例的大小</p>\n<p>plugin <a href=\"./Plugin.md#minmax\"><code>MinMax</code></a></p>\n<h3 id=\"日历时间\"><a href=\"#日历时间\" class=\"headerlink\" title=\"日历时间\"></a>日历时间</h3><p><code>.calendar</code> 来显示日历时间</p>\n<p>plugin <a href=\"./Plugin.md#calendar\"><code>Calendar</code></a></p>\n<h3 id=\"更新语言配置\"><a href=\"#更新语言配置\" class=\"headerlink\" title=\"更新语言配置\"></a>更新语言配置</h3><p><code>.updateLocale</code> 来更新语言配置的属性</p>\n<p>plugin <a href=\"./Plugin.md#updateLocale\"><code>UpdateLocale</code></a></p>\n"},{"title":"ag-grid","comments":1,"abbrlink":"ady7e5ef","date":"2020-02-09T02:02:06.000Z","_content":"\n## 0. 项目简介\n\n> ag-Grid comes in two forms: ag-Grid Community (free for everyone, including production use) and ag-Grid Enterprise (you need a license to use).\n\n简单来说就是`ag-Grid`有社区版和企业版两种，社区版面向全体人员，而企业版则只允许在开发环境使用。它可应用于`Angular`、`React`、`Vue`，由于我们项目使用到的是`Vue`，所以只从`Vue`的部分简单介绍。\n\n## 1. 相关依赖\n\n要想使用`ag-Grid`，相关的依赖自然是不可避免的，完整的依赖如下：\n\n+ `@ag-grid-community/all-modules`：社区版的全部模块\n+ `@ag-grid-community/vue`：提供 vue 支持\n+ `@ag-grid-enterprise/all-modules`：企业版的全部模块\n+ `@ag-grid-enterprise/core`：ag-Grid 核心逻辑\n+ `vue-property-decorator`：作为 @ag-grid-community/vue 的依赖引入\n\n## 2. 使用介绍\n\n我节选了一段品牌商中使用到较全面的代码来介绍一下日常使用是什么样子：\n\n```vue\n<ag-grid-vue\n  style=\"height: 632px;\"\n  class=\"ag-theme-balham\"\n  :columnDefs=\"columnsAg\"\n  :rowData=\"dataList\"\n  :suppressDragLeaveHidesColumns=\"true\"\n  :defaultColDef=\"defaultColDef\"\n  :enableCharts=\"true\"\n  :enableRangeSelection=\"true\"\n  :modules=\"modules\"\n  :getContextMenuItems=\"getContextMenuItems\"\n  :sideBar=\"{ toolPanels: ['columns','filters'] }\"\n  :localeText=\"agLangs\"\n  @gridReady=\"onReady\" />\n```\n\n从上往下依次介绍：\n\n+ `class`：支持三种主题:\n  + ag-theme-balham\n  + ag-theme-balham-dark\n  + ag-theme-material\n\n+ `columnDefs`：对比 iView 的 columns，具体内容下面会详细介绍\n+ `rowData`：对比 iView 的 data\n+ `suppressDragLeaveHidesColumns`：设置为 true 的时候可以防止将一列拖到表格外后隐藏\n+ `defaultColDef`：默认行、列属性:\n  + sortable:：可排序\n  + resizable：可调整尺寸\n  + filter：可过滤\n  + autoHeight：自适应高度\n  + // .......\n+ `enableCharts`：开启极差图（与 enableRangeSelection 和 modules 同时使用）\n+ `enableRangeSelection`：允许表格内范围选择\n+ `modules`：加载模块\n+ `getContextMenuItems`：定义表格内右键菜单项\n+ `sideBar`：设置侧边功能栏，具体可看 [Side Bar](https://www.ag-grid.com/javascript-grid-side-bar/)，推荐使用对象设置:\n  + toolPanels：这个设置也非常复杂，好在有幼儿版供我们使用—['columns', 'filters']，就不展开了\n  + defaultToolPanel：默认展开的侧边栏\n  + hiddenByDefault：是否隐藏侧边栏\n  + position：侧边栏的位置（left、right）\n+ `localeText`：语言包\n+ `gridReady`：ag-Grid 初始完成事件，可以获得一个 params 对象:\n  + type：事件名（\"gridReady\"）\n  + api：ag-Grid API\n  + columnApi：columns API，内部一个 columnController 对象，接着才是具体一些属性\n\n基础的一些设置就是以上了，剩下的可以根据业务需求进行具体的查阅：\n\n+ [ag-grid-vue 属性 VIP超全版](https://www.ag-grid.com/javascript-grid-properties/)\n+ [ag-Grid API 头晕脑胀功能特别多版](https://www.ag-grid.com/javascript-grid-api/)\n+ [ag-Grid Events SVIP一览无余版](https://www.ag-grid.com/javascript-grid-events/)\n+ [ag-Grid Callbacks 不知道可以干些什么版](https://www.ag-grid.com/javascript-grid-callbacks/)\n\n## 3. 表格行列\n\n上面主要是一些基础设置，这个部分才是一个表格的灵魂。\n\n下面抽取一段比较有代表性的代码：\n\n```js\nconst columns = [\n  {\n    headerName: '商品名称',\n    field: 'ProductVO.Name',\n    width: 300,\n    cellClass: 'special-cell',\n    cellRenderer: 'agGroupCellRenderer',\n    valueGetter: ({ data }) => data && data.ProductVO.Name,\n    cellRendererParams: {\n      innerRendererFramework: Vue.extend({\n        template: `\n          <div v-if=\"params.data\" style=\"display: flex;align-items: center;height:100%;\">\n            <div style=\"width: 60px;text-align: center;\">\n              <img\n                v-fancybox\n                style=\"max-width: 60px;max-height: 60px;\"\n               :src=\"params.data.ProductVO.ImageUrl + '?x-oss-process=image/resize,h_60'\">\n            </div>\n            <div style=\"margin: 0 0 0 10px;flex: 1;textAlign: left;\">\n              <p>{{ params.data.ProductVO.Name }}</p>\n              <p>{{ params.data.ProductVO.BarCode }}</p>\n            </div>\n          </div>\n        `,\n      }),\n    },\n  },\n  {\n    headerName: '交易额',\n    field: 'TotalPrice',\n    width: 100,\n    valueGetter: ({ data }) => data && Number((data.TotalPrice / 100).toFixed(2)),\n    cellRenderer: (params) => {\n      if (params.data) {\n        return `￥${(params.data.TotalPrice / 100).toFixed(2)}`;\n      }\n      return priceCellRender(params);\n    },\n  },\n  {\n    headerName: '成交额',\n    field: 'TotalPayPrice',\n    width: 100,\n    valueGetter: ({ data }) => data && Number((data.TotalPayPrice / 100).toFixed(2)),\n    valueFormatter: (params) => {\n      if (params.data) {\n        return `￥${(params.data.TotalPayPrice / 100).toFixed(2)}`;\n      }\n      return priceCellRender(params);\n    },\n  },\n  {\n    headerName: '场地名称',\n    field: 'TerminalVO.TerminalConfigVO.PlaceVO.Name',\n    width: 130,\n    valueGetter: ({ data }) => {\n      let i = data && data.TerminalVO;\n      if (isDef(i) && isDef(i = i.TerminalConfigVO) && isDef(i = i.PlaceVO)) {\n        return i.Name || '';\n      }\n      return '';\n    },\n  },\n  {\n    headerName: '设备名称',\n    field: 'TerminalVO.Name',\n    width: 150,\n  },\n];\n```\n\n### 3.1 主要参数\n\n| headerName | headerValueGetter |     field     |  width   |  hide  |  pinned  | sortable | ...  |\n| :--------: | :---------------: | :-----------: | :------: | :----: | :------: | :------: | :--: |\n|  列的名称  |    动态列名称     | data 中的字段 | 设置列宽 | 隐藏列 | 固定位置 |   排序   | 其他 |\n\n### 3.2 表格渲染\n\n表格渲染部分有很丶东西，比起`iView`的`render`来说，`ag-Grid`实在是`太太太太太太太`复杂了，从我上面的例子中也可见一斑，下面来从容易到复杂来介绍一下` ag-Grid`的渲染方式。\n\n渲染方法主要有三种：\n\n1. `valueGetter`：取代 field 字段，值是一个函数，形参有如下字段\n+ 与 valueFormatter 相同的字段\n  \n+ getValue：函数，返回当前 value 的值\n2. `valueFormatter`\n+ 与 valueGetter 相同的字段\n   + value：改变前的 value 值\n3. `cellRenderer`\n+ undefined / null：把 value 作为 string 渲染\n   + String：grid 内置的组件名\n   + Class：自己定义的组件\n   + Function：一个返回 HTML 字符串或者 DOM 元素的函数\n4. `cellRendererFramework`：这是 cellRenderer 的变体，可以直接引用组件类\n\n==valueGetter、valueFormatter 相同字段==（~~这两货还接收类似 eval 里的写法，不推荐不介绍~~）\n\n\n| data | node | column | colDef | api | columnApi | context |\n|:-:|:-:|:-:|:-:|:-:|:-:|:-:|\n| rowData 数据 | 行对象 | 列对象 | 行列配置项 | Grid API | 行列 API | 上下文 |\n\n更多内容自行参考[官网](https://www.ag-grid.com/javascript-grid-cell-rendering/)，在下学不动了。\n\n下图展示了`ag-Grid`如何来协作渲染的：\n\n![valueGetterFlow](https://www.ag-grid.com/javascript-grid-value-getters/valueGetterFlow.svg)\n\n经过我的一些简单摸(cai)索(keng)，建议渲染方式如下：\n\n1. 直接输出：这种属于直接输出 data 里的值，通过`field`就可以了，例如上面的==设备名称==\n\n2. 格式化后输出：常见于状态方面渲染，通过`valueGetter`使用，例如`Status`为0|1|2，渲染成==在线|离线|待投放==\n\n3. 重组 value 与格式化输出：这种属于渲染内容与复制内容不同的情况，通过`valueGetter`和`vueFormatter`组合使用\n\n4. 组件渲染：常见于==产品经理==，这种我又分为了两种情况:\n\n   + 不需要分组：可直接通过`cellRendererFramework`渲染组件，例如一些操作类的 button、input、select 等\n\n   + 需要分组，例如上面的==商品名称==\n\n     ```js\n     const columns = [\n       {\n         valueGetter: ({ data }) => data && data.XXX\n         cellRenderer: 'agGroupCellRenderer',\n         cellRendererParams: {\n           innerRendererFramework: Vue.exntend(),\n         },\n       }\n     ];\n     ```\n\n如果大家还有其他的发现，欢迎探讨来《深入浅出 ag-Grid》。","source":"_posts/ag-grid.md","raw":"---\ntitle: ag-grid\ncomments: true\ncategories:\n  - Vue\ntags:\n  - ag-grid\n  - Vue\nabbrlink: ady7e5ef\ndate: 2020-02-09 10:02:06\n---\n\n## 0. 项目简介\n\n> ag-Grid comes in two forms: ag-Grid Community (free for everyone, including production use) and ag-Grid Enterprise (you need a license to use).\n\n简单来说就是`ag-Grid`有社区版和企业版两种，社区版面向全体人员，而企业版则只允许在开发环境使用。它可应用于`Angular`、`React`、`Vue`，由于我们项目使用到的是`Vue`，所以只从`Vue`的部分简单介绍。\n\n## 1. 相关依赖\n\n要想使用`ag-Grid`，相关的依赖自然是不可避免的，完整的依赖如下：\n\n+ `@ag-grid-community/all-modules`：社区版的全部模块\n+ `@ag-grid-community/vue`：提供 vue 支持\n+ `@ag-grid-enterprise/all-modules`：企业版的全部模块\n+ `@ag-grid-enterprise/core`：ag-Grid 核心逻辑\n+ `vue-property-decorator`：作为 @ag-grid-community/vue 的依赖引入\n\n## 2. 使用介绍\n\n我节选了一段品牌商中使用到较全面的代码来介绍一下日常使用是什么样子：\n\n```vue\n<ag-grid-vue\n  style=\"height: 632px;\"\n  class=\"ag-theme-balham\"\n  :columnDefs=\"columnsAg\"\n  :rowData=\"dataList\"\n  :suppressDragLeaveHidesColumns=\"true\"\n  :defaultColDef=\"defaultColDef\"\n  :enableCharts=\"true\"\n  :enableRangeSelection=\"true\"\n  :modules=\"modules\"\n  :getContextMenuItems=\"getContextMenuItems\"\n  :sideBar=\"{ toolPanels: ['columns','filters'] }\"\n  :localeText=\"agLangs\"\n  @gridReady=\"onReady\" />\n```\n\n从上往下依次介绍：\n\n+ `class`：支持三种主题:\n  + ag-theme-balham\n  + ag-theme-balham-dark\n  + ag-theme-material\n\n+ `columnDefs`：对比 iView 的 columns，具体内容下面会详细介绍\n+ `rowData`：对比 iView 的 data\n+ `suppressDragLeaveHidesColumns`：设置为 true 的时候可以防止将一列拖到表格外后隐藏\n+ `defaultColDef`：默认行、列属性:\n  + sortable:：可排序\n  + resizable：可调整尺寸\n  + filter：可过滤\n  + autoHeight：自适应高度\n  + // .......\n+ `enableCharts`：开启极差图（与 enableRangeSelection 和 modules 同时使用）\n+ `enableRangeSelection`：允许表格内范围选择\n+ `modules`：加载模块\n+ `getContextMenuItems`：定义表格内右键菜单项\n+ `sideBar`：设置侧边功能栏，具体可看 [Side Bar](https://www.ag-grid.com/javascript-grid-side-bar/)，推荐使用对象设置:\n  + toolPanels：这个设置也非常复杂，好在有幼儿版供我们使用—['columns', 'filters']，就不展开了\n  + defaultToolPanel：默认展开的侧边栏\n  + hiddenByDefault：是否隐藏侧边栏\n  + position：侧边栏的位置（left、right）\n+ `localeText`：语言包\n+ `gridReady`：ag-Grid 初始完成事件，可以获得一个 params 对象:\n  + type：事件名（\"gridReady\"）\n  + api：ag-Grid API\n  + columnApi：columns API，内部一个 columnController 对象，接着才是具体一些属性\n\n基础的一些设置就是以上了，剩下的可以根据业务需求进行具体的查阅：\n\n+ [ag-grid-vue 属性 VIP超全版](https://www.ag-grid.com/javascript-grid-properties/)\n+ [ag-Grid API 头晕脑胀功能特别多版](https://www.ag-grid.com/javascript-grid-api/)\n+ [ag-Grid Events SVIP一览无余版](https://www.ag-grid.com/javascript-grid-events/)\n+ [ag-Grid Callbacks 不知道可以干些什么版](https://www.ag-grid.com/javascript-grid-callbacks/)\n\n## 3. 表格行列\n\n上面主要是一些基础设置，这个部分才是一个表格的灵魂。\n\n下面抽取一段比较有代表性的代码：\n\n```js\nconst columns = [\n  {\n    headerName: '商品名称',\n    field: 'ProductVO.Name',\n    width: 300,\n    cellClass: 'special-cell',\n    cellRenderer: 'agGroupCellRenderer',\n    valueGetter: ({ data }) => data && data.ProductVO.Name,\n    cellRendererParams: {\n      innerRendererFramework: Vue.extend({\n        template: `\n          <div v-if=\"params.data\" style=\"display: flex;align-items: center;height:100%;\">\n            <div style=\"width: 60px;text-align: center;\">\n              <img\n                v-fancybox\n                style=\"max-width: 60px;max-height: 60px;\"\n               :src=\"params.data.ProductVO.ImageUrl + '?x-oss-process=image/resize,h_60'\">\n            </div>\n            <div style=\"margin: 0 0 0 10px;flex: 1;textAlign: left;\">\n              <p>{{ params.data.ProductVO.Name }}</p>\n              <p>{{ params.data.ProductVO.BarCode }}</p>\n            </div>\n          </div>\n        `,\n      }),\n    },\n  },\n  {\n    headerName: '交易额',\n    field: 'TotalPrice',\n    width: 100,\n    valueGetter: ({ data }) => data && Number((data.TotalPrice / 100).toFixed(2)),\n    cellRenderer: (params) => {\n      if (params.data) {\n        return `￥${(params.data.TotalPrice / 100).toFixed(2)}`;\n      }\n      return priceCellRender(params);\n    },\n  },\n  {\n    headerName: '成交额',\n    field: 'TotalPayPrice',\n    width: 100,\n    valueGetter: ({ data }) => data && Number((data.TotalPayPrice / 100).toFixed(2)),\n    valueFormatter: (params) => {\n      if (params.data) {\n        return `￥${(params.data.TotalPayPrice / 100).toFixed(2)}`;\n      }\n      return priceCellRender(params);\n    },\n  },\n  {\n    headerName: '场地名称',\n    field: 'TerminalVO.TerminalConfigVO.PlaceVO.Name',\n    width: 130,\n    valueGetter: ({ data }) => {\n      let i = data && data.TerminalVO;\n      if (isDef(i) && isDef(i = i.TerminalConfigVO) && isDef(i = i.PlaceVO)) {\n        return i.Name || '';\n      }\n      return '';\n    },\n  },\n  {\n    headerName: '设备名称',\n    field: 'TerminalVO.Name',\n    width: 150,\n  },\n];\n```\n\n### 3.1 主要参数\n\n| headerName | headerValueGetter |     field     |  width   |  hide  |  pinned  | sortable | ...  |\n| :--------: | :---------------: | :-----------: | :------: | :----: | :------: | :------: | :--: |\n|  列的名称  |    动态列名称     | data 中的字段 | 设置列宽 | 隐藏列 | 固定位置 |   排序   | 其他 |\n\n### 3.2 表格渲染\n\n表格渲染部分有很丶东西，比起`iView`的`render`来说，`ag-Grid`实在是`太太太太太太太`复杂了，从我上面的例子中也可见一斑，下面来从容易到复杂来介绍一下` ag-Grid`的渲染方式。\n\n渲染方法主要有三种：\n\n1. `valueGetter`：取代 field 字段，值是一个函数，形参有如下字段\n+ 与 valueFormatter 相同的字段\n  \n+ getValue：函数，返回当前 value 的值\n2. `valueFormatter`\n+ 与 valueGetter 相同的字段\n   + value：改变前的 value 值\n3. `cellRenderer`\n+ undefined / null：把 value 作为 string 渲染\n   + String：grid 内置的组件名\n   + Class：自己定义的组件\n   + Function：一个返回 HTML 字符串或者 DOM 元素的函数\n4. `cellRendererFramework`：这是 cellRenderer 的变体，可以直接引用组件类\n\n==valueGetter、valueFormatter 相同字段==（~~这两货还接收类似 eval 里的写法，不推荐不介绍~~）\n\n\n| data | node | column | colDef | api | columnApi | context |\n|:-:|:-:|:-:|:-:|:-:|:-:|:-:|\n| rowData 数据 | 行对象 | 列对象 | 行列配置项 | Grid API | 行列 API | 上下文 |\n\n更多内容自行参考[官网](https://www.ag-grid.com/javascript-grid-cell-rendering/)，在下学不动了。\n\n下图展示了`ag-Grid`如何来协作渲染的：\n\n![valueGetterFlow](https://www.ag-grid.com/javascript-grid-value-getters/valueGetterFlow.svg)\n\n经过我的一些简单摸(cai)索(keng)，建议渲染方式如下：\n\n1. 直接输出：这种属于直接输出 data 里的值，通过`field`就可以了，例如上面的==设备名称==\n\n2. 格式化后输出：常见于状态方面渲染，通过`valueGetter`使用，例如`Status`为0|1|2，渲染成==在线|离线|待投放==\n\n3. 重组 value 与格式化输出：这种属于渲染内容与复制内容不同的情况，通过`valueGetter`和`vueFormatter`组合使用\n\n4. 组件渲染：常见于==产品经理==，这种我又分为了两种情况:\n\n   + 不需要分组：可直接通过`cellRendererFramework`渲染组件，例如一些操作类的 button、input、select 等\n\n   + 需要分组，例如上面的==商品名称==\n\n     ```js\n     const columns = [\n       {\n         valueGetter: ({ data }) => data && data.XXX\n         cellRenderer: 'agGroupCellRenderer',\n         cellRendererParams: {\n           innerRendererFramework: Vue.exntend(),\n         },\n       }\n     ];\n     ```\n\n如果大家还有其他的发现，欢迎探讨来《深入浅出 ag-Grid》。","slug":"ag-grid","published":1,"updated":"2020-05-18T16:35:00.481Z","layout":"post","photos":[],"link":"","_id":"cl78qfoqh006kqic9ga5net7l","content":"<h2 id=\"0-项目简介\"><a href=\"#0-项目简介\" class=\"headerlink\" title=\"0. 项目简介\"></a>0. 项目简介</h2><blockquote>\n<p>ag-Grid comes in two forms: ag-Grid Community (free for everyone, including production use) and ag-Grid Enterprise (you need a license to use).</p>\n</blockquote>\n<p>简单来说就是<code>ag-Grid</code>有社区版和企业版两种，社区版面向全体人员，而企业版则只允许在开发环境使用。它可应用于<code>Angular</code>、<code>React</code>、<code>Vue</code>，由于我们项目使用到的是<code>Vue</code>，所以只从<code>Vue</code>的部分简单介绍。</p>\n<h2 id=\"1-相关依赖\"><a href=\"#1-相关依赖\" class=\"headerlink\" title=\"1. 相关依赖\"></a>1. 相关依赖</h2><p>要想使用<code>ag-Grid</code>，相关的依赖自然是不可避免的，完整的依赖如下：</p>\n<ul>\n<li><code>@ag-grid-community/all-modules</code>：社区版的全部模块</li>\n<li><code>@ag-grid-community/vue</code>：提供 vue 支持</li>\n<li><code>@ag-grid-enterprise/all-modules</code>：企业版的全部模块</li>\n<li><code>@ag-grid-enterprise/core</code>：ag-Grid 核心逻辑</li>\n<li><code>vue-property-decorator</code>：作为 @ag-grid-community/vue 的依赖引入</li>\n</ul>\n<h2 id=\"2-使用介绍\"><a href=\"#2-使用介绍\" class=\"headerlink\" title=\"2. 使用介绍\"></a>2. 使用介绍</h2><p>我节选了一段品牌商中使用到较全面的代码来介绍一下日常使用是什么样子：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;ag-grid-vue</span><br><span class=\"line\">  style=&quot;height: 632px;&quot;</span><br><span class=\"line\">  class=&quot;ag-theme-balham&quot;</span><br><span class=\"line\">  :columnDefs=&quot;columnsAg&quot;</span><br><span class=\"line\">  :rowData=&quot;dataList&quot;</span><br><span class=\"line\">  :suppressDragLeaveHidesColumns=&quot;true&quot;</span><br><span class=\"line\">  :defaultColDef=&quot;defaultColDef&quot;</span><br><span class=\"line\">  :enableCharts=&quot;true&quot;</span><br><span class=\"line\">  :enableRangeSelection=&quot;true&quot;</span><br><span class=\"line\">  :modules=&quot;modules&quot;</span><br><span class=\"line\">  :getContextMenuItems=&quot;getContextMenuItems&quot;</span><br><span class=\"line\">  :sideBar=&quot;&#123; toolPanels: [&apos;columns&apos;,&apos;filters&apos;] &#125;&quot;</span><br><span class=\"line\">  :localeText=&quot;agLangs&quot;</span><br><span class=\"line\">  @gridReady=&quot;onReady&quot; /&gt;</span><br></pre></td></tr></table></figure>\n<p>从上往下依次介绍：</p>\n<ul>\n<li><p><code>class</code>：支持三种主题:</p>\n<ul>\n<li>ag-theme-balham</li>\n<li>ag-theme-balham-dark</li>\n<li>ag-theme-material</li>\n</ul>\n</li>\n<li><p><code>columnDefs</code>：对比 iView 的 columns，具体内容下面会详细介绍</p>\n</li>\n<li><code>rowData</code>：对比 iView 的 data</li>\n<li><code>suppressDragLeaveHidesColumns</code>：设置为 true 的时候可以防止将一列拖到表格外后隐藏</li>\n<li><code>defaultColDef</code>：默认行、列属性:<ul>\n<li>sortable:：可排序</li>\n<li>resizable：可调整尺寸</li>\n<li>filter：可过滤</li>\n<li>autoHeight：自适应高度</li>\n<li>// …….</li>\n</ul>\n</li>\n<li><code>enableCharts</code>：开启极差图（与 enableRangeSelection 和 modules 同时使用）</li>\n<li><code>enableRangeSelection</code>：允许表格内范围选择</li>\n<li><code>modules</code>：加载模块</li>\n<li><code>getContextMenuItems</code>：定义表格内右键菜单项</li>\n<li><code>sideBar</code>：设置侧边功能栏，具体可看 <a href=\"https://www.ag-grid.com/javascript-grid-side-bar/\" target=\"_blank\" rel=\"noopener\">Side Bar</a>，推荐使用对象设置:<ul>\n<li>toolPanels：这个设置也非常复杂，好在有幼儿版供我们使用—[‘columns’, ‘filters’]，就不展开了</li>\n<li>defaultToolPanel：默认展开的侧边栏</li>\n<li>hiddenByDefault：是否隐藏侧边栏</li>\n<li>position：侧边栏的位置（left、right）</li>\n</ul>\n</li>\n<li><code>localeText</code>：语言包</li>\n<li><code>gridReady</code>：ag-Grid 初始完成事件，可以获得一个 params 对象:<ul>\n<li>type：事件名（”gridReady”）</li>\n<li>api：ag-Grid API</li>\n<li>columnApi：columns API，内部一个 columnController 对象，接着才是具体一些属性</li>\n</ul>\n</li>\n</ul>\n<p>基础的一些设置就是以上了，剩下的可以根据业务需求进行具体的查阅：</p>\n<ul>\n<li><a href=\"https://www.ag-grid.com/javascript-grid-properties/\" target=\"_blank\" rel=\"noopener\">ag-grid-vue 属性 VIP超全版</a></li>\n<li><a href=\"https://www.ag-grid.com/javascript-grid-api/\" target=\"_blank\" rel=\"noopener\">ag-Grid API 头晕脑胀功能特别多版</a></li>\n<li><a href=\"https://www.ag-grid.com/javascript-grid-events/\" target=\"_blank\" rel=\"noopener\">ag-Grid Events SVIP一览无余版</a></li>\n<li><a href=\"https://www.ag-grid.com/javascript-grid-callbacks/\" target=\"_blank\" rel=\"noopener\">ag-Grid Callbacks 不知道可以干些什么版</a></li>\n</ul>\n<h2 id=\"3-表格行列\"><a href=\"#3-表格行列\" class=\"headerlink\" title=\"3. 表格行列\"></a>3. 表格行列</h2><p>上面主要是一些基础设置，这个部分才是一个表格的灵魂。</p>\n<p>下面抽取一段比较有代表性的代码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> columns = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    headerName: <span class=\"string\">'商品名称'</span>,</span><br><span class=\"line\">    field: <span class=\"string\">'ProductVO.Name'</span>,</span><br><span class=\"line\">    width: <span class=\"number\">300</span>,</span><br><span class=\"line\">    cellClass: <span class=\"string\">'special-cell'</span>,</span><br><span class=\"line\">    cellRenderer: <span class=\"string\">'agGroupCellRenderer'</span>,</span><br><span class=\"line\">    valueGetter: <span class=\"function\">(<span class=\"params\">&#123; data &#125;</span>) =&gt;</span> data &amp;&amp; data.ProductVO.Name,</span><br><span class=\"line\">    cellRendererParams: &#123;</span><br><span class=\"line\">      innerRendererFramework: Vue.extend(&#123;</span><br><span class=\"line\">        template: <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">          &lt;div v-if=\"params.data\" style=\"display: flex;align-items: center;height:100%;\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">            &lt;div style=\"width: 60px;text-align: center;\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">              &lt;img</span></span><br><span class=\"line\"><span class=\"string\">                v-fancybox</span></span><br><span class=\"line\"><span class=\"string\">                style=\"max-width: 60px;max-height: 60px;\"</span></span><br><span class=\"line\"><span class=\"string\">               :src=\"params.data.ProductVO.ImageUrl + '?x-oss-process=image/resize,h_60'\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">            &lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"string\">            &lt;div style=\"margin: 0 0 0 10px;flex: 1;textAlign: left;\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">              &lt;p&gt;&#123;&#123; params.data.ProductVO.Name &#125;&#125;&lt;/p&gt;</span></span><br><span class=\"line\"><span class=\"string\">              &lt;p&gt;&#123;&#123; params.data.ProductVO.BarCode &#125;&#125;&lt;/p&gt;</span></span><br><span class=\"line\"><span class=\"string\">            &lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"string\">          &lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"string\">        `</span>,</span><br><span class=\"line\">      &#125;),</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    headerName: <span class=\"string\">'交易额'</span>,</span><br><span class=\"line\">    field: <span class=\"string\">'TotalPrice'</span>,</span><br><span class=\"line\">    width: <span class=\"number\">100</span>,</span><br><span class=\"line\">    valueGetter: <span class=\"function\">(<span class=\"params\">&#123; data &#125;</span>) =&gt;</span> data &amp;&amp; <span class=\"built_in\">Number</span>((data.TotalPrice / <span class=\"number\">100</span>).toFixed(<span class=\"number\">2</span>)),</span><br><span class=\"line\">    cellRenderer: <span class=\"function\">(<span class=\"params\">params</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (params.data) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">`￥<span class=\"subst\">$&#123;(params.data.TotalPrice <span class=\"regexp\">/ 100).toFixed(2)&#125;`;</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">      &#125;</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">      return priceCellRender(params);</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">    &#125;,</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">  &#125;,</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">  &#123;</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">    headerName: '成交额',</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">    field: 'TotalPayPrice',</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">    width: 100,</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">    valueGetter: (&#123; data &#125;) =&gt; data &amp;&amp; Number((data.TotalPayPrice /</span> <span class=\"number\">100</span>).toFixed(<span class=\"number\">2</span>)),</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\">    valueFormatter: (params) =&gt; &#123;</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\">      <span class=\"keyword\">if</span> (params.data) &#123;</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\">        <span class=\"keyword\">return</span> <span class=\"string\">`￥<span class=\"subst\">$&#123;(params.data.TotalPayPrice <span class=\"regexp\">/ 100).toFixed(2)&#125;`;</span></span></span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">      &#125;</span></span></span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">      return priceCellRender(params);</span></span></span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">    &#125;,</span></span></span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">  &#125;,</span></span></span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">  &#123;</span></span></span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">    headerName: '场地名称',</span></span></span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">    field: 'TerminalVO.TerminalConfigVO.PlaceVO.Name',</span></span></span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">    width: 130,</span></span></span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">    valueGetter: (&#123; data &#125;) =&gt; &#123;</span></span></span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">      let i = data &amp;&amp; data.TerminalVO;</span></span></span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">      if (isDef(i) &amp;&amp; isDef(i = i.TerminalConfigVO) &amp;&amp; isDef(i = i.PlaceVO)) &#123;</span></span></span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">        return i.Name || '';</span></span></span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">      &#125;</span></span></span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">      return '';</span></span></span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">    &#125;,</span></span></span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">  &#125;,</span></span></span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">  &#123;</span></span></span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">    headerName: '设备名称',</span></span></span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">    field: 'TerminalVO.Name',</span></span></span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">    width: 150,</span></span></span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">  &#125;,</span></span></span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">];</span></span></span></span></span></span><br></pre></td></tr></table></figure>\n<h3 id=\"3-1-主要参数\"><a href=\"#3-1-主要参数\" class=\"headerlink\" title=\"3.1 主要参数\"></a>3.1 主要参数</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">headerName</th>\n<th style=\"text-align:center\">headerValueGetter</th>\n<th style=\"text-align:center\">field</th>\n<th style=\"text-align:center\">width</th>\n<th style=\"text-align:center\">hide</th>\n<th style=\"text-align:center\">pinned</th>\n<th style=\"text-align:center\">sortable</th>\n<th style=\"text-align:center\">…</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">列的名称</td>\n<td style=\"text-align:center\">动态列名称</td>\n<td style=\"text-align:center\">data 中的字段</td>\n<td style=\"text-align:center\">设置列宽</td>\n<td style=\"text-align:center\">隐藏列</td>\n<td style=\"text-align:center\">固定位置</td>\n<td style=\"text-align:center\">排序</td>\n<td style=\"text-align:center\">其他</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"3-2-表格渲染\"><a href=\"#3-2-表格渲染\" class=\"headerlink\" title=\"3.2 表格渲染\"></a>3.2 表格渲染</h3><p>表格渲染部分有很丶东西，比起<code>iView</code>的<code>render</code>来说，<code>ag-Grid</code>实在是<code>太太太太太太太</code>复杂了，从我上面的例子中也可见一斑，下面来从容易到复杂来介绍一下<code>ag-Grid</code>的渲染方式。</p>\n<p>渲染方法主要有三种：</p>\n<ol>\n<li><code>valueGetter</code>：取代 field 字段，值是一个函数，形参有如下字段</li>\n</ol>\n<ul>\n<li><p>与 valueFormatter 相同的字段</p>\n</li>\n<li><p>getValue：函数，返回当前 value 的值</p>\n</li>\n</ul>\n<ol start=\"2\">\n<li><code>valueFormatter</code></li>\n</ol>\n<ul>\n<li>与 valueGetter 相同的字段<ul>\n<li>value：改变前的 value 值</li>\n</ul>\n</li>\n</ul>\n<ol start=\"3\">\n<li><code>cellRenderer</code></li>\n</ol>\n<ul>\n<li>undefined / null：把 value 作为 string 渲染<ul>\n<li>String：grid 内置的组件名</li>\n<li>Class：自己定义的组件</li>\n<li>Function：一个返回 HTML 字符串或者 DOM 元素的函数</li>\n</ul>\n</li>\n</ul>\n<ol start=\"4\">\n<li><code>cellRendererFramework</code>：这是 cellRenderer 的变体，可以直接引用组件类</li>\n</ol>\n<p>==valueGetter、valueFormatter 相同字段==（<del>这两货还接收类似 eval 里的写法，不推荐不介绍</del>）</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">data</th>\n<th style=\"text-align:center\">node</th>\n<th style=\"text-align:center\">column</th>\n<th style=\"text-align:center\">colDef</th>\n<th style=\"text-align:center\">api</th>\n<th style=\"text-align:center\">columnApi</th>\n<th style=\"text-align:center\">context</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">rowData 数据</td>\n<td style=\"text-align:center\">行对象</td>\n<td style=\"text-align:center\">列对象</td>\n<td style=\"text-align:center\">行列配置项</td>\n<td style=\"text-align:center\">Grid API</td>\n<td style=\"text-align:center\">行列 API</td>\n<td style=\"text-align:center\">上下文</td>\n</tr>\n</tbody>\n</table>\n<p>更多内容自行参考<a href=\"https://www.ag-grid.com/javascript-grid-cell-rendering/\" target=\"_blank\" rel=\"noopener\">官网</a>，在下学不动了。</p>\n<p>下图展示了<code>ag-Grid</code>如何来协作渲染的：</p>\n<p><img src=\"https://www.ag-grid.com/javascript-grid-value-getters/valueGetterFlow.svg\" alt=\"valueGetterFlow\"></p>\n<p>经过我的一些简单摸(cai)索(keng)，建议渲染方式如下：</p>\n<ol>\n<li><p>直接输出：这种属于直接输出 data 里的值，通过<code>field</code>就可以了，例如上面的==设备名称==</p>\n</li>\n<li><p>格式化后输出：常见于状态方面渲染，通过<code>valueGetter</code>使用，例如<code>Status</code>为0|1|2，渲染成==在线|离线|待投放==</p>\n</li>\n<li><p>重组 value 与格式化输出：这种属于渲染内容与复制内容不同的情况，通过<code>valueGetter</code>和<code>vueFormatter</code>组合使用</p>\n</li>\n<li><p>组件渲染：常见于==产品经理==，这种我又分为了两种情况:</p>\n<ul>\n<li><p>不需要分组：可直接通过<code>cellRendererFramework</code>渲染组件，例如一些操作类的 button、input、select 等</p>\n</li>\n<li><p>需要分组，例如上面的==商品名称==</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> columns = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    valueGetter: <span class=\"function\">(<span class=\"params\">&#123; data &#125;</span>) =&gt;</span> data &amp;&amp; data.XXX</span><br><span class=\"line\">    cellRenderer: <span class=\"string\">'agGroupCellRenderer'</span>,</span><br><span class=\"line\">    cellRendererParams: &#123;</span><br><span class=\"line\">      innerRendererFramework: Vue.exntend(),</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">];</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ol>\n<p>如果大家还有其他的发现，欢迎探讨来《深入浅出 ag-Grid》。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"0-项目简介\"><a href=\"#0-项目简介\" class=\"headerlink\" title=\"0. 项目简介\"></a>0. 项目简介</h2><blockquote>\n<p>ag-Grid comes in two forms: ag-Grid Community (free for everyone, including production use) and ag-Grid Enterprise (you need a license to use).</p>\n</blockquote>\n<p>简单来说就是<code>ag-Grid</code>有社区版和企业版两种，社区版面向全体人员，而企业版则只允许在开发环境使用。它可应用于<code>Angular</code>、<code>React</code>、<code>Vue</code>，由于我们项目使用到的是<code>Vue</code>，所以只从<code>Vue</code>的部分简单介绍。</p>\n<h2 id=\"1-相关依赖\"><a href=\"#1-相关依赖\" class=\"headerlink\" title=\"1. 相关依赖\"></a>1. 相关依赖</h2><p>要想使用<code>ag-Grid</code>，相关的依赖自然是不可避免的，完整的依赖如下：</p>\n<ul>\n<li><code>@ag-grid-community/all-modules</code>：社区版的全部模块</li>\n<li><code>@ag-grid-community/vue</code>：提供 vue 支持</li>\n<li><code>@ag-grid-enterprise/all-modules</code>：企业版的全部模块</li>\n<li><code>@ag-grid-enterprise/core</code>：ag-Grid 核心逻辑</li>\n<li><code>vue-property-decorator</code>：作为 @ag-grid-community/vue 的依赖引入</li>\n</ul>\n<h2 id=\"2-使用介绍\"><a href=\"#2-使用介绍\" class=\"headerlink\" title=\"2. 使用介绍\"></a>2. 使用介绍</h2><p>我节选了一段品牌商中使用到较全面的代码来介绍一下日常使用是什么样子：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;ag-grid-vue</span><br><span class=\"line\">  style=&quot;height: 632px;&quot;</span><br><span class=\"line\">  class=&quot;ag-theme-balham&quot;</span><br><span class=\"line\">  :columnDefs=&quot;columnsAg&quot;</span><br><span class=\"line\">  :rowData=&quot;dataList&quot;</span><br><span class=\"line\">  :suppressDragLeaveHidesColumns=&quot;true&quot;</span><br><span class=\"line\">  :defaultColDef=&quot;defaultColDef&quot;</span><br><span class=\"line\">  :enableCharts=&quot;true&quot;</span><br><span class=\"line\">  :enableRangeSelection=&quot;true&quot;</span><br><span class=\"line\">  :modules=&quot;modules&quot;</span><br><span class=\"line\">  :getContextMenuItems=&quot;getContextMenuItems&quot;</span><br><span class=\"line\">  :sideBar=&quot;&#123; toolPanels: [&apos;columns&apos;,&apos;filters&apos;] &#125;&quot;</span><br><span class=\"line\">  :localeText=&quot;agLangs&quot;</span><br><span class=\"line\">  @gridReady=&quot;onReady&quot; /&gt;</span><br></pre></td></tr></table></figure>\n<p>从上往下依次介绍：</p>\n<ul>\n<li><p><code>class</code>：支持三种主题:</p>\n<ul>\n<li>ag-theme-balham</li>\n<li>ag-theme-balham-dark</li>\n<li>ag-theme-material</li>\n</ul>\n</li>\n<li><p><code>columnDefs</code>：对比 iView 的 columns，具体内容下面会详细介绍</p>\n</li>\n<li><code>rowData</code>：对比 iView 的 data</li>\n<li><code>suppressDragLeaveHidesColumns</code>：设置为 true 的时候可以防止将一列拖到表格外后隐藏</li>\n<li><code>defaultColDef</code>：默认行、列属性:<ul>\n<li>sortable:：可排序</li>\n<li>resizable：可调整尺寸</li>\n<li>filter：可过滤</li>\n<li>autoHeight：自适应高度</li>\n<li>// …….</li>\n</ul>\n</li>\n<li><code>enableCharts</code>：开启极差图（与 enableRangeSelection 和 modules 同时使用）</li>\n<li><code>enableRangeSelection</code>：允许表格内范围选择</li>\n<li><code>modules</code>：加载模块</li>\n<li><code>getContextMenuItems</code>：定义表格内右键菜单项</li>\n<li><code>sideBar</code>：设置侧边功能栏，具体可看 <a href=\"https://www.ag-grid.com/javascript-grid-side-bar/\" target=\"_blank\" rel=\"noopener\">Side Bar</a>，推荐使用对象设置:<ul>\n<li>toolPanels：这个设置也非常复杂，好在有幼儿版供我们使用—[‘columns’, ‘filters’]，就不展开了</li>\n<li>defaultToolPanel：默认展开的侧边栏</li>\n<li>hiddenByDefault：是否隐藏侧边栏</li>\n<li>position：侧边栏的位置（left、right）</li>\n</ul>\n</li>\n<li><code>localeText</code>：语言包</li>\n<li><code>gridReady</code>：ag-Grid 初始完成事件，可以获得一个 params 对象:<ul>\n<li>type：事件名（”gridReady”）</li>\n<li>api：ag-Grid API</li>\n<li>columnApi：columns API，内部一个 columnController 对象，接着才是具体一些属性</li>\n</ul>\n</li>\n</ul>\n<p>基础的一些设置就是以上了，剩下的可以根据业务需求进行具体的查阅：</p>\n<ul>\n<li><a href=\"https://www.ag-grid.com/javascript-grid-properties/\" target=\"_blank\" rel=\"noopener\">ag-grid-vue 属性 VIP超全版</a></li>\n<li><a href=\"https://www.ag-grid.com/javascript-grid-api/\" target=\"_blank\" rel=\"noopener\">ag-Grid API 头晕脑胀功能特别多版</a></li>\n<li><a href=\"https://www.ag-grid.com/javascript-grid-events/\" target=\"_blank\" rel=\"noopener\">ag-Grid Events SVIP一览无余版</a></li>\n<li><a href=\"https://www.ag-grid.com/javascript-grid-callbacks/\" target=\"_blank\" rel=\"noopener\">ag-Grid Callbacks 不知道可以干些什么版</a></li>\n</ul>\n<h2 id=\"3-表格行列\"><a href=\"#3-表格行列\" class=\"headerlink\" title=\"3. 表格行列\"></a>3. 表格行列</h2><p>上面主要是一些基础设置，这个部分才是一个表格的灵魂。</p>\n<p>下面抽取一段比较有代表性的代码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> columns = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    headerName: <span class=\"string\">'商品名称'</span>,</span><br><span class=\"line\">    field: <span class=\"string\">'ProductVO.Name'</span>,</span><br><span class=\"line\">    width: <span class=\"number\">300</span>,</span><br><span class=\"line\">    cellClass: <span class=\"string\">'special-cell'</span>,</span><br><span class=\"line\">    cellRenderer: <span class=\"string\">'agGroupCellRenderer'</span>,</span><br><span class=\"line\">    valueGetter: <span class=\"function\">(<span class=\"params\">&#123; data &#125;</span>) =&gt;</span> data &amp;&amp; data.ProductVO.Name,</span><br><span class=\"line\">    cellRendererParams: &#123;</span><br><span class=\"line\">      innerRendererFramework: Vue.extend(&#123;</span><br><span class=\"line\">        template: <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">          &lt;div v-if=\"params.data\" style=\"display: flex;align-items: center;height:100%;\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">            &lt;div style=\"width: 60px;text-align: center;\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">              &lt;img</span></span><br><span class=\"line\"><span class=\"string\">                v-fancybox</span></span><br><span class=\"line\"><span class=\"string\">                style=\"max-width: 60px;max-height: 60px;\"</span></span><br><span class=\"line\"><span class=\"string\">               :src=\"params.data.ProductVO.ImageUrl + '?x-oss-process=image/resize,h_60'\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">            &lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"string\">            &lt;div style=\"margin: 0 0 0 10px;flex: 1;textAlign: left;\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">              &lt;p&gt;&#123;&#123; params.data.ProductVO.Name &#125;&#125;&lt;/p&gt;</span></span><br><span class=\"line\"><span class=\"string\">              &lt;p&gt;&#123;&#123; params.data.ProductVO.BarCode &#125;&#125;&lt;/p&gt;</span></span><br><span class=\"line\"><span class=\"string\">            &lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"string\">          &lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"string\">        `</span>,</span><br><span class=\"line\">      &#125;),</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    headerName: <span class=\"string\">'交易额'</span>,</span><br><span class=\"line\">    field: <span class=\"string\">'TotalPrice'</span>,</span><br><span class=\"line\">    width: <span class=\"number\">100</span>,</span><br><span class=\"line\">    valueGetter: <span class=\"function\">(<span class=\"params\">&#123; data &#125;</span>) =&gt;</span> data &amp;&amp; <span class=\"built_in\">Number</span>((data.TotalPrice / <span class=\"number\">100</span>).toFixed(<span class=\"number\">2</span>)),</span><br><span class=\"line\">    cellRenderer: <span class=\"function\">(<span class=\"params\">params</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (params.data) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">`￥<span class=\"subst\">$&#123;(params.data.TotalPrice <span class=\"regexp\">/ 100).toFixed(2)&#125;`;</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">      &#125;</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">      return priceCellRender(params);</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">    &#125;,</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">  &#125;,</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">  &#123;</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">    headerName: '成交额',</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">    field: 'TotalPayPrice',</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">    width: 100,</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">    valueGetter: (&#123; data &#125;) =&gt; data &amp;&amp; Number((data.TotalPayPrice /</span> <span class=\"number\">100</span>).toFixed(<span class=\"number\">2</span>)),</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\">    valueFormatter: (params) =&gt; &#123;</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\">      <span class=\"keyword\">if</span> (params.data) &#123;</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\">        <span class=\"keyword\">return</span> <span class=\"string\">`￥<span class=\"subst\">$&#123;(params.data.TotalPayPrice <span class=\"regexp\">/ 100).toFixed(2)&#125;`;</span></span></span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">      &#125;</span></span></span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">      return priceCellRender(params);</span></span></span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">    &#125;,</span></span></span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">  &#125;,</span></span></span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">  &#123;</span></span></span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">    headerName: '场地名称',</span></span></span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">    field: 'TerminalVO.TerminalConfigVO.PlaceVO.Name',</span></span></span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">    width: 130,</span></span></span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">    valueGetter: (&#123; data &#125;) =&gt; &#123;</span></span></span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">      let i = data &amp;&amp; data.TerminalVO;</span></span></span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">      if (isDef(i) &amp;&amp; isDef(i = i.TerminalConfigVO) &amp;&amp; isDef(i = i.PlaceVO)) &#123;</span></span></span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">        return i.Name || '';</span></span></span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">      &#125;</span></span></span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">      return '';</span></span></span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">    &#125;,</span></span></span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">  &#125;,</span></span></span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">  &#123;</span></span></span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">    headerName: '设备名称',</span></span></span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">    field: 'TerminalVO.Name',</span></span></span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">    width: 150,</span></span></span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">  &#125;,</span></span></span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">];</span></span></span></span></span></span><br></pre></td></tr></table></figure>\n<h3 id=\"3-1-主要参数\"><a href=\"#3-1-主要参数\" class=\"headerlink\" title=\"3.1 主要参数\"></a>3.1 主要参数</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">headerName</th>\n<th style=\"text-align:center\">headerValueGetter</th>\n<th style=\"text-align:center\">field</th>\n<th style=\"text-align:center\">width</th>\n<th style=\"text-align:center\">hide</th>\n<th style=\"text-align:center\">pinned</th>\n<th style=\"text-align:center\">sortable</th>\n<th style=\"text-align:center\">…</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">列的名称</td>\n<td style=\"text-align:center\">动态列名称</td>\n<td style=\"text-align:center\">data 中的字段</td>\n<td style=\"text-align:center\">设置列宽</td>\n<td style=\"text-align:center\">隐藏列</td>\n<td style=\"text-align:center\">固定位置</td>\n<td style=\"text-align:center\">排序</td>\n<td style=\"text-align:center\">其他</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"3-2-表格渲染\"><a href=\"#3-2-表格渲染\" class=\"headerlink\" title=\"3.2 表格渲染\"></a>3.2 表格渲染</h3><p>表格渲染部分有很丶东西，比起<code>iView</code>的<code>render</code>来说，<code>ag-Grid</code>实在是<code>太太太太太太太</code>复杂了，从我上面的例子中也可见一斑，下面来从容易到复杂来介绍一下<code>ag-Grid</code>的渲染方式。</p>\n<p>渲染方法主要有三种：</p>\n<ol>\n<li><code>valueGetter</code>：取代 field 字段，值是一个函数，形参有如下字段</li>\n</ol>\n<ul>\n<li><p>与 valueFormatter 相同的字段</p>\n</li>\n<li><p>getValue：函数，返回当前 value 的值</p>\n</li>\n</ul>\n<ol start=\"2\">\n<li><code>valueFormatter</code></li>\n</ol>\n<ul>\n<li>与 valueGetter 相同的字段<ul>\n<li>value：改变前的 value 值</li>\n</ul>\n</li>\n</ul>\n<ol start=\"3\">\n<li><code>cellRenderer</code></li>\n</ol>\n<ul>\n<li>undefined / null：把 value 作为 string 渲染<ul>\n<li>String：grid 内置的组件名</li>\n<li>Class：自己定义的组件</li>\n<li>Function：一个返回 HTML 字符串或者 DOM 元素的函数</li>\n</ul>\n</li>\n</ul>\n<ol start=\"4\">\n<li><code>cellRendererFramework</code>：这是 cellRenderer 的变体，可以直接引用组件类</li>\n</ol>\n<p>==valueGetter、valueFormatter 相同字段==（<del>这两货还接收类似 eval 里的写法，不推荐不介绍</del>）</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">data</th>\n<th style=\"text-align:center\">node</th>\n<th style=\"text-align:center\">column</th>\n<th style=\"text-align:center\">colDef</th>\n<th style=\"text-align:center\">api</th>\n<th style=\"text-align:center\">columnApi</th>\n<th style=\"text-align:center\">context</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">rowData 数据</td>\n<td style=\"text-align:center\">行对象</td>\n<td style=\"text-align:center\">列对象</td>\n<td style=\"text-align:center\">行列配置项</td>\n<td style=\"text-align:center\">Grid API</td>\n<td style=\"text-align:center\">行列 API</td>\n<td style=\"text-align:center\">上下文</td>\n</tr>\n</tbody>\n</table>\n<p>更多内容自行参考<a href=\"https://www.ag-grid.com/javascript-grid-cell-rendering/\" target=\"_blank\" rel=\"noopener\">官网</a>，在下学不动了。</p>\n<p>下图展示了<code>ag-Grid</code>如何来协作渲染的：</p>\n<p><img src=\"https://www.ag-grid.com/javascript-grid-value-getters/valueGetterFlow.svg\" alt=\"valueGetterFlow\"></p>\n<p>经过我的一些简单摸(cai)索(keng)，建议渲染方式如下：</p>\n<ol>\n<li><p>直接输出：这种属于直接输出 data 里的值，通过<code>field</code>就可以了，例如上面的==设备名称==</p>\n</li>\n<li><p>格式化后输出：常见于状态方面渲染，通过<code>valueGetter</code>使用，例如<code>Status</code>为0|1|2，渲染成==在线|离线|待投放==</p>\n</li>\n<li><p>重组 value 与格式化输出：这种属于渲染内容与复制内容不同的情况，通过<code>valueGetter</code>和<code>vueFormatter</code>组合使用</p>\n</li>\n<li><p>组件渲染：常见于==产品经理==，这种我又分为了两种情况:</p>\n<ul>\n<li><p>不需要分组：可直接通过<code>cellRendererFramework</code>渲染组件，例如一些操作类的 button、input、select 等</p>\n</li>\n<li><p>需要分组，例如上面的==商品名称==</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> columns = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    valueGetter: <span class=\"function\">(<span class=\"params\">&#123; data &#125;</span>) =&gt;</span> data &amp;&amp; data.XXX</span><br><span class=\"line\">    cellRenderer: <span class=\"string\">'agGroupCellRenderer'</span>,</span><br><span class=\"line\">    cellRendererParams: &#123;</span><br><span class=\"line\">      innerRendererFramework: Vue.exntend(),</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">];</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ol>\n<p>如果大家还有其他的发现，欢迎探讨来《深入浅出 ag-Grid》。</p>\n"},{"title":"Github搭建Hexo博客","comments":1,"abbrlink":"9a98d601","date":"2018-10-02T10:02:25.000Z","_content":"\n# Github 搭建Hexo博客\n\n利用Github page搭建一个人博客，在没有特殊需求，又想快速拥有一个个人博客，hexo是个不错的选择，搭建简单，无需另外购买服务器空间和域名，只需要有个Github账号即可。搭建简单，能够坚持维护和写文章难。。。\n\n----\n\n## 环境准备\n\n1.安装Node.js\n\nHexo是基于nodeJS环境的静态博客\n\n前往[Node官网](https://nodejs.org/)下载最新版本,一路安装即可。\n\n查看是否安装好了，打开cdm 运行` node -V`查看版本号 \n\n2.安装Git\n\n[官网下载](https://git-scm.com/downloads/)\n\n右键打Git Bash查看版本 `git version`\n\n3.Sublime\n\n随便一款文本编辑器，这里我用[Sublime](http://www.sublimetext.com/3)。支持各种编程语言和文件格式，当然也支持Markdown语法 。\n\n## 安装步骤\n\n1.安装Hexo\n\n+ 先创建一个文件夹（用来存放所有blog的东西）然后`cd`到该文件夹下\n\n+ 安装hexo命令：`npm i +g hexo`\n\n+ 安装完后查看版本\n\n  ![](http://pan.vmccc.cn/images/2018/10/02/8jDSlPigzd/githexo.jpg)\n\n+ 初始化命令：`hexo init` ，初始化完成之后打开所在的文件夹可以看到以下文件：\n\n![](http://pan.vmccc.cn/images/2018/10/03/FWonyhHnxo/git-dir.jpg)\n\n+ 解释一下：\n\n  + node_modules：是依赖包\n  + public：存放的是生成的页面\n  + scaffolds：命令生成文章等的模板\n  + source：用命令创建的各种文章\n  + themes：主题\n  + _config.yml：整个博客的配置\n  + db.json：source解析所得到的\n  + package.json：项目所需模块项目的配置信息\n\n+ 做好这些前置工作之后接下来的就是各种配配配置了。\n\n### Github注册与配置\n\n1.注册\n访问：[GitHub](https://luuman.github.io/2015/12/27/Hexo/GitHubHexo/0)，注册你的username和邮箱，邮箱十分重要，GitHub上很多通知都是通过邮箱的。注册过程比较简单。\n\n2.配置和使用Github\n\n+ 创建一个repo，名称为`safranyu.github.io`, 其中safranyu是你的github名称，按照这个规则创建才有用哦，如下：(由于我已经提前创建好了，所以提示这个库已经存在)\n\n![](http://pan.vmccc.cn/images/2018/10/03/59D6ETwVgq/git-user.jpg)\n\n+ 回到gitbash中，配置github账户信息（YourName和YourEail都替换成你自己的）：\n\n![](http://pan.vmccc.cn/images/2018/10/03/FYeGRdAdw7/githubUser.jpg)\n\n+ 创建SSH\n  在gitbash中输入：`ssh-keygen -t rsa -C \"youremail@example.com`，生成ssh。然后按下图的方式找到`id_rsa.pub`文件的内容。\n\n![](http://pan.vmccc.cn/images/2018/10/03/hy3IQ1Z73j/gitssh.jpg)\n\n+ 将上面获取的ssh放到github中：\n\n  ![](http://pan.vmccc.cn/images/2018/10/03/FueQEPx6Lf/settings.jpg)\n\n  ![](http://pan.vmccc.cn/images/2018/10/03/FcbkdhRQul/gitsshkey.jpg)\n\n\n添加一个 `New SSH key` ，title随便取，key就填刚刚那一段。\n\n* 在gitbash中验证是否添加成功：`ssh +T git@github.com`\n\n* 完成下一步你就成功啦！\n\n3.配置\n\n* 用编辑器打开你的blog项目，修改`_config.yml`文件的一些配置(冒号之后都是有一个半角空格的)：\n\n  ```javascript\n  deploy:\n    type: git\n    repo: https://github.com/YourgithubName/YourgithubName.github.io.git\n    branch: master\n  ```\n\n* 回到gitbash中，进入你的blog目录，分别执行以下命令：\n\n  ```javascript\n  hexo clean\n  hexo generate\n  hexo server\n  ```\n\n* 打开浏览器输入：`http://localhost:4000`\n\n+ 命令解释：\n\n\t+ 清除public，当 source 文件夹中的部分资源更改过之后，特别是对文件进行了删除或者路径的改变之后，需要执行这个命令，然后重新编译。\n\t+ 编译，一般部署上去的时候都需要编译一下，编译后，会出现一个 public 文件夹，将所有的md文件编译成html文件\n\t+ 开启本地服务\n\n4.上传到github\n\n+ 执行命令(建议每次都按照如下步骤部署,可简写)：\n\n```javascript\nhexo clean\nhexo generate\nhexo deploy\n//简写\n//hexo c\n//hexo g\n//hexo d\n```\n\n* 在浏览器中输入`http://safranyu.github.io`就可以看到你的个人博客啦，是不是很兴奋！\n+ 感觉GitBash中东西太多的时候输入`clear`命令清空\n\n5.绑定个人域名\n\n- 不想绑定的自行忽略\n\n- 第一步购买域名：随便在哪个网站买一个就好了。\n\n- 第二步添加CNAME：添加记录，添加你的域名或者二级域名，比如我添加的是二级域名`blog`，记录值里填你Github里的域名,比如`safranyu.github.io`，\n   ![](http://pan.vmccc.cn/images/2018/10/05/MVFBcdDSgc/blog-cname.jpg)\n\n- 填写完后回到Github进入里的Blog库，设置里添加你的域名保存即可\n\n   ![](http://pan.vmccc.cn/images/2018/10/05/jfma6xvxOz/blog-yuming.jpg)\n\n## Hexo博客配置\n\n### 新建博文\n\n在Git Bash输入：\n\n```\nhexo new \"新博文的名字\"\n```\n\n即可在 Hexo\\source_posts 目录中找到”新博文的名字.md”这个文件。你就可以使用maekdown编辑器打开进行编写博客内容了。\n\n> hexo new [layout] “postName” #新建文章\n\n其中layout是可选参数，默认值为post。有哪些layout呢，请到scaffolds目录下查看，这些文件名称就是layout名称。当然你可以添加自己的layout，方法就是添加一个文件即可，同时你也可以编辑现有的layout，比如post的layout默认是hexo\\scaffolds\\post.md\n\n### 预览和发表\n\n```\nhexo clean\nhexo g\nhexo s\nhexo d\n```\n\n### 安装主题\n\n你可以在[Themes·Hexo](https://github.com/hexojs/hexo/wiki/Themes)或者[hexo主题](https://hexo.io/themes/)上选择你喜欢的主题，我使用的SPFK主题\n\n#### 安装SPFK主题\n\n- 安装\n```shell\ngit clone https://github.com/luuman/hexo-theme-spfk.git themes/spfk\n```\n\n- 更新\n```\ncd themes/spfk\ngit pull\n```\n\n- 配置\n\n  主题配置文件在主目录下的`_config.yml`：[_config.yml](http://luuman.github.io/2015/12/21/GitHub+Hexo/)\n\n  相关插件的安装：请参照[Hexo插件安装](http://localhost:4000/2015/12/27/Hexo-plug/)\n\n```\n### Header\nD:\\blog\\themes\\spfk\\_config.yml\nmenu:\n  主页: /\n  所有文章: /archives\n  # 随笔: /tags/随笔\n    #是否开启多说评论，填写你在多说申请的项目名称 duoshuo: duoshuo-key（http://duoshuo-key.duoshuo.com/）\n    #若使用disqus，请在博客config文件中填写disqus_shortname，并关闭多说评论\n    duoshuo: true\n网页侧边栏背景:\n# Background | 背景\n## \"background_sum\": show images form /source/background/的图片数目background_sum: 24\n## \"on: true\": 自动随机显示这5张图片\n## \"on: false\": 自定义显示图片设置，background_image: 109\nbackground:\n  on: true\n  #on: false\n  background_sum: 24\n  background_image: 109\n```\n\n- 多说评论\n\n```\nduoshuo: \n  on: true\n  domain: luuman\n  # 是否开启多说评论，http://duoshuo.com/create-site/\n  # 使用上面网址登陆你的多说，然后创建站点，在 domain 中填入你设定的域名前半部分\n  # http://<要填的部分>.duoshuo.com (domain只填上<>里的内容，不要填整个网址)\nJ:\\Hexo\\Hexo\\themes\\spfk\\source\\css\\多说.css\n```\n\n添加方法：打开「后台」 > 「多说评论」 > 「设置」 > 「基本设置」 > 然后把样式粘贴到「自定义CSS」文本框 > 「保存」\n\n具体样式请参照：[多说.css](https://github.com/luuman/luuman.github.io/blob/master/resoures/%E5%A4%9A%E8%AF%B4.css)\n\n- 头像\n\n```shell\n# 头像尺寸大概200*200px\nD:\\blog\\themes\\spfk\\source\\img\\head.jpg\n\n```\n\n- icon 图标\n\n```shell\n替换路径: /spfk/source/apple-touch-icon.png\nD:\\blog\\themes\\spfk\\source\\img\\favicon.png\n\n```\n\n- 背景\n\n```shell\n# Background | 背景\n# \"background_sum\": show images form /source/background/的图片数目\n# \"on: true\": 自动随机显示这5张图片\n# \"on: false\": 自定义显示图片设置 background_image: 5\nbackground:\n  on: true\n  #on: false\n  background_sum: 24\n  background_image: 109\n```\n\n- 文章摘要\n\n```shell\ntitle: 前端知识体系\ndate: 2018-10-07 22:08:02\ndescription: \ncategories:\n- HTML 书籍\n- HTML 书籍\ntags:\n- HTML 标签 \n- HTML 标签\ntoc: true 文章目录\nauthor:\ncomments:\noriginal:\npermalink: \n---\n　　** 前端知识体系：**<Excerpt in index | 首页摘要> \n+ <!-- more -->\n<The rest of contents | 余下全文>\n```\n\n- 404 Page:\n```shell\nhexo new page 404\n#And then set permalink: /404 in /source/404/index.md front matter.\n#在 Hexo 中创建匹配主题的404页面\n```\n\n### 主题结构\n\n```\n.\n├── languages            #多语言\n|   ├── default.yml      #默认语言\n|   └── zh-CN.yml        #中文语言\n├── layout               #布局，根目录下的*.ejs文件是对主页，分页，存档等的控制\n|   ├── _partial         #局部的布局，此目录下的*.ejs是对头尾等局部的控制\n|   └── _widget          #小挂件的布局，页面下方小挂件的控制\n├── source               #源码\n|   ├── css              #css源码 \n|   |   ├── _base        #*.styl基础css\n|   |   ├── _partial     #*.styl局部css\n|   |   ├── fonts        #字体\n|   |   ├── images       #图片\n|   |   └── style.styl   #*.styl引入需要的css源码\n|   ├── fancybox         #fancybox效果源码\n|   └── js               #javascript源代码\n├── _config.yml          #主题配置文件\n└── README.md            #用GitHub的都知道\n```\n\n### 参考资料\n\n[hexo官方文档](https://hexo.io/zh-cn/docs/)\n\n[luuman](https://github.com/luuman)\n\n[hexo从零开始到搭建完整](https://www.cnblogs.com/visugar/p/6821777.html)\n\n[Cherryblog](https://cherryblog.site/Use-Gitpagehexo-to-develop-their-own-blog.html)\n\n\n\n","source":"_posts/github搭建hexo博客.md","raw":"---\ntitle: Github搭建Hexo博客\ncomments: true\ncategories:\n  - Blog\ntags:\n  - Blog\n  - Github\nabbrlink: 9a98d601\ndate: 2018-10-02 18:02:25\n---\n\n# Github 搭建Hexo博客\n\n利用Github page搭建一个人博客，在没有特殊需求，又想快速拥有一个个人博客，hexo是个不错的选择，搭建简单，无需另外购买服务器空间和域名，只需要有个Github账号即可。搭建简单，能够坚持维护和写文章难。。。\n\n----\n\n## 环境准备\n\n1.安装Node.js\n\nHexo是基于nodeJS环境的静态博客\n\n前往[Node官网](https://nodejs.org/)下载最新版本,一路安装即可。\n\n查看是否安装好了，打开cdm 运行` node -V`查看版本号 \n\n2.安装Git\n\n[官网下载](https://git-scm.com/downloads/)\n\n右键打Git Bash查看版本 `git version`\n\n3.Sublime\n\n随便一款文本编辑器，这里我用[Sublime](http://www.sublimetext.com/3)。支持各种编程语言和文件格式，当然也支持Markdown语法 。\n\n## 安装步骤\n\n1.安装Hexo\n\n+ 先创建一个文件夹（用来存放所有blog的东西）然后`cd`到该文件夹下\n\n+ 安装hexo命令：`npm i +g hexo`\n\n+ 安装完后查看版本\n\n  ![](http://pan.vmccc.cn/images/2018/10/02/8jDSlPigzd/githexo.jpg)\n\n+ 初始化命令：`hexo init` ，初始化完成之后打开所在的文件夹可以看到以下文件：\n\n![](http://pan.vmccc.cn/images/2018/10/03/FWonyhHnxo/git-dir.jpg)\n\n+ 解释一下：\n\n  + node_modules：是依赖包\n  + public：存放的是生成的页面\n  + scaffolds：命令生成文章等的模板\n  + source：用命令创建的各种文章\n  + themes：主题\n  + _config.yml：整个博客的配置\n  + db.json：source解析所得到的\n  + package.json：项目所需模块项目的配置信息\n\n+ 做好这些前置工作之后接下来的就是各种配配配置了。\n\n### Github注册与配置\n\n1.注册\n访问：[GitHub](https://luuman.github.io/2015/12/27/Hexo/GitHubHexo/0)，注册你的username和邮箱，邮箱十分重要，GitHub上很多通知都是通过邮箱的。注册过程比较简单。\n\n2.配置和使用Github\n\n+ 创建一个repo，名称为`safranyu.github.io`, 其中safranyu是你的github名称，按照这个规则创建才有用哦，如下：(由于我已经提前创建好了，所以提示这个库已经存在)\n\n![](http://pan.vmccc.cn/images/2018/10/03/59D6ETwVgq/git-user.jpg)\n\n+ 回到gitbash中，配置github账户信息（YourName和YourEail都替换成你自己的）：\n\n![](http://pan.vmccc.cn/images/2018/10/03/FYeGRdAdw7/githubUser.jpg)\n\n+ 创建SSH\n  在gitbash中输入：`ssh-keygen -t rsa -C \"youremail@example.com`，生成ssh。然后按下图的方式找到`id_rsa.pub`文件的内容。\n\n![](http://pan.vmccc.cn/images/2018/10/03/hy3IQ1Z73j/gitssh.jpg)\n\n+ 将上面获取的ssh放到github中：\n\n  ![](http://pan.vmccc.cn/images/2018/10/03/FueQEPx6Lf/settings.jpg)\n\n  ![](http://pan.vmccc.cn/images/2018/10/03/FcbkdhRQul/gitsshkey.jpg)\n\n\n添加一个 `New SSH key` ，title随便取，key就填刚刚那一段。\n\n* 在gitbash中验证是否添加成功：`ssh +T git@github.com`\n\n* 完成下一步你就成功啦！\n\n3.配置\n\n* 用编辑器打开你的blog项目，修改`_config.yml`文件的一些配置(冒号之后都是有一个半角空格的)：\n\n  ```javascript\n  deploy:\n    type: git\n    repo: https://github.com/YourgithubName/YourgithubName.github.io.git\n    branch: master\n  ```\n\n* 回到gitbash中，进入你的blog目录，分别执行以下命令：\n\n  ```javascript\n  hexo clean\n  hexo generate\n  hexo server\n  ```\n\n* 打开浏览器输入：`http://localhost:4000`\n\n+ 命令解释：\n\n\t+ 清除public，当 source 文件夹中的部分资源更改过之后，特别是对文件进行了删除或者路径的改变之后，需要执行这个命令，然后重新编译。\n\t+ 编译，一般部署上去的时候都需要编译一下，编译后，会出现一个 public 文件夹，将所有的md文件编译成html文件\n\t+ 开启本地服务\n\n4.上传到github\n\n+ 执行命令(建议每次都按照如下步骤部署,可简写)：\n\n```javascript\nhexo clean\nhexo generate\nhexo deploy\n//简写\n//hexo c\n//hexo g\n//hexo d\n```\n\n* 在浏览器中输入`http://safranyu.github.io`就可以看到你的个人博客啦，是不是很兴奋！\n+ 感觉GitBash中东西太多的时候输入`clear`命令清空\n\n5.绑定个人域名\n\n- 不想绑定的自行忽略\n\n- 第一步购买域名：随便在哪个网站买一个就好了。\n\n- 第二步添加CNAME：添加记录，添加你的域名或者二级域名，比如我添加的是二级域名`blog`，记录值里填你Github里的域名,比如`safranyu.github.io`，\n   ![](http://pan.vmccc.cn/images/2018/10/05/MVFBcdDSgc/blog-cname.jpg)\n\n- 填写完后回到Github进入里的Blog库，设置里添加你的域名保存即可\n\n   ![](http://pan.vmccc.cn/images/2018/10/05/jfma6xvxOz/blog-yuming.jpg)\n\n## Hexo博客配置\n\n### 新建博文\n\n在Git Bash输入：\n\n```\nhexo new \"新博文的名字\"\n```\n\n即可在 Hexo\\source_posts 目录中找到”新博文的名字.md”这个文件。你就可以使用maekdown编辑器打开进行编写博客内容了。\n\n> hexo new [layout] “postName” #新建文章\n\n其中layout是可选参数，默认值为post。有哪些layout呢，请到scaffolds目录下查看，这些文件名称就是layout名称。当然你可以添加自己的layout，方法就是添加一个文件即可，同时你也可以编辑现有的layout，比如post的layout默认是hexo\\scaffolds\\post.md\n\n### 预览和发表\n\n```\nhexo clean\nhexo g\nhexo s\nhexo d\n```\n\n### 安装主题\n\n你可以在[Themes·Hexo](https://github.com/hexojs/hexo/wiki/Themes)或者[hexo主题](https://hexo.io/themes/)上选择你喜欢的主题，我使用的SPFK主题\n\n#### 安装SPFK主题\n\n- 安装\n```shell\ngit clone https://github.com/luuman/hexo-theme-spfk.git themes/spfk\n```\n\n- 更新\n```\ncd themes/spfk\ngit pull\n```\n\n- 配置\n\n  主题配置文件在主目录下的`_config.yml`：[_config.yml](http://luuman.github.io/2015/12/21/GitHub+Hexo/)\n\n  相关插件的安装：请参照[Hexo插件安装](http://localhost:4000/2015/12/27/Hexo-plug/)\n\n```\n### Header\nD:\\blog\\themes\\spfk\\_config.yml\nmenu:\n  主页: /\n  所有文章: /archives\n  # 随笔: /tags/随笔\n    #是否开启多说评论，填写你在多说申请的项目名称 duoshuo: duoshuo-key（http://duoshuo-key.duoshuo.com/）\n    #若使用disqus，请在博客config文件中填写disqus_shortname，并关闭多说评论\n    duoshuo: true\n网页侧边栏背景:\n# Background | 背景\n## \"background_sum\": show images form /source/background/的图片数目background_sum: 24\n## \"on: true\": 自动随机显示这5张图片\n## \"on: false\": 自定义显示图片设置，background_image: 109\nbackground:\n  on: true\n  #on: false\n  background_sum: 24\n  background_image: 109\n```\n\n- 多说评论\n\n```\nduoshuo: \n  on: true\n  domain: luuman\n  # 是否开启多说评论，http://duoshuo.com/create-site/\n  # 使用上面网址登陆你的多说，然后创建站点，在 domain 中填入你设定的域名前半部分\n  # http://<要填的部分>.duoshuo.com (domain只填上<>里的内容，不要填整个网址)\nJ:\\Hexo\\Hexo\\themes\\spfk\\source\\css\\多说.css\n```\n\n添加方法：打开「后台」 > 「多说评论」 > 「设置」 > 「基本设置」 > 然后把样式粘贴到「自定义CSS」文本框 > 「保存」\n\n具体样式请参照：[多说.css](https://github.com/luuman/luuman.github.io/blob/master/resoures/%E5%A4%9A%E8%AF%B4.css)\n\n- 头像\n\n```shell\n# 头像尺寸大概200*200px\nD:\\blog\\themes\\spfk\\source\\img\\head.jpg\n\n```\n\n- icon 图标\n\n```shell\n替换路径: /spfk/source/apple-touch-icon.png\nD:\\blog\\themes\\spfk\\source\\img\\favicon.png\n\n```\n\n- 背景\n\n```shell\n# Background | 背景\n# \"background_sum\": show images form /source/background/的图片数目\n# \"on: true\": 自动随机显示这5张图片\n# \"on: false\": 自定义显示图片设置 background_image: 5\nbackground:\n  on: true\n  #on: false\n  background_sum: 24\n  background_image: 109\n```\n\n- 文章摘要\n\n```shell\ntitle: 前端知识体系\ndate: 2018-10-07 22:08:02\ndescription: \ncategories:\n- HTML 书籍\n- HTML 书籍\ntags:\n- HTML 标签 \n- HTML 标签\ntoc: true 文章目录\nauthor:\ncomments:\noriginal:\npermalink: \n---\n　　** 前端知识体系：**<Excerpt in index | 首页摘要> \n+ <!-- more -->\n<The rest of contents | 余下全文>\n```\n\n- 404 Page:\n```shell\nhexo new page 404\n#And then set permalink: /404 in /source/404/index.md front matter.\n#在 Hexo 中创建匹配主题的404页面\n```\n\n### 主题结构\n\n```\n.\n├── languages            #多语言\n|   ├── default.yml      #默认语言\n|   └── zh-CN.yml        #中文语言\n├── layout               #布局，根目录下的*.ejs文件是对主页，分页，存档等的控制\n|   ├── _partial         #局部的布局，此目录下的*.ejs是对头尾等局部的控制\n|   └── _widget          #小挂件的布局，页面下方小挂件的控制\n├── source               #源码\n|   ├── css              #css源码 \n|   |   ├── _base        #*.styl基础css\n|   |   ├── _partial     #*.styl局部css\n|   |   ├── fonts        #字体\n|   |   ├── images       #图片\n|   |   └── style.styl   #*.styl引入需要的css源码\n|   ├── fancybox         #fancybox效果源码\n|   └── js               #javascript源代码\n├── _config.yml          #主题配置文件\n└── README.md            #用GitHub的都知道\n```\n\n### 参考资料\n\n[hexo官方文档](https://hexo.io/zh-cn/docs/)\n\n[luuman](https://github.com/luuman)\n\n[hexo从零开始到搭建完整](https://www.cnblogs.com/visugar/p/6821777.html)\n\n[Cherryblog](https://cherryblog.site/Use-Gitpagehexo-to-develop-their-own-blog.html)\n\n\n\n","slug":"github搭建hexo博客","published":1,"updated":"2020-05-18T16:35:00.482Z","layout":"post","photos":[],"link":"","_id":"cl78qfoqi006nqic9prgpm4vv","content":"<h1 id=\"Github-搭建Hexo博客\"><a href=\"#Github-搭建Hexo博客\" class=\"headerlink\" title=\"Github 搭建Hexo博客\"></a>Github 搭建Hexo博客</h1><p>利用Github page搭建一个人博客，在没有特殊需求，又想快速拥有一个个人博客，hexo是个不错的选择，搭建简单，无需另外购买服务器空间和域名，只需要有个Github账号即可。搭建简单，能够坚持维护和写文章难。。。</p>\n<hr>\n<h2 id=\"环境准备\"><a href=\"#环境准备\" class=\"headerlink\" title=\"环境准备\"></a>环境准备</h2><p>1.安装Node.js</p>\n<p>Hexo是基于nodeJS环境的静态博客</p>\n<p>前往<a href=\"https://nodejs.org/\" target=\"_blank\" rel=\"noopener\">Node官网</a>下载最新版本,一路安装即可。</p>\n<p>查看是否安装好了，打开cdm 运行<code>node -V</code>查看版本号 </p>\n<p>2.安装Git</p>\n<p><a href=\"https://git-scm.com/downloads/\" target=\"_blank\" rel=\"noopener\">官网下载</a></p>\n<p>右键打Git Bash查看版本 <code>git version</code></p>\n<p>3.Sublime</p>\n<p>随便一款文本编辑器，这里我用<a href=\"http://www.sublimetext.com/3\" target=\"_blank\" rel=\"noopener\">Sublime</a>。支持各种编程语言和文件格式，当然也支持Markdown语法 。</p>\n<h2 id=\"安装步骤\"><a href=\"#安装步骤\" class=\"headerlink\" title=\"安装步骤\"></a>安装步骤</h2><p>1.安装Hexo</p>\n<ul>\n<li><p>先创建一个文件夹（用来存放所有blog的东西）然后<code>cd</code>到该文件夹下</p>\n</li>\n<li><p>安装hexo命令：<code>npm i +g hexo</code></p>\n</li>\n<li><p>安装完后查看版本</p>\n<p><img src=\"http://pan.vmccc.cn/images/2018/10/02/8jDSlPigzd/githexo.jpg\" alt=\"\"></p>\n</li>\n<li><p>初始化命令：<code>hexo init</code> ，初始化完成之后打开所在的文件夹可以看到以下文件：</p>\n</li>\n</ul>\n<p><img src=\"http://pan.vmccc.cn/images/2018/10/03/FWonyhHnxo/git-dir.jpg\" alt=\"\"></p>\n<ul>\n<li><p>解释一下：</p>\n<ul>\n<li>node_modules：是依赖包</li>\n<li>public：存放的是生成的页面</li>\n<li>scaffolds：命令生成文章等的模板</li>\n<li>source：用命令创建的各种文章</li>\n<li>themes：主题</li>\n<li>_config.yml：整个博客的配置</li>\n<li>db.json：source解析所得到的</li>\n<li>package.json：项目所需模块项目的配置信息</li>\n</ul>\n</li>\n<li><p>做好这些前置工作之后接下来的就是各种配配配置了。</p>\n</li>\n</ul>\n<h3 id=\"Github注册与配置\"><a href=\"#Github注册与配置\" class=\"headerlink\" title=\"Github注册与配置\"></a>Github注册与配置</h3><p>1.注册<br>访问：<a href=\"https://luuman.github.io/2015/12/27/Hexo/GitHubHexo/0\" target=\"_blank\" rel=\"noopener\">GitHub</a>，注册你的username和邮箱，邮箱十分重要，GitHub上很多通知都是通过邮箱的。注册过程比较简单。</p>\n<p>2.配置和使用Github</p>\n<ul>\n<li>创建一个repo，名称为<code>safranyu.github.io</code>, 其中safranyu是你的github名称，按照这个规则创建才有用哦，如下：(由于我已经提前创建好了，所以提示这个库已经存在)</li>\n</ul>\n<p><img src=\"http://pan.vmccc.cn/images/2018/10/03/59D6ETwVgq/git-user.jpg\" alt=\"\"></p>\n<ul>\n<li>回到gitbash中，配置github账户信息（YourName和YourEail都替换成你自己的）：</li>\n</ul>\n<p><img src=\"http://pan.vmccc.cn/images/2018/10/03/FYeGRdAdw7/githubUser.jpg\" alt=\"\"></p>\n<ul>\n<li>创建SSH<br>在gitbash中输入：<code>ssh-keygen -t rsa -C &quot;youremail@example.com</code>，生成ssh。然后按下图的方式找到<code>id_rsa.pub</code>文件的内容。</li>\n</ul>\n<p><img src=\"http://pan.vmccc.cn/images/2018/10/03/hy3IQ1Z73j/gitssh.jpg\" alt=\"\"></p>\n<ul>\n<li><p>将上面获取的ssh放到github中：</p>\n<p><img src=\"http://pan.vmccc.cn/images/2018/10/03/FueQEPx6Lf/settings.jpg\" alt=\"\"></p>\n<p><img src=\"http://pan.vmccc.cn/images/2018/10/03/FcbkdhRQul/gitsshkey.jpg\" alt=\"\"></p>\n</li>\n</ul>\n<p>添加一个 <code>New SSH key</code> ，title随便取，key就填刚刚那一段。</p>\n<ul>\n<li><p>在gitbash中验证是否添加成功：<code>ssh +T git@github.com</code></p>\n</li>\n<li><p>完成下一步你就成功啦！</p>\n</li>\n</ul>\n<p>3.配置</p>\n<ul>\n<li><p>用编辑器打开你的blog项目，修改<code>_config.yml</code>文件的一些配置(冒号之后都是有一个半角空格的)：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repo: https:<span class=\"comment\">//github.com/YourgithubName/YourgithubName.github.io.git</span></span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>回到gitbash中，进入你的blog目录，分别执行以下命令：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo generate</span><br><span class=\"line\">hexo server</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>打开浏览器输入：<code>http://localhost:4000</code></p>\n</li>\n</ul>\n<ul>\n<li><p>命令解释：</p>\n<ul>\n<li>清除public，当 source 文件夹中的部分资源更改过之后，特别是对文件进行了删除或者路径的改变之后，需要执行这个命令，然后重新编译。</li>\n<li>编译，一般部署上去的时候都需要编译一下，编译后，会出现一个 public 文件夹，将所有的md文件编译成html文件</li>\n<li>开启本地服务</li>\n</ul>\n</li>\n</ul>\n<p>4.上传到github</p>\n<ul>\n<li>执行命令(建议每次都按照如下步骤部署,可简写)：</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo generate</span><br><span class=\"line\">hexo deploy</span><br><span class=\"line\"><span class=\"comment\">//简写</span></span><br><span class=\"line\"><span class=\"comment\">//hexo c</span></span><br><span class=\"line\"><span class=\"comment\">//hexo g</span></span><br><span class=\"line\"><span class=\"comment\">//hexo d</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>在浏览器中输入<code>http://safranyu.github.io</code>就可以看到你的个人博客啦，是不是很兴奋！</li>\n</ul>\n<ul>\n<li>感觉GitBash中东西太多的时候输入<code>clear</code>命令清空</li>\n</ul>\n<p>5.绑定个人域名</p>\n<ul>\n<li><p>不想绑定的自行忽略</p>\n</li>\n<li><p>第一步购买域名：随便在哪个网站买一个就好了。</p>\n</li>\n<li><p>第二步添加CNAME：添加记录，添加你的域名或者二级域名，比如我添加的是二级域名<code>blog</code>，记录值里填你Github里的域名,比如<code>safranyu.github.io</code>，<br> <img src=\"http://pan.vmccc.cn/images/2018/10/05/MVFBcdDSgc/blog-cname.jpg\" alt=\"\"></p>\n</li>\n<li><p>填写完后回到Github进入里的Blog库，设置里添加你的域名保存即可</p>\n<p> <img src=\"http://pan.vmccc.cn/images/2018/10/05/jfma6xvxOz/blog-yuming.jpg\" alt=\"\"></p>\n</li>\n</ul>\n<h2 id=\"Hexo博客配置\"><a href=\"#Hexo博客配置\" class=\"headerlink\" title=\"Hexo博客配置\"></a>Hexo博客配置</h2><h3 id=\"新建博文\"><a href=\"#新建博文\" class=\"headerlink\" title=\"新建博文\"></a>新建博文</h3><p>在Git Bash输入：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new &quot;新博文的名字&quot;</span><br></pre></td></tr></table></figure>\n<p>即可在 Hexo\\source_posts 目录中找到”新博文的名字.md”这个文件。你就可以使用maekdown编辑器打开进行编写博客内容了。</p>\n<blockquote>\n<p>hexo new [layout] “postName” #新建文章</p>\n</blockquote>\n<p>其中layout是可选参数，默认值为post。有哪些layout呢，请到scaffolds目录下查看，这些文件名称就是layout名称。当然你可以添加自己的layout，方法就是添加一个文件即可，同时你也可以编辑现有的layout，比如post的layout默认是hexo\\scaffolds\\post.md</p>\n<h3 id=\"预览和发表\"><a href=\"#预览和发表\" class=\"headerlink\" title=\"预览和发表\"></a>预览和发表</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo s</span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n<h3 id=\"安装主题\"><a href=\"#安装主题\" class=\"headerlink\" title=\"安装主题\"></a>安装主题</h3><p>你可以在<a href=\"https://github.com/hexojs/hexo/wiki/Themes\" target=\"_blank\" rel=\"noopener\">Themes·Hexo</a>或者<a href=\"https://hexo.io/themes/\" target=\"_blank\" rel=\"noopener\">hexo主题</a>上选择你喜欢的主题，我使用的SPFK主题</p>\n<h4 id=\"安装SPFK主题\"><a href=\"#安装SPFK主题\" class=\"headerlink\" title=\"安装SPFK主题\"></a>安装SPFK主题</h4><ul>\n<li><p>安装</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/luuman/hexo-theme-spfk.git themes/spfk</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>更新</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd themes/spfk</span><br><span class=\"line\">git pull</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>配置</p>\n<p>主题配置文件在主目录下的<code>_config.yml</code>：<a href=\"http://luuman.github.io/2015/12/21/GitHub+Hexo/\" target=\"_blank\" rel=\"noopener\">_config.yml</a></p>\n<p>相关插件的安装：请参照<a href=\"http://localhost:4000/2015/12/27/Hexo-plug/\" target=\"_blank\" rel=\"noopener\">Hexo插件安装</a></p>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">### Header</span><br><span class=\"line\">D:\\blog\\themes\\spfk\\_config.yml</span><br><span class=\"line\">menu:</span><br><span class=\"line\">  主页: /</span><br><span class=\"line\">  所有文章: /archives</span><br><span class=\"line\">  # 随笔: /tags/随笔</span><br><span class=\"line\">    #是否开启多说评论，填写你在多说申请的项目名称 duoshuo: duoshuo-key（http://duoshuo-key.duoshuo.com/）</span><br><span class=\"line\">    #若使用disqus，请在博客config文件中填写disqus_shortname，并关闭多说评论</span><br><span class=\"line\">    duoshuo: true</span><br><span class=\"line\">网页侧边栏背景:</span><br><span class=\"line\"># Background | 背景</span><br><span class=\"line\">## &quot;background_sum&quot;: show images form /source/background/的图片数目background_sum: 24</span><br><span class=\"line\">## &quot;on: true&quot;: 自动随机显示这5张图片</span><br><span class=\"line\">## &quot;on: false&quot;: 自定义显示图片设置，background_image: 109</span><br><span class=\"line\">background:</span><br><span class=\"line\">  on: true</span><br><span class=\"line\">  #on: false</span><br><span class=\"line\">  background_sum: 24</span><br><span class=\"line\">  background_image: 109</span><br></pre></td></tr></table></figure>\n<ul>\n<li>多说评论</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">duoshuo: </span><br><span class=\"line\">  on: true</span><br><span class=\"line\">  domain: luuman</span><br><span class=\"line\">  # 是否开启多说评论，http://duoshuo.com/create-site/</span><br><span class=\"line\">  # 使用上面网址登陆你的多说，然后创建站点，在 domain 中填入你设定的域名前半部分</span><br><span class=\"line\">  # http://&lt;要填的部分&gt;.duoshuo.com (domain只填上&lt;&gt;里的内容，不要填整个网址)</span><br><span class=\"line\">J:\\Hexo\\Hexo\\themes\\spfk\\source\\css\\多说.css</span><br></pre></td></tr></table></figure>\n<p>添加方法：打开「后台」 &gt; 「多说评论」 &gt; 「设置」 &gt; 「基本设置」 &gt; 然后把样式粘贴到「自定义CSS」文本框 &gt; 「保存」</p>\n<p>具体样式请参照：<a href=\"https://github.com/luuman/luuman.github.io/blob/master/resoures/%E5%A4%9A%E8%AF%B4.css\" target=\"_blank\" rel=\"noopener\">多说.css</a></p>\n<ul>\n<li>头像</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 头像尺寸大概200*200px</span><br><span class=\"line\">D:\\blog\\themes\\spfk\\source\\img\\head.jpg</span><br></pre></td></tr></table></figure>\n<ul>\n<li>icon 图标</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">替换路径: /spfk/source/apple-touch-icon.png</span><br><span class=\"line\">D:\\blog\\themes\\spfk\\source\\img\\favicon.png</span><br></pre></td></tr></table></figure>\n<ul>\n<li>背景</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> Background | 背景</span><br><span class=\"line\"><span class=\"meta\">#</span> \"background_sum\": show images form /source/background/的图片数目</span><br><span class=\"line\"><span class=\"meta\">#</span> \"on: true\": 自动随机显示这5张图片</span><br><span class=\"line\"><span class=\"meta\">#</span> \"on: false\": 自定义显示图片设置 background_image: 5</span><br><span class=\"line\">background:</span><br><span class=\"line\">  on: true</span><br><span class=\"line\"><span class=\"meta\">  #</span>on: false</span><br><span class=\"line\">  background_sum: 24</span><br><span class=\"line\">  background_image: 109</span><br></pre></td></tr></table></figure>\n<ul>\n<li>文章摘要</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: 前端知识体系</span><br><span class=\"line\">date: 2018-10-07 22:08:02</span><br><span class=\"line\">description: </span><br><span class=\"line\">categories:</span><br><span class=\"line\">- HTML 书籍</span><br><span class=\"line\">- HTML 书籍</span><br><span class=\"line\">tags:</span><br><span class=\"line\">- HTML 标签 </span><br><span class=\"line\">- HTML 标签</span><br><span class=\"line\">toc: true 文章目录</span><br><span class=\"line\">author:</span><br><span class=\"line\">comments:</span><br><span class=\"line\">original:</span><br><span class=\"line\">permalink: </span><br><span class=\"line\">---</span><br><span class=\"line\">　　** 前端知识体系：**&lt;Excerpt in index | 首页摘要&gt; </span><br><span class=\"line\">+ &lt;!-- more --&gt;</span><br><span class=\"line\">&lt;The rest of contents | 余下全文&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>404 Page:<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page 404</span><br><span class=\"line\"><span class=\"meta\">#</span>And then set permalink: /404 in /source/404/index.md front matter.</span><br><span class=\"line\"><span class=\"meta\">#</span>在 Hexo 中创建匹配主题的404页面</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"主题结构\"><a href=\"#主题结构\" class=\"headerlink\" title=\"主题结构\"></a>主题结构</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── languages            #多语言</span><br><span class=\"line\">|   ├── default.yml      #默认语言</span><br><span class=\"line\">|   └── zh-CN.yml        #中文语言</span><br><span class=\"line\">├── layout               #布局，根目录下的*.ejs文件是对主页，分页，存档等的控制</span><br><span class=\"line\">|   ├── _partial         #局部的布局，此目录下的*.ejs是对头尾等局部的控制</span><br><span class=\"line\">|   └── _widget          #小挂件的布局，页面下方小挂件的控制</span><br><span class=\"line\">├── source               #源码</span><br><span class=\"line\">|   ├── css              #css源码 </span><br><span class=\"line\">|   |   ├── _base        #*.styl基础css</span><br><span class=\"line\">|   |   ├── _partial     #*.styl局部css</span><br><span class=\"line\">|   |   ├── fonts        #字体</span><br><span class=\"line\">|   |   ├── images       #图片</span><br><span class=\"line\">|   |   └── style.styl   #*.styl引入需要的css源码</span><br><span class=\"line\">|   ├── fancybox         #fancybox效果源码</span><br><span class=\"line\">|   └── js               #javascript源代码</span><br><span class=\"line\">├── _config.yml          #主题配置文件</span><br><span class=\"line\">└── README.md            #用GitHub的都知道</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h3><p><a href=\"https://hexo.io/zh-cn/docs/\" target=\"_blank\" rel=\"noopener\">hexo官方文档</a></p>\n<p><a href=\"https://github.com/luuman\" target=\"_blank\" rel=\"noopener\">luuman</a></p>\n<p><a href=\"https://www.cnblogs.com/visugar/p/6821777.html\" target=\"_blank\" rel=\"noopener\">hexo从零开始到搭建完整</a></p>\n<p><a href=\"https://cherryblog.site/Use-Gitpagehexo-to-develop-their-own-blog.html\" target=\"_blank\" rel=\"noopener\">Cherryblog</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Github-搭建Hexo博客\"><a href=\"#Github-搭建Hexo博客\" class=\"headerlink\" title=\"Github 搭建Hexo博客\"></a>Github 搭建Hexo博客</h1><p>利用Github page搭建一个人博客，在没有特殊需求，又想快速拥有一个个人博客，hexo是个不错的选择，搭建简单，无需另外购买服务器空间和域名，只需要有个Github账号即可。搭建简单，能够坚持维护和写文章难。。。</p>\n<hr>\n<h2 id=\"环境准备\"><a href=\"#环境准备\" class=\"headerlink\" title=\"环境准备\"></a>环境准备</h2><p>1.安装Node.js</p>\n<p>Hexo是基于nodeJS环境的静态博客</p>\n<p>前往<a href=\"https://nodejs.org/\" target=\"_blank\" rel=\"noopener\">Node官网</a>下载最新版本,一路安装即可。</p>\n<p>查看是否安装好了，打开cdm 运行<code>node -V</code>查看版本号 </p>\n<p>2.安装Git</p>\n<p><a href=\"https://git-scm.com/downloads/\" target=\"_blank\" rel=\"noopener\">官网下载</a></p>\n<p>右键打Git Bash查看版本 <code>git version</code></p>\n<p>3.Sublime</p>\n<p>随便一款文本编辑器，这里我用<a href=\"http://www.sublimetext.com/3\" target=\"_blank\" rel=\"noopener\">Sublime</a>。支持各种编程语言和文件格式，当然也支持Markdown语法 。</p>\n<h2 id=\"安装步骤\"><a href=\"#安装步骤\" class=\"headerlink\" title=\"安装步骤\"></a>安装步骤</h2><p>1.安装Hexo</p>\n<ul>\n<li><p>先创建一个文件夹（用来存放所有blog的东西）然后<code>cd</code>到该文件夹下</p>\n</li>\n<li><p>安装hexo命令：<code>npm i +g hexo</code></p>\n</li>\n<li><p>安装完后查看版本</p>\n<p><img src=\"http://pan.vmccc.cn/images/2018/10/02/8jDSlPigzd/githexo.jpg\" alt=\"\"></p>\n</li>\n<li><p>初始化命令：<code>hexo init</code> ，初始化完成之后打开所在的文件夹可以看到以下文件：</p>\n</li>\n</ul>\n<p><img src=\"http://pan.vmccc.cn/images/2018/10/03/FWonyhHnxo/git-dir.jpg\" alt=\"\"></p>\n<ul>\n<li><p>解释一下：</p>\n<ul>\n<li>node_modules：是依赖包</li>\n<li>public：存放的是生成的页面</li>\n<li>scaffolds：命令生成文章等的模板</li>\n<li>source：用命令创建的各种文章</li>\n<li>themes：主题</li>\n<li>_config.yml：整个博客的配置</li>\n<li>db.json：source解析所得到的</li>\n<li>package.json：项目所需模块项目的配置信息</li>\n</ul>\n</li>\n<li><p>做好这些前置工作之后接下来的就是各种配配配置了。</p>\n</li>\n</ul>\n<h3 id=\"Github注册与配置\"><a href=\"#Github注册与配置\" class=\"headerlink\" title=\"Github注册与配置\"></a>Github注册与配置</h3><p>1.注册<br>访问：<a href=\"https://luuman.github.io/2015/12/27/Hexo/GitHubHexo/0\" target=\"_blank\" rel=\"noopener\">GitHub</a>，注册你的username和邮箱，邮箱十分重要，GitHub上很多通知都是通过邮箱的。注册过程比较简单。</p>\n<p>2.配置和使用Github</p>\n<ul>\n<li>创建一个repo，名称为<code>safranyu.github.io</code>, 其中safranyu是你的github名称，按照这个规则创建才有用哦，如下：(由于我已经提前创建好了，所以提示这个库已经存在)</li>\n</ul>\n<p><img src=\"http://pan.vmccc.cn/images/2018/10/03/59D6ETwVgq/git-user.jpg\" alt=\"\"></p>\n<ul>\n<li>回到gitbash中，配置github账户信息（YourName和YourEail都替换成你自己的）：</li>\n</ul>\n<p><img src=\"http://pan.vmccc.cn/images/2018/10/03/FYeGRdAdw7/githubUser.jpg\" alt=\"\"></p>\n<ul>\n<li>创建SSH<br>在gitbash中输入：<code>ssh-keygen -t rsa -C &quot;youremail@example.com</code>，生成ssh。然后按下图的方式找到<code>id_rsa.pub</code>文件的内容。</li>\n</ul>\n<p><img src=\"http://pan.vmccc.cn/images/2018/10/03/hy3IQ1Z73j/gitssh.jpg\" alt=\"\"></p>\n<ul>\n<li><p>将上面获取的ssh放到github中：</p>\n<p><img src=\"http://pan.vmccc.cn/images/2018/10/03/FueQEPx6Lf/settings.jpg\" alt=\"\"></p>\n<p><img src=\"http://pan.vmccc.cn/images/2018/10/03/FcbkdhRQul/gitsshkey.jpg\" alt=\"\"></p>\n</li>\n</ul>\n<p>添加一个 <code>New SSH key</code> ，title随便取，key就填刚刚那一段。</p>\n<ul>\n<li><p>在gitbash中验证是否添加成功：<code>ssh +T git@github.com</code></p>\n</li>\n<li><p>完成下一步你就成功啦！</p>\n</li>\n</ul>\n<p>3.配置</p>\n<ul>\n<li><p>用编辑器打开你的blog项目，修改<code>_config.yml</code>文件的一些配置(冒号之后都是有一个半角空格的)：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repo: https:<span class=\"comment\">//github.com/YourgithubName/YourgithubName.github.io.git</span></span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>回到gitbash中，进入你的blog目录，分别执行以下命令：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo generate</span><br><span class=\"line\">hexo server</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>打开浏览器输入：<code>http://localhost:4000</code></p>\n</li>\n</ul>\n<ul>\n<li><p>命令解释：</p>\n<ul>\n<li>清除public，当 source 文件夹中的部分资源更改过之后，特别是对文件进行了删除或者路径的改变之后，需要执行这个命令，然后重新编译。</li>\n<li>编译，一般部署上去的时候都需要编译一下，编译后，会出现一个 public 文件夹，将所有的md文件编译成html文件</li>\n<li>开启本地服务</li>\n</ul>\n</li>\n</ul>\n<p>4.上传到github</p>\n<ul>\n<li>执行命令(建议每次都按照如下步骤部署,可简写)：</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo generate</span><br><span class=\"line\">hexo deploy</span><br><span class=\"line\"><span class=\"comment\">//简写</span></span><br><span class=\"line\"><span class=\"comment\">//hexo c</span></span><br><span class=\"line\"><span class=\"comment\">//hexo g</span></span><br><span class=\"line\"><span class=\"comment\">//hexo d</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>在浏览器中输入<code>http://safranyu.github.io</code>就可以看到你的个人博客啦，是不是很兴奋！</li>\n</ul>\n<ul>\n<li>感觉GitBash中东西太多的时候输入<code>clear</code>命令清空</li>\n</ul>\n<p>5.绑定个人域名</p>\n<ul>\n<li><p>不想绑定的自行忽略</p>\n</li>\n<li><p>第一步购买域名：随便在哪个网站买一个就好了。</p>\n</li>\n<li><p>第二步添加CNAME：添加记录，添加你的域名或者二级域名，比如我添加的是二级域名<code>blog</code>，记录值里填你Github里的域名,比如<code>safranyu.github.io</code>，<br> <img src=\"http://pan.vmccc.cn/images/2018/10/05/MVFBcdDSgc/blog-cname.jpg\" alt=\"\"></p>\n</li>\n<li><p>填写完后回到Github进入里的Blog库，设置里添加你的域名保存即可</p>\n<p> <img src=\"http://pan.vmccc.cn/images/2018/10/05/jfma6xvxOz/blog-yuming.jpg\" alt=\"\"></p>\n</li>\n</ul>\n<h2 id=\"Hexo博客配置\"><a href=\"#Hexo博客配置\" class=\"headerlink\" title=\"Hexo博客配置\"></a>Hexo博客配置</h2><h3 id=\"新建博文\"><a href=\"#新建博文\" class=\"headerlink\" title=\"新建博文\"></a>新建博文</h3><p>在Git Bash输入：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new &quot;新博文的名字&quot;</span><br></pre></td></tr></table></figure>\n<p>即可在 Hexo\\source_posts 目录中找到”新博文的名字.md”这个文件。你就可以使用maekdown编辑器打开进行编写博客内容了。</p>\n<blockquote>\n<p>hexo new [layout] “postName” #新建文章</p>\n</blockquote>\n<p>其中layout是可选参数，默认值为post。有哪些layout呢，请到scaffolds目录下查看，这些文件名称就是layout名称。当然你可以添加自己的layout，方法就是添加一个文件即可，同时你也可以编辑现有的layout，比如post的layout默认是hexo\\scaffolds\\post.md</p>\n<h3 id=\"预览和发表\"><a href=\"#预览和发表\" class=\"headerlink\" title=\"预览和发表\"></a>预览和发表</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo s</span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n<h3 id=\"安装主题\"><a href=\"#安装主题\" class=\"headerlink\" title=\"安装主题\"></a>安装主题</h3><p>你可以在<a href=\"https://github.com/hexojs/hexo/wiki/Themes\" target=\"_blank\" rel=\"noopener\">Themes·Hexo</a>或者<a href=\"https://hexo.io/themes/\" target=\"_blank\" rel=\"noopener\">hexo主题</a>上选择你喜欢的主题，我使用的SPFK主题</p>\n<h4 id=\"安装SPFK主题\"><a href=\"#安装SPFK主题\" class=\"headerlink\" title=\"安装SPFK主题\"></a>安装SPFK主题</h4><ul>\n<li><p>安装</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/luuman/hexo-theme-spfk.git themes/spfk</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>更新</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd themes/spfk</span><br><span class=\"line\">git pull</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>配置</p>\n<p>主题配置文件在主目录下的<code>_config.yml</code>：<a href=\"http://luuman.github.io/2015/12/21/GitHub+Hexo/\" target=\"_blank\" rel=\"noopener\">_config.yml</a></p>\n<p>相关插件的安装：请参照<a href=\"http://localhost:4000/2015/12/27/Hexo-plug/\" target=\"_blank\" rel=\"noopener\">Hexo插件安装</a></p>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">### Header</span><br><span class=\"line\">D:\\blog\\themes\\spfk\\_config.yml</span><br><span class=\"line\">menu:</span><br><span class=\"line\">  主页: /</span><br><span class=\"line\">  所有文章: /archives</span><br><span class=\"line\">  # 随笔: /tags/随笔</span><br><span class=\"line\">    #是否开启多说评论，填写你在多说申请的项目名称 duoshuo: duoshuo-key（http://duoshuo-key.duoshuo.com/）</span><br><span class=\"line\">    #若使用disqus，请在博客config文件中填写disqus_shortname，并关闭多说评论</span><br><span class=\"line\">    duoshuo: true</span><br><span class=\"line\">网页侧边栏背景:</span><br><span class=\"line\"># Background | 背景</span><br><span class=\"line\">## &quot;background_sum&quot;: show images form /source/background/的图片数目background_sum: 24</span><br><span class=\"line\">## &quot;on: true&quot;: 自动随机显示这5张图片</span><br><span class=\"line\">## &quot;on: false&quot;: 自定义显示图片设置，background_image: 109</span><br><span class=\"line\">background:</span><br><span class=\"line\">  on: true</span><br><span class=\"line\">  #on: false</span><br><span class=\"line\">  background_sum: 24</span><br><span class=\"line\">  background_image: 109</span><br></pre></td></tr></table></figure>\n<ul>\n<li>多说评论</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">duoshuo: </span><br><span class=\"line\">  on: true</span><br><span class=\"line\">  domain: luuman</span><br><span class=\"line\">  # 是否开启多说评论，http://duoshuo.com/create-site/</span><br><span class=\"line\">  # 使用上面网址登陆你的多说，然后创建站点，在 domain 中填入你设定的域名前半部分</span><br><span class=\"line\">  # http://&lt;要填的部分&gt;.duoshuo.com (domain只填上&lt;&gt;里的内容，不要填整个网址)</span><br><span class=\"line\">J:\\Hexo\\Hexo\\themes\\spfk\\source\\css\\多说.css</span><br></pre></td></tr></table></figure>\n<p>添加方法：打开「后台」 &gt; 「多说评论」 &gt; 「设置」 &gt; 「基本设置」 &gt; 然后把样式粘贴到「自定义CSS」文本框 &gt; 「保存」</p>\n<p>具体样式请参照：<a href=\"https://github.com/luuman/luuman.github.io/blob/master/resoures/%E5%A4%9A%E8%AF%B4.css\" target=\"_blank\" rel=\"noopener\">多说.css</a></p>\n<ul>\n<li>头像</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 头像尺寸大概200*200px</span><br><span class=\"line\">D:\\blog\\themes\\spfk\\source\\img\\head.jpg</span><br></pre></td></tr></table></figure>\n<ul>\n<li>icon 图标</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">替换路径: /spfk/source/apple-touch-icon.png</span><br><span class=\"line\">D:\\blog\\themes\\spfk\\source\\img\\favicon.png</span><br></pre></td></tr></table></figure>\n<ul>\n<li>背景</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> Background | 背景</span><br><span class=\"line\"><span class=\"meta\">#</span> \"background_sum\": show images form /source/background/的图片数目</span><br><span class=\"line\"><span class=\"meta\">#</span> \"on: true\": 自动随机显示这5张图片</span><br><span class=\"line\"><span class=\"meta\">#</span> \"on: false\": 自定义显示图片设置 background_image: 5</span><br><span class=\"line\">background:</span><br><span class=\"line\">  on: true</span><br><span class=\"line\"><span class=\"meta\">  #</span>on: false</span><br><span class=\"line\">  background_sum: 24</span><br><span class=\"line\">  background_image: 109</span><br></pre></td></tr></table></figure>\n<ul>\n<li>文章摘要</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: 前端知识体系</span><br><span class=\"line\">date: 2018-10-07 22:08:02</span><br><span class=\"line\">description: </span><br><span class=\"line\">categories:</span><br><span class=\"line\">- HTML 书籍</span><br><span class=\"line\">- HTML 书籍</span><br><span class=\"line\">tags:</span><br><span class=\"line\">- HTML 标签 </span><br><span class=\"line\">- HTML 标签</span><br><span class=\"line\">toc: true 文章目录</span><br><span class=\"line\">author:</span><br><span class=\"line\">comments:</span><br><span class=\"line\">original:</span><br><span class=\"line\">permalink: </span><br><span class=\"line\">---</span><br><span class=\"line\">　　** 前端知识体系：**&lt;Excerpt in index | 首页摘要&gt; </span><br><span class=\"line\">+ &lt;!-- more --&gt;</span><br><span class=\"line\">&lt;The rest of contents | 余下全文&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>404 Page:<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page 404</span><br><span class=\"line\"><span class=\"meta\">#</span>And then set permalink: /404 in /source/404/index.md front matter.</span><br><span class=\"line\"><span class=\"meta\">#</span>在 Hexo 中创建匹配主题的404页面</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"主题结构\"><a href=\"#主题结构\" class=\"headerlink\" title=\"主题结构\"></a>主题结构</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── languages            #多语言</span><br><span class=\"line\">|   ├── default.yml      #默认语言</span><br><span class=\"line\">|   └── zh-CN.yml        #中文语言</span><br><span class=\"line\">├── layout               #布局，根目录下的*.ejs文件是对主页，分页，存档等的控制</span><br><span class=\"line\">|   ├── _partial         #局部的布局，此目录下的*.ejs是对头尾等局部的控制</span><br><span class=\"line\">|   └── _widget          #小挂件的布局，页面下方小挂件的控制</span><br><span class=\"line\">├── source               #源码</span><br><span class=\"line\">|   ├── css              #css源码 </span><br><span class=\"line\">|   |   ├── _base        #*.styl基础css</span><br><span class=\"line\">|   |   ├── _partial     #*.styl局部css</span><br><span class=\"line\">|   |   ├── fonts        #字体</span><br><span class=\"line\">|   |   ├── images       #图片</span><br><span class=\"line\">|   |   └── style.styl   #*.styl引入需要的css源码</span><br><span class=\"line\">|   ├── fancybox         #fancybox效果源码</span><br><span class=\"line\">|   └── js               #javascript源代码</span><br><span class=\"line\">├── _config.yml          #主题配置文件</span><br><span class=\"line\">└── README.md            #用GitHub的都知道</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h3><p><a href=\"https://hexo.io/zh-cn/docs/\" target=\"_blank\" rel=\"noopener\">hexo官方文档</a></p>\n<p><a href=\"https://github.com/luuman\" target=\"_blank\" rel=\"noopener\">luuman</a></p>\n<p><a href=\"https://www.cnblogs.com/visugar/p/6821777.html\" target=\"_blank\" rel=\"noopener\">hexo从零开始到搭建完整</a></p>\n<p><a href=\"https://cherryblog.site/Use-Gitpagehexo-to-develop-their-own-blog.html\" target=\"_blank\" rel=\"noopener\">Cherryblog</a></p>\n"},{"title":"jQuer--动画篇","comments":1,"abbrlink":"81a571d4","date":"2018-10-05T14:45:52.000Z","_content":"\n# jQuery——动画篇（隐藏显示、上卷下拉、淡入淡出、animate、stop、each）\n\n## 隐藏显示\n\n### hide方法\n\n```javascript\n$elem.hide()\n.hide( options )hide()//就会匹配元素的宽度，高度，以及不透明度，同时进行动画操作\n.hide(\"fast / slow\")//代表200和600毫秒的延时动画\n<script type=\"text/javascript\">\n //点击buttom2 执行动画隐藏\n $(\"button:last\").click(function() {\n     $(\"#a2\").hide({\n         duration: 3000,\n         complete: function() {\n             alert('执行3000ms动画完毕')\n         }\n     })\n });\n</script>\n<script type=\"text/javascript\">\n//点击buttom1 直接隐藏\n$(\"button:first\").click(function() {\n    $(\"#a1\").hide()\n});\n</script>\n```\n\n### show方法\n\n```javascript\n<script type=\"text/javascript\">\n//点击buttom\n//执行3秒隐藏\n//执行3秒显示\n$(\"button\").click(function() {\n    $(\"#a1\").hide(3000).show(3000)\n});\n</script>\n```\n\n### 显示与隐藏切换toggle方法\n\n```javascript\n<script type=\"text/javascript\">\n$(\"button:first\").click(function() {\n    $(\".left\").toggle(3000)\n});\n //如果元素是最初显示，它会被隐藏;如果隐藏的，它会显示出来\n</script>\n```\n\n## 上卷下拉\n\n### 下拉动画slideDown\n\n```javascript\n<script type=\"text/javascript\">\n//点击buttom\n$(\"button:first\").click(function() {\n   $(\"#a1\").slideDown(3000)\n});\n//slideDown([duration],[complete])\n//$(\"ele\").slideDown(1000, function() {等待动画执行1秒后,执行别的动作....});\n</script>\n```\n\n### 上卷动画slideUp\n\n```javascript\n$(\"elem\").slideUp();\nslideUp([duration],[easing],[complete])\n<script type=\"text/javascript\">\n$(\"button:first\").click(function() {\n   $(\"#a1\").slideUp(3000)\n});\n\n$(\"button:last\").click(function() {\n   $(\"#a2\").slideUp(3000,function(){\n       alert('动画执行结束')\n   })\n});\n</script>\n```\n\n### 上卷下拉切换slideToggle\n\n```javascript\n<script type=\"text/javascript\">\n$(\"button\").click(function() {\n    $(\"#a1\").slideToggle(3000)\n});\n//slideToggle([duration],[complete])\n</script>\n```\n\n## 淡入淡出动画\n\n### 淡出动画fadeOut\n\n```javascript\n<script type=\"text/javascript\">\n.fadeOut([duration],[complete])\n    $(\"p\").fadeOut({\n        duration: 1000\n    });\n</script>\n```\n\n### 淡入动画fadeIn\n\n```javascript\n.fadeIn( [duration ], [ complete ] )\n<script type=\"text/javascript\">\n    $(\"p\").fadeIn({\n        duration: 1000\n    });\n</script>\n```\n\n### 淡入淡出切换fadeToggle\n\n```javascript\n<script type=\"text/javascript\">\n//fadeToggle切换fadeOut与fadeIn效果，所谓\"切换\"，即如果元素当前是可见的，则将其隐藏(淡出)；如果元素当前是隐藏的，则使其显示(淡入)。\n.fadeToggle(([duration],[complete])\n    $(\"p\").fadeIn({\n        duration: 1000\n    });\n</script>\n```\n\n### 淡入淡出fadeTo\n\n```javascript\n<script type=\"text/javascript\">\n//fadeToggle切换fadeOut与fadeIn效果，所谓\"切换\"，即如果元素当前是可见的，则将其隐藏(淡出)；如果元素当前是隐藏的，则使其显示(淡入)。\n.fadeTo( duration, opacity ,callback)\n     $(\"p\").fadeTo(1000, 0.9, function() {\n         alert('完成')\n           });\n</script>\n```\n\n## toggle与slideToggle以及fadeToggle的比较\n\n```javascript\ntoggle、sildeToggle以及fadeToggle的区别：\ntoggle：切换显示与隐藏效果，改变样式display为none\nsildeToggle：切换上下拉卷滚效果，设置位置高度为0\nfadeToggle：切换淡入淡出效果，设置透明度为0\n\n细节上还是有更多的不同点:\ntoggle：动态效果为从右至左。横向动作\nslideToggle：动态效果从下至上。竖向动作\nfadeToggle() 方法在 fadeIn() 和 fadeOut() 方法之间切换。\n注释：隐藏的元素不会被完全显示（不再影响页面的布局）12345678910\n```\n\n------\n\n## 动画animate\n\n```javascript\n$(elem).fadeOut(3000)  \n$(elem).animate({   \n    opacity:0\n},3000)\n.animate(properties,[duration],[easing],[complete])\n.animate(properties,options)\n\nproperties：一个或多个css属性的键值对所构成的Object对象。border、margin、padding、width、height、font、left、top、right、bottom、wordSpacing。background-color很明显不可以，否则正常情况下是不能只用动画效果的。CSS 样式使用 DOM 名称（比如 \"fontSize\"）来设置。\n\n属性值的单位像素（px）,除非另有说明。em和%需指定使用\n.animate({\n    left: 50,  \n    fontSize: \"10em\",\n}, 500);\n.animate({\n    width: \"toggle\"\n});\n如果提供一个以+= 或 -=开始的值，那么目标值就是以这个属性的当前值加上或者减去给定的数字来计算的\n.animate({ \n    left: '+=50px'\n}, \"slow\");\n\nduration时间\n动画以毫秒为单位的；'fast'和'slow'字符串，分别表示持续时间为200 和 600毫秒。\n\neasing动画运动的算法\njQuery库中默认调用 swing。如果需要其他的动画算法，请查找相关的插件\n\ncomplete回调\n动画完成时执行的函数，这个可以保证当前动画确定完成后发会触发\n```\n\n------\n\n```javascript\n.animate( properties, options )\n\noptions参数\nduration - 设置动画执行的时间\neasing - 规定 easing 函数，过渡使用的缓动函数\nstep：规定每个动画的每一步完成之后要执行的函数\nprogress：每一次动画调用的时候会执行这个回调，就是一个进度的概念\n\ncomplete：动画完成回调\n\n$('#elem').animate({\n    width: 'toggle',  \n    height: 'toggle'\n  }, {\n    duration: 5000,\n    specialEasing: {\n      width: 'linear',\n      height: 'easeOutBounce'\n    },\n    complete: function() {\n      $(this).after('<div>Animation complete.</div>');\n    }\n  });\n```\n\n------\n\n## 动画stop\n\n```javascript\n.stop( [clearQueue ], [ jumpToEnd ] )\n.stop( [queue ], [ clearQueue ] ,[ jumpToEnd ] )\n.stop(); 停止当前动画，点击在暂停处继续开始\n.stop(true); 如果同一元素调用多个动画方法，尚未被执行的动画被放置在元素的效果队列中。这些动画不会开始，直到第一个完成。当调用.stop()的时候，队列中的下一个动画立即开始。\n.stop(true,true); 当前动画将停止，但该元素上的 CSS 属性会被立刻修改成动画的目标值\n$(\"#aaron\").animate({\n    height: 300\n}, 5000)\n$(\"#aaron\").animate({\n    width: 300\n}, 5000)\n$(\"#aaron\").animate({\n    opacity: 0.6\n}, 2000)\nstop()：只会停止第一个动画，第二个第三个继续\nstop(true)：停止第一个、第二个和第三个动画\nstop(true ture)：停止动画，直接跳到第一个动画的最终状态 \n```\n\n------\n\n## each\n\n```javascript\njQuery.each(array, callback )\njQuery.each( object, callback )\n//第一个参数传递的就是一个对象或者数组，第二个是回调函数\n<script type=\"text/javascript\">\n$(\"#exec\").click(function() {\n  var v = $(\"#animation\").val();\n  var $aaron = $(\"#aaron\");\n  $aaron.empty();\n  if (v == \"1\") {\n      // 遍历数组元素\n      $.each(['Aaron', '慕课网'], function(i, item) {\n          $aaron.append(\"索引=\" + i + \"; 元素=\" + item);\n      });\n  } else if (v == \"2\") {\n      // 遍历对象属性\n      $.each({\n          name: \"张三\",\n          age: 18\n      }, function(property, value) {\n          $aaron.append(\"属性名=\" + property + \"; 属性值=\" + value);\n      });\n  } \n});\n</script>\n```\n\n------\n\n## 索引inArray\n\n```javascript\njQuery.inArray( value, array ,[ fromIndex ] )\n$.inArray(5,[1,2,3,4,5,6,7]) //返回对应的索引：4\n<script type=\"text/javascript\">\n$(\"#exec\").click(function() {\n    var v = $(\"#animation\").val();\n    var $aaron = $(\"#aaron\");\n       $aaron.empty();\n    if (v == \"1\") {\n        var index = $.inArray('Aaron',['test','Aaron', 'array','慕课网']);\n        $aaron.text('Aaron的索引是: '+ index)//1\n    } \n    else if (v == \"2\") {\n        //指定索引开始的位置\n        var index = $.inArray('a',['a','b','c','d','a','c']);\n        $aaron.text('a的索引是: '+ index)//0\n    } \n});\n</script>\n```\n\n------\n\n## 去空格神器trim方法\n\n```javascript\n//jQuery.trim()函数用于去除字符串两端的空白字符\n//trim处理\n<input type=\"text\" name=\"\" id=\"results2\" value=\" 前后留空 \" />\n<input id=\"exec2\" type=\"button\" value=\"点击执行\">\n\n$(\"#exec2\").click(function() {\n     alert(\"值的长度：\" + $.trim($(\"#results2\").val()).length)\n});//412345678\n```\n\n------\n\n## DOM元素的获取get方法\n\n```javascript\n.get( [index ] )\n $(a).get(1)\n<script type=\"text/javascript\">\n$(\"#exec\").click(function() \n{\n   //get找到第二个a元素，并修改蓝色字体\n   $aaron.get(1).style.color = \"blue\"\n   //get找到最后一个a元素，并修改字体颜色\n   $aaron.get(-1).style.color = \"#8A2BE2\"\n});\n</script>\n```\n\n##  \n\n```javascript\n.index()\n.index( selector )\n.index( element )\n<ul>\n   <a></a>\n   <a></a>\n   <li id=\"test1\">1</li>\n   <li id=\"test2\">2</li>\n   <li id=\"test3\">3</li>\n</ul>\n<ul>\n   <li id=\"test4\">4</li>\n   <li id=\"test5\">5</li>\n   <li id=\"test6\">6</li>\n</ul>\n<script type=\"text/javascript\">\n$(\"#exec\").click(function() \n{\n    var v = $(\"#animation\").val();\n    var $span = $(\"span\");\n    $span.empty();\n    if (v == \"1\") {\n        //找到第一个li的同辈节点中的索引位置\n        $span.text($(\"li\").index())//2\n        //通过传递dom查找      $span.text($(\"li\").index(d$(\"#test5\")))//4\n    } else if (v == \"3\") {\n        //通过传递jQuery对象查找\n                 $span.text($(\"li\").index($(\"#test6\")))//5\n    }\n});\n</script>\n```","source":"_posts/jQuer-动画篇.md","raw":"---\ntitle: jQuer--动画篇\ncomments: true\ncategories:\n  - jQuer\ntags:\n  - jQuer\n  - jQuer动画\nabbrlink: 81a571d4\ndate: 2018-10-05 22:45:52\n---\n\n# jQuery——动画篇（隐藏显示、上卷下拉、淡入淡出、animate、stop、each）\n\n## 隐藏显示\n\n### hide方法\n\n```javascript\n$elem.hide()\n.hide( options )hide()//就会匹配元素的宽度，高度，以及不透明度，同时进行动画操作\n.hide(\"fast / slow\")//代表200和600毫秒的延时动画\n<script type=\"text/javascript\">\n //点击buttom2 执行动画隐藏\n $(\"button:last\").click(function() {\n     $(\"#a2\").hide({\n         duration: 3000,\n         complete: function() {\n             alert('执行3000ms动画完毕')\n         }\n     })\n });\n</script>\n<script type=\"text/javascript\">\n//点击buttom1 直接隐藏\n$(\"button:first\").click(function() {\n    $(\"#a1\").hide()\n});\n</script>\n```\n\n### show方法\n\n```javascript\n<script type=\"text/javascript\">\n//点击buttom\n//执行3秒隐藏\n//执行3秒显示\n$(\"button\").click(function() {\n    $(\"#a1\").hide(3000).show(3000)\n});\n</script>\n```\n\n### 显示与隐藏切换toggle方法\n\n```javascript\n<script type=\"text/javascript\">\n$(\"button:first\").click(function() {\n    $(\".left\").toggle(3000)\n});\n //如果元素是最初显示，它会被隐藏;如果隐藏的，它会显示出来\n</script>\n```\n\n## 上卷下拉\n\n### 下拉动画slideDown\n\n```javascript\n<script type=\"text/javascript\">\n//点击buttom\n$(\"button:first\").click(function() {\n   $(\"#a1\").slideDown(3000)\n});\n//slideDown([duration],[complete])\n//$(\"ele\").slideDown(1000, function() {等待动画执行1秒后,执行别的动作....});\n</script>\n```\n\n### 上卷动画slideUp\n\n```javascript\n$(\"elem\").slideUp();\nslideUp([duration],[easing],[complete])\n<script type=\"text/javascript\">\n$(\"button:first\").click(function() {\n   $(\"#a1\").slideUp(3000)\n});\n\n$(\"button:last\").click(function() {\n   $(\"#a2\").slideUp(3000,function(){\n       alert('动画执行结束')\n   })\n});\n</script>\n```\n\n### 上卷下拉切换slideToggle\n\n```javascript\n<script type=\"text/javascript\">\n$(\"button\").click(function() {\n    $(\"#a1\").slideToggle(3000)\n});\n//slideToggle([duration],[complete])\n</script>\n```\n\n## 淡入淡出动画\n\n### 淡出动画fadeOut\n\n```javascript\n<script type=\"text/javascript\">\n.fadeOut([duration],[complete])\n    $(\"p\").fadeOut({\n        duration: 1000\n    });\n</script>\n```\n\n### 淡入动画fadeIn\n\n```javascript\n.fadeIn( [duration ], [ complete ] )\n<script type=\"text/javascript\">\n    $(\"p\").fadeIn({\n        duration: 1000\n    });\n</script>\n```\n\n### 淡入淡出切换fadeToggle\n\n```javascript\n<script type=\"text/javascript\">\n//fadeToggle切换fadeOut与fadeIn效果，所谓\"切换\"，即如果元素当前是可见的，则将其隐藏(淡出)；如果元素当前是隐藏的，则使其显示(淡入)。\n.fadeToggle(([duration],[complete])\n    $(\"p\").fadeIn({\n        duration: 1000\n    });\n</script>\n```\n\n### 淡入淡出fadeTo\n\n```javascript\n<script type=\"text/javascript\">\n//fadeToggle切换fadeOut与fadeIn效果，所谓\"切换\"，即如果元素当前是可见的，则将其隐藏(淡出)；如果元素当前是隐藏的，则使其显示(淡入)。\n.fadeTo( duration, opacity ,callback)\n     $(\"p\").fadeTo(1000, 0.9, function() {\n         alert('完成')\n           });\n</script>\n```\n\n## toggle与slideToggle以及fadeToggle的比较\n\n```javascript\ntoggle、sildeToggle以及fadeToggle的区别：\ntoggle：切换显示与隐藏效果，改变样式display为none\nsildeToggle：切换上下拉卷滚效果，设置位置高度为0\nfadeToggle：切换淡入淡出效果，设置透明度为0\n\n细节上还是有更多的不同点:\ntoggle：动态效果为从右至左。横向动作\nslideToggle：动态效果从下至上。竖向动作\nfadeToggle() 方法在 fadeIn() 和 fadeOut() 方法之间切换。\n注释：隐藏的元素不会被完全显示（不再影响页面的布局）12345678910\n```\n\n------\n\n## 动画animate\n\n```javascript\n$(elem).fadeOut(3000)  \n$(elem).animate({   \n    opacity:0\n},3000)\n.animate(properties,[duration],[easing],[complete])\n.animate(properties,options)\n\nproperties：一个或多个css属性的键值对所构成的Object对象。border、margin、padding、width、height、font、left、top、right、bottom、wordSpacing。background-color很明显不可以，否则正常情况下是不能只用动画效果的。CSS 样式使用 DOM 名称（比如 \"fontSize\"）来设置。\n\n属性值的单位像素（px）,除非另有说明。em和%需指定使用\n.animate({\n    left: 50,  \n    fontSize: \"10em\",\n}, 500);\n.animate({\n    width: \"toggle\"\n});\n如果提供一个以+= 或 -=开始的值，那么目标值就是以这个属性的当前值加上或者减去给定的数字来计算的\n.animate({ \n    left: '+=50px'\n}, \"slow\");\n\nduration时间\n动画以毫秒为单位的；'fast'和'slow'字符串，分别表示持续时间为200 和 600毫秒。\n\neasing动画运动的算法\njQuery库中默认调用 swing。如果需要其他的动画算法，请查找相关的插件\n\ncomplete回调\n动画完成时执行的函数，这个可以保证当前动画确定完成后发会触发\n```\n\n------\n\n```javascript\n.animate( properties, options )\n\noptions参数\nduration - 设置动画执行的时间\neasing - 规定 easing 函数，过渡使用的缓动函数\nstep：规定每个动画的每一步完成之后要执行的函数\nprogress：每一次动画调用的时候会执行这个回调，就是一个进度的概念\n\ncomplete：动画完成回调\n\n$('#elem').animate({\n    width: 'toggle',  \n    height: 'toggle'\n  }, {\n    duration: 5000,\n    specialEasing: {\n      width: 'linear',\n      height: 'easeOutBounce'\n    },\n    complete: function() {\n      $(this).after('<div>Animation complete.</div>');\n    }\n  });\n```\n\n------\n\n## 动画stop\n\n```javascript\n.stop( [clearQueue ], [ jumpToEnd ] )\n.stop( [queue ], [ clearQueue ] ,[ jumpToEnd ] )\n.stop(); 停止当前动画，点击在暂停处继续开始\n.stop(true); 如果同一元素调用多个动画方法，尚未被执行的动画被放置在元素的效果队列中。这些动画不会开始，直到第一个完成。当调用.stop()的时候，队列中的下一个动画立即开始。\n.stop(true,true); 当前动画将停止，但该元素上的 CSS 属性会被立刻修改成动画的目标值\n$(\"#aaron\").animate({\n    height: 300\n}, 5000)\n$(\"#aaron\").animate({\n    width: 300\n}, 5000)\n$(\"#aaron\").animate({\n    opacity: 0.6\n}, 2000)\nstop()：只会停止第一个动画，第二个第三个继续\nstop(true)：停止第一个、第二个和第三个动画\nstop(true ture)：停止动画，直接跳到第一个动画的最终状态 \n```\n\n------\n\n## each\n\n```javascript\njQuery.each(array, callback )\njQuery.each( object, callback )\n//第一个参数传递的就是一个对象或者数组，第二个是回调函数\n<script type=\"text/javascript\">\n$(\"#exec\").click(function() {\n  var v = $(\"#animation\").val();\n  var $aaron = $(\"#aaron\");\n  $aaron.empty();\n  if (v == \"1\") {\n      // 遍历数组元素\n      $.each(['Aaron', '慕课网'], function(i, item) {\n          $aaron.append(\"索引=\" + i + \"; 元素=\" + item);\n      });\n  } else if (v == \"2\") {\n      // 遍历对象属性\n      $.each({\n          name: \"张三\",\n          age: 18\n      }, function(property, value) {\n          $aaron.append(\"属性名=\" + property + \"; 属性值=\" + value);\n      });\n  } \n});\n</script>\n```\n\n------\n\n## 索引inArray\n\n```javascript\njQuery.inArray( value, array ,[ fromIndex ] )\n$.inArray(5,[1,2,3,4,5,6,7]) //返回对应的索引：4\n<script type=\"text/javascript\">\n$(\"#exec\").click(function() {\n    var v = $(\"#animation\").val();\n    var $aaron = $(\"#aaron\");\n       $aaron.empty();\n    if (v == \"1\") {\n        var index = $.inArray('Aaron',['test','Aaron', 'array','慕课网']);\n        $aaron.text('Aaron的索引是: '+ index)//1\n    } \n    else if (v == \"2\") {\n        //指定索引开始的位置\n        var index = $.inArray('a',['a','b','c','d','a','c']);\n        $aaron.text('a的索引是: '+ index)//0\n    } \n});\n</script>\n```\n\n------\n\n## 去空格神器trim方法\n\n```javascript\n//jQuery.trim()函数用于去除字符串两端的空白字符\n//trim处理\n<input type=\"text\" name=\"\" id=\"results2\" value=\" 前后留空 \" />\n<input id=\"exec2\" type=\"button\" value=\"点击执行\">\n\n$(\"#exec2\").click(function() {\n     alert(\"值的长度：\" + $.trim($(\"#results2\").val()).length)\n});//412345678\n```\n\n------\n\n## DOM元素的获取get方法\n\n```javascript\n.get( [index ] )\n $(a).get(1)\n<script type=\"text/javascript\">\n$(\"#exec\").click(function() \n{\n   //get找到第二个a元素，并修改蓝色字体\n   $aaron.get(1).style.color = \"blue\"\n   //get找到最后一个a元素，并修改字体颜色\n   $aaron.get(-1).style.color = \"#8A2BE2\"\n});\n</script>\n```\n\n##  \n\n```javascript\n.index()\n.index( selector )\n.index( element )\n<ul>\n   <a></a>\n   <a></a>\n   <li id=\"test1\">1</li>\n   <li id=\"test2\">2</li>\n   <li id=\"test3\">3</li>\n</ul>\n<ul>\n   <li id=\"test4\">4</li>\n   <li id=\"test5\">5</li>\n   <li id=\"test6\">6</li>\n</ul>\n<script type=\"text/javascript\">\n$(\"#exec\").click(function() \n{\n    var v = $(\"#animation\").val();\n    var $span = $(\"span\");\n    $span.empty();\n    if (v == \"1\") {\n        //找到第一个li的同辈节点中的索引位置\n        $span.text($(\"li\").index())//2\n        //通过传递dom查找      $span.text($(\"li\").index(d$(\"#test5\")))//4\n    } else if (v == \"3\") {\n        //通过传递jQuery对象查找\n                 $span.text($(\"li\").index($(\"#test6\")))//5\n    }\n});\n</script>\n```","slug":"jQuer-动画篇","published":1,"updated":"2020-05-18T16:35:00.483Z","layout":"post","photos":[],"link":"","_id":"cl78qfoqj006oqic91s1dsnke","content":"<h1 id=\"jQuery——动画篇（隐藏显示、上卷下拉、淡入淡出、animate、stop、each）\"><a href=\"#jQuery——动画篇（隐藏显示、上卷下拉、淡入淡出、animate、stop、each）\" class=\"headerlink\" title=\"jQuery——动画篇（隐藏显示、上卷下拉、淡入淡出、animate、stop、each）\"></a>jQuery——动画篇（隐藏显示、上卷下拉、淡入淡出、animate、stop、each）</h1><h2 id=\"隐藏显示\"><a href=\"#隐藏显示\" class=\"headerlink\" title=\"隐藏显示\"></a>隐藏显示</h2><h3 id=\"hide方法\"><a href=\"#hide方法\" class=\"headerlink\" title=\"hide方法\"></a>hide方法</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$elem.hide()</span><br><span class=\"line\">.hide( options )hide()<span class=\"comment\">//就会匹配元素的宽度，高度，以及不透明度，同时进行动画操作</span></span><br><span class=\"line\">.hide(<span class=\"string\">\"fast / slow\"</span>)<span class=\"comment\">//代表200和600毫秒的延时动画</span></span><br><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;</span><br><span class=\"line\"> <span class=\"comment\">//点击buttom2 执行动画隐藏</span></span><br><span class=\"line\"> $(<span class=\"string\">\"button:last\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">     $(<span class=\"string\">\"#a2\"</span>).hide(&#123;</span><br><span class=\"line\">         duration: <span class=\"number\">3000</span>,</span><br><span class=\"line\">         complete: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">             alert(<span class=\"string\">'执行3000ms动画完毕'</span>)</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">     &#125;)</span><br><span class=\"line\"> &#125;);</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;script type=\"text/</span>javascript<span class=\"string\">\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">//点击buttom1 直接隐藏</span></span><br><span class=\"line\"><span class=\"string\">$(\"</span>button:first<span class=\"string\">\").click(function() &#123;</span></span><br><span class=\"line\">    $(\"#a1\").hide()</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"show方法\"><a href=\"#show方法\" class=\"headerlink\" title=\"show方法\"></a>show方法</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;</span><br><span class=\"line\"><span class=\"comment\">//点击buttom</span></span><br><span class=\"line\"><span class=\"comment\">//执行3秒隐藏</span></span><br><span class=\"line\"><span class=\"comment\">//执行3秒显示</span></span><br><span class=\"line\">$(<span class=\"string\">\"button\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    $(<span class=\"string\">\"#a1\"</span>).hide(<span class=\"number\">3000</span>).show(<span class=\"number\">3000</span>)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"显示与隐藏切换toggle方法\"><a href=\"#显示与隐藏切换toggle方法\" class=\"headerlink\" title=\"显示与隐藏切换toggle方法\"></a>显示与隐藏切换toggle方法</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;</span><br><span class=\"line\">$(<span class=\"string\">\"button:first\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    $(<span class=\"string\">\".left\"</span>).toggle(<span class=\"number\">3000</span>)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"> <span class=\"comment\">//如果元素是最初显示，它会被隐藏;如果隐藏的，它会显示出来</span></span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"上卷下拉\"><a href=\"#上卷下拉\" class=\"headerlink\" title=\"上卷下拉\"></a>上卷下拉</h2><h3 id=\"下拉动画slideDown\"><a href=\"#下拉动画slideDown\" class=\"headerlink\" title=\"下拉动画slideDown\"></a>下拉动画slideDown</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;</span><br><span class=\"line\"><span class=\"comment\">//点击buttom</span></span><br><span class=\"line\">$(<span class=\"string\">\"button:first\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">   $(<span class=\"string\">\"#a1\"</span>).slideDown(<span class=\"number\">3000</span>)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">//slideDown([duration],[complete])</span></span><br><span class=\"line\"><span class=\"comment\">//$(\"ele\").slideDown(1000, function() &#123;等待动画执行1秒后,执行别的动作....&#125;);</span></span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"上卷动画slideUp\"><a href=\"#上卷动画slideUp\" class=\"headerlink\" title=\"上卷动画slideUp\"></a>上卷动画slideUp</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">\"elem\"</span>).slideUp();</span><br><span class=\"line\">slideUp([duration],[easing],[complete])</span><br><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;</span><br><span class=\"line\">$(<span class=\"string\">\"button:first\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">   $(<span class=\"string\">\"#a1\"</span>).slideUp(<span class=\"number\">3000</span>)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">$(<span class=\"string\">\"button:last\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">   $(<span class=\"string\">\"#a2\"</span>).slideUp(<span class=\"number\">3000</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">       alert(<span class=\"string\">'动画执行结束'</span>)</span><br><span class=\"line\">   &#125;)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"上卷下拉切换slideToggle\"><a href=\"#上卷下拉切换slideToggle\" class=\"headerlink\" title=\"上卷下拉切换slideToggle\"></a>上卷下拉切换slideToggle</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;</span><br><span class=\"line\">$(<span class=\"string\">\"button\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    $(<span class=\"string\">\"#a1\"</span>).slideToggle(<span class=\"number\">3000</span>)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">//slideToggle([duration],[complete])</span></span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"淡入淡出动画\"><a href=\"#淡入淡出动画\" class=\"headerlink\" title=\"淡入淡出动画\"></a>淡入淡出动画</h2><h3 id=\"淡出动画fadeOut\"><a href=\"#淡出动画fadeOut\" class=\"headerlink\" title=\"淡出动画fadeOut\"></a>淡出动画fadeOut</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;</span><br><span class=\"line\">.fadeOut([duration],[complete])</span><br><span class=\"line\">    $(<span class=\"string\">\"p\"</span>).fadeOut(&#123;</span><br><span class=\"line\">        duration: <span class=\"number\">1000</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"淡入动画fadeIn\"><a href=\"#淡入动画fadeIn\" class=\"headerlink\" title=\"淡入动画fadeIn\"></a>淡入动画fadeIn</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.fadeIn( [duration ], [ complete ] )</span><br><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;</span><br><span class=\"line\">    $(<span class=\"string\">\"p\"</span>).fadeIn(&#123;</span><br><span class=\"line\">        duration: <span class=\"number\">1000</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"淡入淡出切换fadeToggle\"><a href=\"#淡入淡出切换fadeToggle\" class=\"headerlink\" title=\"淡入淡出切换fadeToggle\"></a>淡入淡出切换fadeToggle</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;</span><br><span class=\"line\"><span class=\"comment\">//fadeToggle切换fadeOut与fadeIn效果，所谓\"切换\"，即如果元素当前是可见的，则将其隐藏(淡出)；如果元素当前是隐藏的，则使其显示(淡入)。</span></span><br><span class=\"line\">.fadeToggle(([duration],[complete])</span><br><span class=\"line\">    $(<span class=\"string\">\"p\"</span>).fadeIn(&#123;</span><br><span class=\"line\">        duration: <span class=\"number\">1000</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"淡入淡出fadeTo\"><a href=\"#淡入淡出fadeTo\" class=\"headerlink\" title=\"淡入淡出fadeTo\"></a>淡入淡出fadeTo</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;</span><br><span class=\"line\"><span class=\"comment\">//fadeToggle切换fadeOut与fadeIn效果，所谓\"切换\"，即如果元素当前是可见的，则将其隐藏(淡出)；如果元素当前是隐藏的，则使其显示(淡入)。</span></span><br><span class=\"line\">.fadeTo( duration, opacity ,callback)</span><br><span class=\"line\">     $(<span class=\"string\">\"p\"</span>).fadeTo(<span class=\"number\">1000</span>, <span class=\"number\">0.9</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">         alert(<span class=\"string\">'完成'</span>)</span><br><span class=\"line\">           &#125;);</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"toggle与slideToggle以及fadeToggle的比较\"><a href=\"#toggle与slideToggle以及fadeToggle的比较\" class=\"headerlink\" title=\"toggle与slideToggle以及fadeToggle的比较\"></a>toggle与slideToggle以及fadeToggle的比较</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">toggle、sildeToggle以及fadeToggle的区别：</span><br><span class=\"line\">toggle：切换显示与隐藏效果，改变样式display为none</span><br><span class=\"line\">sildeToggle：切换上下拉卷滚效果，设置位置高度为<span class=\"number\">0</span></span><br><span class=\"line\">fadeToggle：切换淡入淡出效果，设置透明度为<span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">细节上还是有更多的不同点:</span><br><span class=\"line\">toggle：动态效果为从右至左。横向动作</span><br><span class=\"line\">slideToggle：动态效果从下至上。竖向动作</span><br><span class=\"line\">fadeToggle() 方法在 fadeIn() 和 fadeOut() 方法之间切换。</span><br><span class=\"line\">注释：隐藏的元素不会被完全显示（不再影响页面的布局）<span class=\"number\">12345678910</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"动画animate\"><a href=\"#动画animate\" class=\"headerlink\" title=\"动画animate\"></a>动画animate</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(elem).fadeOut(<span class=\"number\">3000</span>)  </span><br><span class=\"line\">$(elem).animate(&#123;   </span><br><span class=\"line\">    opacity:<span class=\"number\">0</span></span><br><span class=\"line\">&#125;,<span class=\"number\">3000</span>)</span><br><span class=\"line\">.animate(properties,[duration],[easing],[complete])</span><br><span class=\"line\">.animate(properties,options)</span><br><span class=\"line\"></span><br><span class=\"line\">properties：一个或多个css属性的键值对所构成的<span class=\"built_in\">Object</span>对象。border、margin、padding、width、height、font、left、top、right、bottom、wordSpacing。background-color很明显不可以，否则正常情况下是不能只用动画效果的。CSS 样式使用 DOM 名称（比如 <span class=\"string\">\"fontSize\"</span>）来设置。</span><br><span class=\"line\"></span><br><span class=\"line\">属性值的单位像素（px）,除非另有说明。em和%需指定使用</span><br><span class=\"line\">.animate(&#123;</span><br><span class=\"line\">    left: <span class=\"number\">50</span>,  </span><br><span class=\"line\">    fontSize: <span class=\"string\">\"10em\"</span>,</span><br><span class=\"line\">&#125;, <span class=\"number\">500</span>);</span><br><span class=\"line\">.animate(&#123;</span><br><span class=\"line\">    width: <span class=\"string\">\"toggle\"</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">如果提供一个以+= 或 -=开始的值，那么目标值就是以这个属性的当前值加上或者减去给定的数字来计算的</span><br><span class=\"line\">.animate(&#123; </span><br><span class=\"line\">    left: <span class=\"string\">'+=50px'</span></span><br><span class=\"line\">&#125;, <span class=\"string\">\"slow\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">duration时间</span><br><span class=\"line\">动画以毫秒为单位的；<span class=\"string\">'fast'</span>和<span class=\"string\">'slow'</span>字符串，分别表示持续时间为<span class=\"number\">200</span> 和 <span class=\"number\">600</span>毫秒。</span><br><span class=\"line\"></span><br><span class=\"line\">easing动画运动的算法</span><br><span class=\"line\">jQuery库中默认调用 swing。如果需要其他的动画算法，请查找相关的插件</span><br><span class=\"line\"></span><br><span class=\"line\">complete回调</span><br><span class=\"line\">动画完成时执行的函数，这个可以保证当前动画确定完成后发会触发</span><br></pre></td></tr></table></figure>\n<hr>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.animate( properties, options )</span><br><span class=\"line\"></span><br><span class=\"line\">options参数</span><br><span class=\"line\">duration - 设置动画执行的时间</span><br><span class=\"line\">easing - 规定 easing 函数，过渡使用的缓动函数</span><br><span class=\"line\">step：规定每个动画的每一步完成之后要执行的函数</span><br><span class=\"line\">progress：每一次动画调用的时候会执行这个回调，就是一个进度的概念</span><br><span class=\"line\"></span><br><span class=\"line\">complete：动画完成回调</span><br><span class=\"line\"></span><br><span class=\"line\">$(<span class=\"string\">'#elem'</span>).animate(&#123;</span><br><span class=\"line\">    width: <span class=\"string\">'toggle'</span>,  </span><br><span class=\"line\">    height: <span class=\"string\">'toggle'</span></span><br><span class=\"line\">  &#125;, &#123;</span><br><span class=\"line\">    duration: <span class=\"number\">5000</span>,</span><br><span class=\"line\">    specialEasing: &#123;</span><br><span class=\"line\">      width: <span class=\"string\">'linear'</span>,</span><br><span class=\"line\">      height: <span class=\"string\">'easeOutBounce'</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    complete: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      $(<span class=\"keyword\">this</span>).after(<span class=\"string\">'&lt;div&gt;Animation complete.&lt;/div&gt;'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"动画stop\"><a href=\"#动画stop\" class=\"headerlink\" title=\"动画stop\"></a>动画stop</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.stop( [clearQueue ], [ jumpToEnd ] )</span><br><span class=\"line\">.stop( [queue ], [ clearQueue ] ,[ jumpToEnd ] )</span><br><span class=\"line\">.stop(); 停止当前动画，点击在暂停处继续开始</span><br><span class=\"line\">.stop(<span class=\"literal\">true</span>); 如果同一元素调用多个动画方法，尚未被执行的动画被放置在元素的效果队列中。这些动画不会开始，直到第一个完成。当调用.stop()的时候，队列中的下一个动画立即开始。</span><br><span class=\"line\">.stop(<span class=\"literal\">true</span>,<span class=\"literal\">true</span>); 当前动画将停止，但该元素上的 CSS 属性会被立刻修改成动画的目标值</span><br><span class=\"line\">$(<span class=\"string\">\"#aaron\"</span>).animate(&#123;</span><br><span class=\"line\">    height: <span class=\"number\">300</span></span><br><span class=\"line\">&#125;, <span class=\"number\">5000</span>)</span><br><span class=\"line\">$(<span class=\"string\">\"#aaron\"</span>).animate(&#123;</span><br><span class=\"line\">    width: <span class=\"number\">300</span></span><br><span class=\"line\">&#125;, <span class=\"number\">5000</span>)</span><br><span class=\"line\">$(<span class=\"string\">\"#aaron\"</span>).animate(&#123;</span><br><span class=\"line\">    opacity: <span class=\"number\">0.6</span></span><br><span class=\"line\">&#125;, <span class=\"number\">2000</span>)</span><br><span class=\"line\">stop()：只会停止第一个动画，第二个第三个继续</span><br><span class=\"line\">stop(<span class=\"literal\">true</span>)：停止第一个、第二个和第三个动画</span><br><span class=\"line\">stop(<span class=\"literal\">true</span> ture)：停止动画，直接跳到第一个动画的最终状态</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"each\"><a href=\"#each\" class=\"headerlink\" title=\"each\"></a>each</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jQuery.each(array, callback )</span><br><span class=\"line\">jQuery.each( object, callback )</span><br><span class=\"line\"><span class=\"comment\">//第一个参数传递的就是一个对象或者数组，第二个是回调函数</span></span><br><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;</span><br><span class=\"line\">$(<span class=\"string\">\"#exec\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> v = $(<span class=\"string\">\"#animation\"</span>).val();</span><br><span class=\"line\">  <span class=\"keyword\">var</span> $aaron = $(<span class=\"string\">\"#aaron\"</span>);</span><br><span class=\"line\">  $aaron.empty();</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (v == <span class=\"string\">\"1\"</span>) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 遍历数组元素</span></span><br><span class=\"line\">      $.each([<span class=\"string\">'Aaron'</span>, <span class=\"string\">'慕课网'</span>], <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">i, item</span>) </span>&#123;</span><br><span class=\"line\">          $aaron.append(<span class=\"string\">\"索引=\"</span> + i + <span class=\"string\">\"; 元素=\"</span> + item);</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (v == <span class=\"string\">\"2\"</span>) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 遍历对象属性</span></span><br><span class=\"line\">      $.each(&#123;</span><br><span class=\"line\">          name: <span class=\"string\">\"张三\"</span>,</span><br><span class=\"line\">          age: <span class=\"number\">18</span></span><br><span class=\"line\">      &#125;, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">property, value</span>) </span>&#123;</span><br><span class=\"line\">          $aaron.append(<span class=\"string\">\"属性名=\"</span> + property + <span class=\"string\">\"; 属性值=\"</span> + value);</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">  &#125; </span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"索引inArray\"><a href=\"#索引inArray\" class=\"headerlink\" title=\"索引inArray\"></a>索引inArray</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jQuery.inArray( value, array ,[ fromIndex ] )</span><br><span class=\"line\">$.inArray(<span class=\"number\">5</span>,[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>]) <span class=\"comment\">//返回对应的索引：4</span></span><br><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;</span><br><span class=\"line\">$(<span class=\"string\">\"#exec\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> v = $(<span class=\"string\">\"#animation\"</span>).val();</span><br><span class=\"line\">    <span class=\"keyword\">var</span> $aaron = $(<span class=\"string\">\"#aaron\"</span>);</span><br><span class=\"line\">       $aaron.empty();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (v == <span class=\"string\">\"1\"</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> index = $.inArray(<span class=\"string\">'Aaron'</span>,[<span class=\"string\">'test'</span>,<span class=\"string\">'Aaron'</span>, <span class=\"string\">'array'</span>,<span class=\"string\">'慕课网'</span>]);</span><br><span class=\"line\">        $aaron.text(<span class=\"string\">'Aaron的索引是: '</span>+ index)<span class=\"comment\">//1</span></span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (v == <span class=\"string\">\"2\"</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//指定索引开始的位置</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> index = $.inArray(<span class=\"string\">'a'</span>,[<span class=\"string\">'a'</span>,<span class=\"string\">'b'</span>,<span class=\"string\">'c'</span>,<span class=\"string\">'d'</span>,<span class=\"string\">'a'</span>,<span class=\"string\">'c'</span>]);</span><br><span class=\"line\">        $aaron.text(<span class=\"string\">'a的索引是: '</span>+ index)<span class=\"comment\">//0</span></span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"去空格神器trim方法\"><a href=\"#去空格神器trim方法\" class=\"headerlink\" title=\"去空格神器trim方法\"></a>去空格神器trim方法</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//jQuery.trim()函数用于去除字符串两端的空白字符</span></span><br><span class=\"line\"><span class=\"comment\">//trim处理</span></span><br><span class=\"line\">&lt;input type=<span class=\"string\">\"text\"</span> name=<span class=\"string\">\"\"</span> id=<span class=\"string\">\"results2\"</span> value=<span class=\"string\">\" 前后留空 \"</span> /&gt;</span><br><span class=\"line\">&lt;input id=<span class=\"string\">\"exec2\"</span> type=<span class=\"string\">\"button\"</span> value=<span class=\"string\">\"点击执行\"</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">$(<span class=\"string\">\"#exec2\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">     alert(<span class=\"string\">\"值的长度：\"</span> + $.trim($(<span class=\"string\">\"#results2\"</span>).val()).length)</span><br><span class=\"line\">&#125;);<span class=\"comment\">//412345678</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"DOM元素的获取get方法\"><a href=\"#DOM元素的获取get方法\" class=\"headerlink\" title=\"DOM元素的获取get方法\"></a>DOM元素的获取get方法</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.get( [index ] )</span><br><span class=\"line\"> $(a).get(<span class=\"number\">1</span>)</span><br><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;</span><br><span class=\"line\">$(<span class=\"string\">\"#exec\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">   <span class=\"comment\">//get找到第二个a元素，并修改蓝色字体</span></span><br><span class=\"line\">   $aaron.get(<span class=\"number\">1</span>).style.color = <span class=\"string\">\"blue\"</span></span><br><span class=\"line\">   <span class=\"comment\">//get找到最后一个a元素，并修改字体颜色</span></span><br><span class=\"line\">   $aaron.get(<span class=\"number\">-1</span>).style.color = <span class=\"string\">\"#8A2BE2\"</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\" \"></a> </h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.index()</span><br><span class=\"line\">.index( selector )</span><br><span class=\"line\">.index( element )</span><br><span class=\"line\">&lt;ul&gt;</span><br><span class=\"line\">   &lt;a&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span></span><br><span class=\"line\">   &lt;a&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span></span><br><span class=\"line\">   &lt;li id=<span class=\"string\">\"test1\"</span>&gt;<span class=\"number\">1</span>&lt;<span class=\"regexp\">/li&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">   &lt;li id=\"test2\"&gt;2&lt;/</span>li&gt;</span><br><span class=\"line\">   &lt;li id=<span class=\"string\">\"test3\"</span>&gt;<span class=\"number\">3</span>&lt;<span class=\"regexp\">/li&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/u</span>l&gt;</span><br><span class=\"line\">&lt;ul&gt;</span><br><span class=\"line\">   &lt;li id=<span class=\"string\">\"test4\"</span>&gt;<span class=\"number\">4</span>&lt;<span class=\"regexp\">/li&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">   &lt;li id=\"test5\"&gt;5&lt;/</span>li&gt;</span><br><span class=\"line\">   &lt;li id=<span class=\"string\">\"test6\"</span>&gt;<span class=\"number\">6</span>&lt;<span class=\"regexp\">/li&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/u</span>l&gt;</span><br><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;</span><br><span class=\"line\">$(<span class=\"string\">\"#exec\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> v = $(<span class=\"string\">\"#animation\"</span>).val();</span><br><span class=\"line\">    <span class=\"keyword\">var</span> $span = $(<span class=\"string\">\"span\"</span>);</span><br><span class=\"line\">    $span.empty();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (v == <span class=\"string\">\"1\"</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//找到第一个li的同辈节点中的索引位置</span></span><br><span class=\"line\">        $span.text($(<span class=\"string\">\"li\"</span>).index())<span class=\"comment\">//2</span></span><br><span class=\"line\">        <span class=\"comment\">//通过传递dom查找      $span.text($(\"li\").index(d$(\"#test5\")))//4</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (v == <span class=\"string\">\"3\"</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//通过传递jQuery对象查找</span></span><br><span class=\"line\">                 $span.text($(<span class=\"string\">\"li\"</span>).index($(<span class=\"string\">\"#test6\"</span>)))<span class=\"comment\">//5</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"jQuery——动画篇（隐藏显示、上卷下拉、淡入淡出、animate、stop、each）\"><a href=\"#jQuery——动画篇（隐藏显示、上卷下拉、淡入淡出、animate、stop、each）\" class=\"headerlink\" title=\"jQuery——动画篇（隐藏显示、上卷下拉、淡入淡出、animate、stop、each）\"></a>jQuery——动画篇（隐藏显示、上卷下拉、淡入淡出、animate、stop、each）</h1><h2 id=\"隐藏显示\"><a href=\"#隐藏显示\" class=\"headerlink\" title=\"隐藏显示\"></a>隐藏显示</h2><h3 id=\"hide方法\"><a href=\"#hide方法\" class=\"headerlink\" title=\"hide方法\"></a>hide方法</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$elem.hide()</span><br><span class=\"line\">.hide( options )hide()<span class=\"comment\">//就会匹配元素的宽度，高度，以及不透明度，同时进行动画操作</span></span><br><span class=\"line\">.hide(<span class=\"string\">\"fast / slow\"</span>)<span class=\"comment\">//代表200和600毫秒的延时动画</span></span><br><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;</span><br><span class=\"line\"> <span class=\"comment\">//点击buttom2 执行动画隐藏</span></span><br><span class=\"line\"> $(<span class=\"string\">\"button:last\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">     $(<span class=\"string\">\"#a2\"</span>).hide(&#123;</span><br><span class=\"line\">         duration: <span class=\"number\">3000</span>,</span><br><span class=\"line\">         complete: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">             alert(<span class=\"string\">'执行3000ms动画完毕'</span>)</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">     &#125;)</span><br><span class=\"line\"> &#125;);</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;script type=\"text/</span>javascript<span class=\"string\">\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">//点击buttom1 直接隐藏</span></span><br><span class=\"line\"><span class=\"string\">$(\"</span>button:first<span class=\"string\">\").click(function() &#123;</span></span><br><span class=\"line\">    $(\"#a1\").hide()</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"show方法\"><a href=\"#show方法\" class=\"headerlink\" title=\"show方法\"></a>show方法</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;</span><br><span class=\"line\"><span class=\"comment\">//点击buttom</span></span><br><span class=\"line\"><span class=\"comment\">//执行3秒隐藏</span></span><br><span class=\"line\"><span class=\"comment\">//执行3秒显示</span></span><br><span class=\"line\">$(<span class=\"string\">\"button\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    $(<span class=\"string\">\"#a1\"</span>).hide(<span class=\"number\">3000</span>).show(<span class=\"number\">3000</span>)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"显示与隐藏切换toggle方法\"><a href=\"#显示与隐藏切换toggle方法\" class=\"headerlink\" title=\"显示与隐藏切换toggle方法\"></a>显示与隐藏切换toggle方法</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;</span><br><span class=\"line\">$(<span class=\"string\">\"button:first\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    $(<span class=\"string\">\".left\"</span>).toggle(<span class=\"number\">3000</span>)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"> <span class=\"comment\">//如果元素是最初显示，它会被隐藏;如果隐藏的，它会显示出来</span></span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"上卷下拉\"><a href=\"#上卷下拉\" class=\"headerlink\" title=\"上卷下拉\"></a>上卷下拉</h2><h3 id=\"下拉动画slideDown\"><a href=\"#下拉动画slideDown\" class=\"headerlink\" title=\"下拉动画slideDown\"></a>下拉动画slideDown</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;</span><br><span class=\"line\"><span class=\"comment\">//点击buttom</span></span><br><span class=\"line\">$(<span class=\"string\">\"button:first\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">   $(<span class=\"string\">\"#a1\"</span>).slideDown(<span class=\"number\">3000</span>)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">//slideDown([duration],[complete])</span></span><br><span class=\"line\"><span class=\"comment\">//$(\"ele\").slideDown(1000, function() &#123;等待动画执行1秒后,执行别的动作....&#125;);</span></span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"上卷动画slideUp\"><a href=\"#上卷动画slideUp\" class=\"headerlink\" title=\"上卷动画slideUp\"></a>上卷动画slideUp</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">\"elem\"</span>).slideUp();</span><br><span class=\"line\">slideUp([duration],[easing],[complete])</span><br><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;</span><br><span class=\"line\">$(<span class=\"string\">\"button:first\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">   $(<span class=\"string\">\"#a1\"</span>).slideUp(<span class=\"number\">3000</span>)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">$(<span class=\"string\">\"button:last\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">   $(<span class=\"string\">\"#a2\"</span>).slideUp(<span class=\"number\">3000</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">       alert(<span class=\"string\">'动画执行结束'</span>)</span><br><span class=\"line\">   &#125;)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"上卷下拉切换slideToggle\"><a href=\"#上卷下拉切换slideToggle\" class=\"headerlink\" title=\"上卷下拉切换slideToggle\"></a>上卷下拉切换slideToggle</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;</span><br><span class=\"line\">$(<span class=\"string\">\"button\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    $(<span class=\"string\">\"#a1\"</span>).slideToggle(<span class=\"number\">3000</span>)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">//slideToggle([duration],[complete])</span></span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"淡入淡出动画\"><a href=\"#淡入淡出动画\" class=\"headerlink\" title=\"淡入淡出动画\"></a>淡入淡出动画</h2><h3 id=\"淡出动画fadeOut\"><a href=\"#淡出动画fadeOut\" class=\"headerlink\" title=\"淡出动画fadeOut\"></a>淡出动画fadeOut</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;</span><br><span class=\"line\">.fadeOut([duration],[complete])</span><br><span class=\"line\">    $(<span class=\"string\">\"p\"</span>).fadeOut(&#123;</span><br><span class=\"line\">        duration: <span class=\"number\">1000</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"淡入动画fadeIn\"><a href=\"#淡入动画fadeIn\" class=\"headerlink\" title=\"淡入动画fadeIn\"></a>淡入动画fadeIn</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.fadeIn( [duration ], [ complete ] )</span><br><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;</span><br><span class=\"line\">    $(<span class=\"string\">\"p\"</span>).fadeIn(&#123;</span><br><span class=\"line\">        duration: <span class=\"number\">1000</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"淡入淡出切换fadeToggle\"><a href=\"#淡入淡出切换fadeToggle\" class=\"headerlink\" title=\"淡入淡出切换fadeToggle\"></a>淡入淡出切换fadeToggle</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;</span><br><span class=\"line\"><span class=\"comment\">//fadeToggle切换fadeOut与fadeIn效果，所谓\"切换\"，即如果元素当前是可见的，则将其隐藏(淡出)；如果元素当前是隐藏的，则使其显示(淡入)。</span></span><br><span class=\"line\">.fadeToggle(([duration],[complete])</span><br><span class=\"line\">    $(<span class=\"string\">\"p\"</span>).fadeIn(&#123;</span><br><span class=\"line\">        duration: <span class=\"number\">1000</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"淡入淡出fadeTo\"><a href=\"#淡入淡出fadeTo\" class=\"headerlink\" title=\"淡入淡出fadeTo\"></a>淡入淡出fadeTo</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;</span><br><span class=\"line\"><span class=\"comment\">//fadeToggle切换fadeOut与fadeIn效果，所谓\"切换\"，即如果元素当前是可见的，则将其隐藏(淡出)；如果元素当前是隐藏的，则使其显示(淡入)。</span></span><br><span class=\"line\">.fadeTo( duration, opacity ,callback)</span><br><span class=\"line\">     $(<span class=\"string\">\"p\"</span>).fadeTo(<span class=\"number\">1000</span>, <span class=\"number\">0.9</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">         alert(<span class=\"string\">'完成'</span>)</span><br><span class=\"line\">           &#125;);</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"toggle与slideToggle以及fadeToggle的比较\"><a href=\"#toggle与slideToggle以及fadeToggle的比较\" class=\"headerlink\" title=\"toggle与slideToggle以及fadeToggle的比较\"></a>toggle与slideToggle以及fadeToggle的比较</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">toggle、sildeToggle以及fadeToggle的区别：</span><br><span class=\"line\">toggle：切换显示与隐藏效果，改变样式display为none</span><br><span class=\"line\">sildeToggle：切换上下拉卷滚效果，设置位置高度为<span class=\"number\">0</span></span><br><span class=\"line\">fadeToggle：切换淡入淡出效果，设置透明度为<span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">细节上还是有更多的不同点:</span><br><span class=\"line\">toggle：动态效果为从右至左。横向动作</span><br><span class=\"line\">slideToggle：动态效果从下至上。竖向动作</span><br><span class=\"line\">fadeToggle() 方法在 fadeIn() 和 fadeOut() 方法之间切换。</span><br><span class=\"line\">注释：隐藏的元素不会被完全显示（不再影响页面的布局）<span class=\"number\">12345678910</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"动画animate\"><a href=\"#动画animate\" class=\"headerlink\" title=\"动画animate\"></a>动画animate</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(elem).fadeOut(<span class=\"number\">3000</span>)  </span><br><span class=\"line\">$(elem).animate(&#123;   </span><br><span class=\"line\">    opacity:<span class=\"number\">0</span></span><br><span class=\"line\">&#125;,<span class=\"number\">3000</span>)</span><br><span class=\"line\">.animate(properties,[duration],[easing],[complete])</span><br><span class=\"line\">.animate(properties,options)</span><br><span class=\"line\"></span><br><span class=\"line\">properties：一个或多个css属性的键值对所构成的<span class=\"built_in\">Object</span>对象。border、margin、padding、width、height、font、left、top、right、bottom、wordSpacing。background-color很明显不可以，否则正常情况下是不能只用动画效果的。CSS 样式使用 DOM 名称（比如 <span class=\"string\">\"fontSize\"</span>）来设置。</span><br><span class=\"line\"></span><br><span class=\"line\">属性值的单位像素（px）,除非另有说明。em和%需指定使用</span><br><span class=\"line\">.animate(&#123;</span><br><span class=\"line\">    left: <span class=\"number\">50</span>,  </span><br><span class=\"line\">    fontSize: <span class=\"string\">\"10em\"</span>,</span><br><span class=\"line\">&#125;, <span class=\"number\">500</span>);</span><br><span class=\"line\">.animate(&#123;</span><br><span class=\"line\">    width: <span class=\"string\">\"toggle\"</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">如果提供一个以+= 或 -=开始的值，那么目标值就是以这个属性的当前值加上或者减去给定的数字来计算的</span><br><span class=\"line\">.animate(&#123; </span><br><span class=\"line\">    left: <span class=\"string\">'+=50px'</span></span><br><span class=\"line\">&#125;, <span class=\"string\">\"slow\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">duration时间</span><br><span class=\"line\">动画以毫秒为单位的；<span class=\"string\">'fast'</span>和<span class=\"string\">'slow'</span>字符串，分别表示持续时间为<span class=\"number\">200</span> 和 <span class=\"number\">600</span>毫秒。</span><br><span class=\"line\"></span><br><span class=\"line\">easing动画运动的算法</span><br><span class=\"line\">jQuery库中默认调用 swing。如果需要其他的动画算法，请查找相关的插件</span><br><span class=\"line\"></span><br><span class=\"line\">complete回调</span><br><span class=\"line\">动画完成时执行的函数，这个可以保证当前动画确定完成后发会触发</span><br></pre></td></tr></table></figure>\n<hr>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.animate( properties, options )</span><br><span class=\"line\"></span><br><span class=\"line\">options参数</span><br><span class=\"line\">duration - 设置动画执行的时间</span><br><span class=\"line\">easing - 规定 easing 函数，过渡使用的缓动函数</span><br><span class=\"line\">step：规定每个动画的每一步完成之后要执行的函数</span><br><span class=\"line\">progress：每一次动画调用的时候会执行这个回调，就是一个进度的概念</span><br><span class=\"line\"></span><br><span class=\"line\">complete：动画完成回调</span><br><span class=\"line\"></span><br><span class=\"line\">$(<span class=\"string\">'#elem'</span>).animate(&#123;</span><br><span class=\"line\">    width: <span class=\"string\">'toggle'</span>,  </span><br><span class=\"line\">    height: <span class=\"string\">'toggle'</span></span><br><span class=\"line\">  &#125;, &#123;</span><br><span class=\"line\">    duration: <span class=\"number\">5000</span>,</span><br><span class=\"line\">    specialEasing: &#123;</span><br><span class=\"line\">      width: <span class=\"string\">'linear'</span>,</span><br><span class=\"line\">      height: <span class=\"string\">'easeOutBounce'</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    complete: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      $(<span class=\"keyword\">this</span>).after(<span class=\"string\">'&lt;div&gt;Animation complete.&lt;/div&gt;'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"动画stop\"><a href=\"#动画stop\" class=\"headerlink\" title=\"动画stop\"></a>动画stop</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.stop( [clearQueue ], [ jumpToEnd ] )</span><br><span class=\"line\">.stop( [queue ], [ clearQueue ] ,[ jumpToEnd ] )</span><br><span class=\"line\">.stop(); 停止当前动画，点击在暂停处继续开始</span><br><span class=\"line\">.stop(<span class=\"literal\">true</span>); 如果同一元素调用多个动画方法，尚未被执行的动画被放置在元素的效果队列中。这些动画不会开始，直到第一个完成。当调用.stop()的时候，队列中的下一个动画立即开始。</span><br><span class=\"line\">.stop(<span class=\"literal\">true</span>,<span class=\"literal\">true</span>); 当前动画将停止，但该元素上的 CSS 属性会被立刻修改成动画的目标值</span><br><span class=\"line\">$(<span class=\"string\">\"#aaron\"</span>).animate(&#123;</span><br><span class=\"line\">    height: <span class=\"number\">300</span></span><br><span class=\"line\">&#125;, <span class=\"number\">5000</span>)</span><br><span class=\"line\">$(<span class=\"string\">\"#aaron\"</span>).animate(&#123;</span><br><span class=\"line\">    width: <span class=\"number\">300</span></span><br><span class=\"line\">&#125;, <span class=\"number\">5000</span>)</span><br><span class=\"line\">$(<span class=\"string\">\"#aaron\"</span>).animate(&#123;</span><br><span class=\"line\">    opacity: <span class=\"number\">0.6</span></span><br><span class=\"line\">&#125;, <span class=\"number\">2000</span>)</span><br><span class=\"line\">stop()：只会停止第一个动画，第二个第三个继续</span><br><span class=\"line\">stop(<span class=\"literal\">true</span>)：停止第一个、第二个和第三个动画</span><br><span class=\"line\">stop(<span class=\"literal\">true</span> ture)：停止动画，直接跳到第一个动画的最终状态</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"each\"><a href=\"#each\" class=\"headerlink\" title=\"each\"></a>each</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jQuery.each(array, callback )</span><br><span class=\"line\">jQuery.each( object, callback )</span><br><span class=\"line\"><span class=\"comment\">//第一个参数传递的就是一个对象或者数组，第二个是回调函数</span></span><br><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;</span><br><span class=\"line\">$(<span class=\"string\">\"#exec\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> v = $(<span class=\"string\">\"#animation\"</span>).val();</span><br><span class=\"line\">  <span class=\"keyword\">var</span> $aaron = $(<span class=\"string\">\"#aaron\"</span>);</span><br><span class=\"line\">  $aaron.empty();</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (v == <span class=\"string\">\"1\"</span>) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 遍历数组元素</span></span><br><span class=\"line\">      $.each([<span class=\"string\">'Aaron'</span>, <span class=\"string\">'慕课网'</span>], <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">i, item</span>) </span>&#123;</span><br><span class=\"line\">          $aaron.append(<span class=\"string\">\"索引=\"</span> + i + <span class=\"string\">\"; 元素=\"</span> + item);</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (v == <span class=\"string\">\"2\"</span>) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 遍历对象属性</span></span><br><span class=\"line\">      $.each(&#123;</span><br><span class=\"line\">          name: <span class=\"string\">\"张三\"</span>,</span><br><span class=\"line\">          age: <span class=\"number\">18</span></span><br><span class=\"line\">      &#125;, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">property, value</span>) </span>&#123;</span><br><span class=\"line\">          $aaron.append(<span class=\"string\">\"属性名=\"</span> + property + <span class=\"string\">\"; 属性值=\"</span> + value);</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">  &#125; </span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"索引inArray\"><a href=\"#索引inArray\" class=\"headerlink\" title=\"索引inArray\"></a>索引inArray</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jQuery.inArray( value, array ,[ fromIndex ] )</span><br><span class=\"line\">$.inArray(<span class=\"number\">5</span>,[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>]) <span class=\"comment\">//返回对应的索引：4</span></span><br><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;</span><br><span class=\"line\">$(<span class=\"string\">\"#exec\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> v = $(<span class=\"string\">\"#animation\"</span>).val();</span><br><span class=\"line\">    <span class=\"keyword\">var</span> $aaron = $(<span class=\"string\">\"#aaron\"</span>);</span><br><span class=\"line\">       $aaron.empty();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (v == <span class=\"string\">\"1\"</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> index = $.inArray(<span class=\"string\">'Aaron'</span>,[<span class=\"string\">'test'</span>,<span class=\"string\">'Aaron'</span>, <span class=\"string\">'array'</span>,<span class=\"string\">'慕课网'</span>]);</span><br><span class=\"line\">        $aaron.text(<span class=\"string\">'Aaron的索引是: '</span>+ index)<span class=\"comment\">//1</span></span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (v == <span class=\"string\">\"2\"</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//指定索引开始的位置</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> index = $.inArray(<span class=\"string\">'a'</span>,[<span class=\"string\">'a'</span>,<span class=\"string\">'b'</span>,<span class=\"string\">'c'</span>,<span class=\"string\">'d'</span>,<span class=\"string\">'a'</span>,<span class=\"string\">'c'</span>]);</span><br><span class=\"line\">        $aaron.text(<span class=\"string\">'a的索引是: '</span>+ index)<span class=\"comment\">//0</span></span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"去空格神器trim方法\"><a href=\"#去空格神器trim方法\" class=\"headerlink\" title=\"去空格神器trim方法\"></a>去空格神器trim方法</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//jQuery.trim()函数用于去除字符串两端的空白字符</span></span><br><span class=\"line\"><span class=\"comment\">//trim处理</span></span><br><span class=\"line\">&lt;input type=<span class=\"string\">\"text\"</span> name=<span class=\"string\">\"\"</span> id=<span class=\"string\">\"results2\"</span> value=<span class=\"string\">\" 前后留空 \"</span> /&gt;</span><br><span class=\"line\">&lt;input id=<span class=\"string\">\"exec2\"</span> type=<span class=\"string\">\"button\"</span> value=<span class=\"string\">\"点击执行\"</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">$(<span class=\"string\">\"#exec2\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">     alert(<span class=\"string\">\"值的长度：\"</span> + $.trim($(<span class=\"string\">\"#results2\"</span>).val()).length)</span><br><span class=\"line\">&#125;);<span class=\"comment\">//412345678</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"DOM元素的获取get方法\"><a href=\"#DOM元素的获取get方法\" class=\"headerlink\" title=\"DOM元素的获取get方法\"></a>DOM元素的获取get方法</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.get( [index ] )</span><br><span class=\"line\"> $(a).get(<span class=\"number\">1</span>)</span><br><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;</span><br><span class=\"line\">$(<span class=\"string\">\"#exec\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">   <span class=\"comment\">//get找到第二个a元素，并修改蓝色字体</span></span><br><span class=\"line\">   $aaron.get(<span class=\"number\">1</span>).style.color = <span class=\"string\">\"blue\"</span></span><br><span class=\"line\">   <span class=\"comment\">//get找到最后一个a元素，并修改字体颜色</span></span><br><span class=\"line\">   $aaron.get(<span class=\"number\">-1</span>).style.color = <span class=\"string\">\"#8A2BE2\"</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\" \"></a> </h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.index()</span><br><span class=\"line\">.index( selector )</span><br><span class=\"line\">.index( element )</span><br><span class=\"line\">&lt;ul&gt;</span><br><span class=\"line\">   &lt;a&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span></span><br><span class=\"line\">   &lt;a&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span></span><br><span class=\"line\">   &lt;li id=<span class=\"string\">\"test1\"</span>&gt;<span class=\"number\">1</span>&lt;<span class=\"regexp\">/li&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">   &lt;li id=\"test2\"&gt;2&lt;/</span>li&gt;</span><br><span class=\"line\">   &lt;li id=<span class=\"string\">\"test3\"</span>&gt;<span class=\"number\">3</span>&lt;<span class=\"regexp\">/li&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/u</span>l&gt;</span><br><span class=\"line\">&lt;ul&gt;</span><br><span class=\"line\">   &lt;li id=<span class=\"string\">\"test4\"</span>&gt;<span class=\"number\">4</span>&lt;<span class=\"regexp\">/li&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">   &lt;li id=\"test5\"&gt;5&lt;/</span>li&gt;</span><br><span class=\"line\">   &lt;li id=<span class=\"string\">\"test6\"</span>&gt;<span class=\"number\">6</span>&lt;<span class=\"regexp\">/li&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/u</span>l&gt;</span><br><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;</span><br><span class=\"line\">$(<span class=\"string\">\"#exec\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> v = $(<span class=\"string\">\"#animation\"</span>).val();</span><br><span class=\"line\">    <span class=\"keyword\">var</span> $span = $(<span class=\"string\">\"span\"</span>);</span><br><span class=\"line\">    $span.empty();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (v == <span class=\"string\">\"1\"</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//找到第一个li的同辈节点中的索引位置</span></span><br><span class=\"line\">        $span.text($(<span class=\"string\">\"li\"</span>).index())<span class=\"comment\">//2</span></span><br><span class=\"line\">        <span class=\"comment\">//通过传递dom查找      $span.text($(\"li\").index(d$(\"#test5\")))//4</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (v == <span class=\"string\">\"3\"</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//通过传递jQuery对象查找</span></span><br><span class=\"line\">                 $span.text($(<span class=\"string\">\"li\"</span>).index($(<span class=\"string\">\"#test6\"</span>)))<span class=\"comment\">//5</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>"},{"title":"下拉刷新上拉加载组件","comments":1,"abbrlink":"c64071c3","date":"2019-03-22T15:21:50.000Z","_content":"\n\n\n# 下拉刷新上拉加载组件的使用\n\n> 在移动端H5网页中，下拉刷新和上拉加载更多数据的交互方式出现频率很高，开源社区也有很多类似的解决方案，如iscroll，pulltorefresh.js库等。下面是对这两种常见交互基本实现原理的阐述。\n\nhttps://github.com/minirefresh/minirefresh\n\nhttps://github.com/BoxFactura/pulltorefresh.js\n\n\n\n## 实现原理\n\n### 下拉刷新\n\n实现下拉刷新主要分为三步：\n\n- 监听原生`touchstart`事件，记录其初始位置的值，`e.touches[0].pageY`；\n- 监听原生`touchmove`事件，记录并计算当前滑动的位置值与初始位置值的差值，大于`0`表示向下拉动，并借助CSS3的`translateY`属性使元素跟随手势向下滑动对应的差值，同时也应设置一个允许滑动的最大值；\n- 监听原生`touchend`事件，若此时元素滑动达到最大值，则触发`callback`，同时将`translateY`重设为`0`，元素回到初始位置。\n\n示例。查看链接：[下拉刷新demo]()（PC浏览器需调成手机模拟器模式查看）\n\nhtml\n\n```html\n<main>\n    <p class=\"refreshText\"></p>\n    <ul id=\"refreshContainer\">\n        <li>111</li>\n        <li>222</li>\n        <li>333</li>\n        <li>444</li>\n        <li>555</li>\n        ...\n    </ul>\n</main>\n```\n\njavascript\n\n```javascript\n(function(window) {\n    var _element = document.getElementById('refreshContainer'),\n      _refreshText = document.querySelector('.refreshText'),\n      _startPos = 0,\n      _transitionHeight = 0;\n\n    _element.addEventListener('touchstart', function(e) {\n        console.log('初始位置：', e.touches[0].pageY);\n        _startPos = e.touches[0].pageY;\n        _element.style.position = 'relative';\n        _element.style.transition = 'transform 0s';\n    }, false);\n    \n    _element.addEventListener('touchmove', function(e) {\n        console.log('当前位置：', e.touches[0].pageY);\n        _transitionHeight = e.touches[0].pageY - _startPos;\n        \n        if (_transitionHeight > 0 && _transitionHeight < 60) {\n            _refreshText.innerText = '下拉刷新';\n            _element.style.transform = 'translateY('+_transitionHeight+'px)';\n\n            if (_transitionHeight > 55) {\n              _refreshText.innerText = '释放更新';\n            }\n        }                \n    }, false);\n\n    _element.addEventListener('touchend', function(e) {\n        _element.style.transition = 'transform 0.5s ease 1s';\n        _element.style.transform = 'translateY(0px)';\n        _refreshText.innerText = '更新中...';\n\n        // todo...\n\n    }, false);\n})(window);\n```\n\n在下拉到松手的过程中，经历了三个状态：\n\n- 当前手势滑动位置与初始位置差值大于零时，提示正在进行下拉刷新操作；\n- 下拉到一定值时，显示松手释放后的操作提示；\n- 下拉到达设定最大值松手时，执行回调，提示正在进行更新操作。\n\n### 上拉加载\n\n上拉加载更多数据是在页面滚动时触发的动作，一般是页面滚动到底部时触发，也可以选择在滚动到一定位置的时候触发。\n\n以滚动到页面底部为例。实现原理是分别获得当前滚动条的`scrollTop`值、当前可视范围的高度值`clientHeight`以及文档的总高度`scrollHeight`。当`scrollTop`和`clientHeight`的值之和大于等于`scrollHeight`时，触发`callback`。\n\n示例。查看链接：[上拉加载demo]()\n\nhtml\n\n```html\n<main>\n    <ul id=\"refreshContainer\">\n        <li>111</li>\n        <li>222</li>\n        <li>333</li>\n        <li>444</li>\n        <li>555</li>\n        ...\n    </ul>\n    <p class=\"refreshText\"></p>\n</main>\n```\n\n```javascript\n(function(window) {\n    // 获取当前滚动条的位置 \n    function getScrollTop() { \n        var scrollTop = 0; \n        if (document.documentElement && document.documentElement.scrollTop) { \n            scrollTop = document.documentElement.scrollTop; \n        } else if (document.body) { \n            scrollTop = document.body.scrollTop; \n        } \n        return scrollTop; \n    } \n    \n    // 获取当前可视范围的高度 \n    function getClientHeight() { \n        var clientHeight = 0; \n        if (document.body.clientHeight && document.documentElement.clientHeight) { \n            clientHeight = Math.min(document.body.clientHeight, document.documentElement.clientHeight); \n        } \n        else { \n            clientHeight = Math.max(document.body.clientHeight, document.documentElement.clientHeight); \n        } \n        return clientHeight; \n    } \n    \n    // 获取文档完整的高度 \n    function getScrollHeight() { \n        return Math.max(document.body.scrollHeight, document.documentElement.scrollHeight); \n    }\n    \n    var _text = document.querySelector('.refreshText'),\n      _container = document.getElementById('refreshContainer');\n    \n    // 节流函数\n    var throttle = function(method, context){\n      clearTimeout(method.tId);\n      method.tId = setTimeout(function(){\n        method.call(context);\n      }, 300);\n    }\n    \n    function fetchData() {\n        setTimeout(function() {\n            _container.insertAdjacentHTML('beforeend', '<li>new add...</li>');\n        }, 1000);\n    }\n    \n    window.onscroll = function() {\n      if (getScrollTop() + getClientHeight() == getScrollHeight()) {\n          _text.innerText = '加载中...';\n          throttle(fetchData);\n      }\n    };\n\n})(window);\n```\n\n页面绑定`onscroll`事件时加入了节流函数，其作用就是忽略滚动条300毫秒内的连续多次触发。\n\n## 小结\n\n上拉刷新的实现主要依靠的是`touch`事件的三个阶段，以及借助CSS3动画效果；下拉加载主要依靠页面的`onscroll`事件，需要注意的是页面滚动时可能要考虑函数节流。\n\n## 学习实现\n\n滚动加载待实现。。。\n\nhtml\n\n```html\n <div class=\"atmosphere\">\n    <div class=\"ptr--ptr\">\n        <div class=\"ptr--box\">\n            <div class=\"ptr--content\">\n                <div class=\"ptr--icon\">⇣</div>\n                <div class=\"ptr--text\">下拉即可刷新...</div>\n            </div>\n        </div>\n    </div>\n    <div id=\"ptr\" class=\"ptr--top\">\n        <div class=\"list-card\">\n            <div class=\"item-card\">\n                1\n            </div>\n            <div class=\"item-card\">\n                2\n            </div>\n            <div class=\"item-card\">\n                ...\n            </div>\n        </div>\n    </div>\n</div>\n```\n\n`javascript` 只有下拉刷新，滚动加载还没有\n\n```javascript\n// 下拉刷新\n    var slide = function (option) {\n        var defaults={\n            container:'',\n            next:function(){}\n        }\n        var start,\n            end,\n            length,\n            isLock = false,//是否锁定整个操作\n            isCanDo = false,//是否移动滑块\n            isTouchPad = (/hp-tablet/gi).test(navigator.appVersion),\n            hasTouch = 'ontouchstart' in window && !isTouchPad;\n        var obj = document.querySelector(option.container);\n        var loading=obj.firstElementChild;\n        var textLoading = loading.firstElementChild.firstElementChild.lastElementChild\n        var offset=loading.clientHeight;\n        var objparent = obj.parentElement;\n        /*操作方法*/\n        var fn =\n            {\n                //移动容器\n                translate: function (diff) {\n                    obj.style.webkitTransform='translate3d(0,'+diff+'px,0)';\n                    obj.style.transform='translate3d(0,'+diff+'px,0)';\n                },\n                //设置效果时间\n                setTransition: function (time) {\n                    obj.style.webkitTransition='all '+time+'s';\n                    obj.style.transition='all '+time+'s';\n                },\n                //返回到初始位置\n                back: function () {\n                    fn.translate(0 - offset);\n                    //标识操作完成\n                    isLock = false;\n                },\n                addEvent:function(element,event_name,event_fn){\n                    if (element.addEventListener) {\n                        element.addEventListener(event_name, event_fn, false);\n                    } else if (element.attachEvent) {\n                        element.attachEvent('on' + event_name, event_fn);\n                    } else {\n                        element['on' + event_name] = event_fn;\n                    }\n                }\n            };\n\n        fn.translate(0-offset);\n        fn.addEvent(obj,'touchstart',start);\n        fn.addEvent(obj,'touchmove',move);\n        fn.addEvent(obj,'touchend',end);\n        fn.addEvent(obj,'mousedown',start)\n        fn.addEvent(obj,'mousemove',move)\n        fn.addEvent(obj,'mouseup',end)\n\n        //滑动开始\n        function start(e) {\n            if (objparent.scrollTop <= 0 && !isLock) {\n                var even = typeof event == \"undefined\" ? e : event;\n                //标识操作进行中\n                isLock = true;\n                isCanDo = true;\n                //保存当前鼠标Y坐标\n                start = hasTouch ? even.touches[0].pageY : even.pageY;\n                //消除滑块动画时间\n                fn.setTransition(0);\n                textLoading.innerHTML='下拉即可刷新';\n            }\n            return false;\n        }\n\n        //滑动中\n        function move(e) {\n            if (objparent.scrollTop <= 0 && isCanDo) {\n                var even = typeof event == \"undefined\" ? e : event;\n                //保存当前鼠标Y坐标\n                end = hasTouch ? even.touches[0].pageY : even.pageY;\n                if (start < end) {\n                    even.preventDefault();\n                    //消除滑块动画时间\n                    fn.setTransition(0);\n                    //移动滑块\n                    if((end-start-offset)/2<=50) {\n                        length=(end - start - offset) / 2;\n                        fn.translate(length);\n                    }\n                    else {\n                        length+=0.3;\n                        fn.translate(length);\n                    }\n                }\n            }\n        }\n        //滑动结束\n        function end(e) {\n            if (isCanDo) {\n                isCanDo = false;\n                //判断滑动距离是否大于等于指定值\n                if (end - start >= offset) {\n                    //设置滑块回弹时间\n                    fn.setTransition(1);\n                    //保留提示部分\n                    fn.translate(0);\n                    //执行回调函数\n                    textLoading.innerHTML='释放即可刷新';\n                    if (typeof option.next == \"function\") {\n                        option.next.call(fn, e);\n                    }\n                } else {\n                    //返回初始状态\n                    fn.back();\n                }\n            }\n        }\n    }\n    slide({container:\".atmosphere\",next: function (e) {\n            //松手之后执行逻辑,ajax请求数据，数据返回后隐藏加载中提示\n            var that = this;\n            setTimeout(function () {\n                that.back.call();\n            }, 2000);\n        }});\n```\n\n","source":"_posts/下拉刷新上拉加载组件.md","raw":"---\ntitle: 下拉刷新上拉加载组件\ncomments: true\ncategories:\n  - JavaScript·\ntags:\n  - JavaScript\nabbrlink: c64071c3\ndate: 2019-03-22 23:21:50\n---\n\n\n\n# 下拉刷新上拉加载组件的使用\n\n> 在移动端H5网页中，下拉刷新和上拉加载更多数据的交互方式出现频率很高，开源社区也有很多类似的解决方案，如iscroll，pulltorefresh.js库等。下面是对这两种常见交互基本实现原理的阐述。\n\nhttps://github.com/minirefresh/minirefresh\n\nhttps://github.com/BoxFactura/pulltorefresh.js\n\n\n\n## 实现原理\n\n### 下拉刷新\n\n实现下拉刷新主要分为三步：\n\n- 监听原生`touchstart`事件，记录其初始位置的值，`e.touches[0].pageY`；\n- 监听原生`touchmove`事件，记录并计算当前滑动的位置值与初始位置值的差值，大于`0`表示向下拉动，并借助CSS3的`translateY`属性使元素跟随手势向下滑动对应的差值，同时也应设置一个允许滑动的最大值；\n- 监听原生`touchend`事件，若此时元素滑动达到最大值，则触发`callback`，同时将`translateY`重设为`0`，元素回到初始位置。\n\n示例。查看链接：[下拉刷新demo]()（PC浏览器需调成手机模拟器模式查看）\n\nhtml\n\n```html\n<main>\n    <p class=\"refreshText\"></p>\n    <ul id=\"refreshContainer\">\n        <li>111</li>\n        <li>222</li>\n        <li>333</li>\n        <li>444</li>\n        <li>555</li>\n        ...\n    </ul>\n</main>\n```\n\njavascript\n\n```javascript\n(function(window) {\n    var _element = document.getElementById('refreshContainer'),\n      _refreshText = document.querySelector('.refreshText'),\n      _startPos = 0,\n      _transitionHeight = 0;\n\n    _element.addEventListener('touchstart', function(e) {\n        console.log('初始位置：', e.touches[0].pageY);\n        _startPos = e.touches[0].pageY;\n        _element.style.position = 'relative';\n        _element.style.transition = 'transform 0s';\n    }, false);\n    \n    _element.addEventListener('touchmove', function(e) {\n        console.log('当前位置：', e.touches[0].pageY);\n        _transitionHeight = e.touches[0].pageY - _startPos;\n        \n        if (_transitionHeight > 0 && _transitionHeight < 60) {\n            _refreshText.innerText = '下拉刷新';\n            _element.style.transform = 'translateY('+_transitionHeight+'px)';\n\n            if (_transitionHeight > 55) {\n              _refreshText.innerText = '释放更新';\n            }\n        }                \n    }, false);\n\n    _element.addEventListener('touchend', function(e) {\n        _element.style.transition = 'transform 0.5s ease 1s';\n        _element.style.transform = 'translateY(0px)';\n        _refreshText.innerText = '更新中...';\n\n        // todo...\n\n    }, false);\n})(window);\n```\n\n在下拉到松手的过程中，经历了三个状态：\n\n- 当前手势滑动位置与初始位置差值大于零时，提示正在进行下拉刷新操作；\n- 下拉到一定值时，显示松手释放后的操作提示；\n- 下拉到达设定最大值松手时，执行回调，提示正在进行更新操作。\n\n### 上拉加载\n\n上拉加载更多数据是在页面滚动时触发的动作，一般是页面滚动到底部时触发，也可以选择在滚动到一定位置的时候触发。\n\n以滚动到页面底部为例。实现原理是分别获得当前滚动条的`scrollTop`值、当前可视范围的高度值`clientHeight`以及文档的总高度`scrollHeight`。当`scrollTop`和`clientHeight`的值之和大于等于`scrollHeight`时，触发`callback`。\n\n示例。查看链接：[上拉加载demo]()\n\nhtml\n\n```html\n<main>\n    <ul id=\"refreshContainer\">\n        <li>111</li>\n        <li>222</li>\n        <li>333</li>\n        <li>444</li>\n        <li>555</li>\n        ...\n    </ul>\n    <p class=\"refreshText\"></p>\n</main>\n```\n\n```javascript\n(function(window) {\n    // 获取当前滚动条的位置 \n    function getScrollTop() { \n        var scrollTop = 0; \n        if (document.documentElement && document.documentElement.scrollTop) { \n            scrollTop = document.documentElement.scrollTop; \n        } else if (document.body) { \n            scrollTop = document.body.scrollTop; \n        } \n        return scrollTop; \n    } \n    \n    // 获取当前可视范围的高度 \n    function getClientHeight() { \n        var clientHeight = 0; \n        if (document.body.clientHeight && document.documentElement.clientHeight) { \n            clientHeight = Math.min(document.body.clientHeight, document.documentElement.clientHeight); \n        } \n        else { \n            clientHeight = Math.max(document.body.clientHeight, document.documentElement.clientHeight); \n        } \n        return clientHeight; \n    } \n    \n    // 获取文档完整的高度 \n    function getScrollHeight() { \n        return Math.max(document.body.scrollHeight, document.documentElement.scrollHeight); \n    }\n    \n    var _text = document.querySelector('.refreshText'),\n      _container = document.getElementById('refreshContainer');\n    \n    // 节流函数\n    var throttle = function(method, context){\n      clearTimeout(method.tId);\n      method.tId = setTimeout(function(){\n        method.call(context);\n      }, 300);\n    }\n    \n    function fetchData() {\n        setTimeout(function() {\n            _container.insertAdjacentHTML('beforeend', '<li>new add...</li>');\n        }, 1000);\n    }\n    \n    window.onscroll = function() {\n      if (getScrollTop() + getClientHeight() == getScrollHeight()) {\n          _text.innerText = '加载中...';\n          throttle(fetchData);\n      }\n    };\n\n})(window);\n```\n\n页面绑定`onscroll`事件时加入了节流函数，其作用就是忽略滚动条300毫秒内的连续多次触发。\n\n## 小结\n\n上拉刷新的实现主要依靠的是`touch`事件的三个阶段，以及借助CSS3动画效果；下拉加载主要依靠页面的`onscroll`事件，需要注意的是页面滚动时可能要考虑函数节流。\n\n## 学习实现\n\n滚动加载待实现。。。\n\nhtml\n\n```html\n <div class=\"atmosphere\">\n    <div class=\"ptr--ptr\">\n        <div class=\"ptr--box\">\n            <div class=\"ptr--content\">\n                <div class=\"ptr--icon\">⇣</div>\n                <div class=\"ptr--text\">下拉即可刷新...</div>\n            </div>\n        </div>\n    </div>\n    <div id=\"ptr\" class=\"ptr--top\">\n        <div class=\"list-card\">\n            <div class=\"item-card\">\n                1\n            </div>\n            <div class=\"item-card\">\n                2\n            </div>\n            <div class=\"item-card\">\n                ...\n            </div>\n        </div>\n    </div>\n</div>\n```\n\n`javascript` 只有下拉刷新，滚动加载还没有\n\n```javascript\n// 下拉刷新\n    var slide = function (option) {\n        var defaults={\n            container:'',\n            next:function(){}\n        }\n        var start,\n            end,\n            length,\n            isLock = false,//是否锁定整个操作\n            isCanDo = false,//是否移动滑块\n            isTouchPad = (/hp-tablet/gi).test(navigator.appVersion),\n            hasTouch = 'ontouchstart' in window && !isTouchPad;\n        var obj = document.querySelector(option.container);\n        var loading=obj.firstElementChild;\n        var textLoading = loading.firstElementChild.firstElementChild.lastElementChild\n        var offset=loading.clientHeight;\n        var objparent = obj.parentElement;\n        /*操作方法*/\n        var fn =\n            {\n                //移动容器\n                translate: function (diff) {\n                    obj.style.webkitTransform='translate3d(0,'+diff+'px,0)';\n                    obj.style.transform='translate3d(0,'+diff+'px,0)';\n                },\n                //设置效果时间\n                setTransition: function (time) {\n                    obj.style.webkitTransition='all '+time+'s';\n                    obj.style.transition='all '+time+'s';\n                },\n                //返回到初始位置\n                back: function () {\n                    fn.translate(0 - offset);\n                    //标识操作完成\n                    isLock = false;\n                },\n                addEvent:function(element,event_name,event_fn){\n                    if (element.addEventListener) {\n                        element.addEventListener(event_name, event_fn, false);\n                    } else if (element.attachEvent) {\n                        element.attachEvent('on' + event_name, event_fn);\n                    } else {\n                        element['on' + event_name] = event_fn;\n                    }\n                }\n            };\n\n        fn.translate(0-offset);\n        fn.addEvent(obj,'touchstart',start);\n        fn.addEvent(obj,'touchmove',move);\n        fn.addEvent(obj,'touchend',end);\n        fn.addEvent(obj,'mousedown',start)\n        fn.addEvent(obj,'mousemove',move)\n        fn.addEvent(obj,'mouseup',end)\n\n        //滑动开始\n        function start(e) {\n            if (objparent.scrollTop <= 0 && !isLock) {\n                var even = typeof event == \"undefined\" ? e : event;\n                //标识操作进行中\n                isLock = true;\n                isCanDo = true;\n                //保存当前鼠标Y坐标\n                start = hasTouch ? even.touches[0].pageY : even.pageY;\n                //消除滑块动画时间\n                fn.setTransition(0);\n                textLoading.innerHTML='下拉即可刷新';\n            }\n            return false;\n        }\n\n        //滑动中\n        function move(e) {\n            if (objparent.scrollTop <= 0 && isCanDo) {\n                var even = typeof event == \"undefined\" ? e : event;\n                //保存当前鼠标Y坐标\n                end = hasTouch ? even.touches[0].pageY : even.pageY;\n                if (start < end) {\n                    even.preventDefault();\n                    //消除滑块动画时间\n                    fn.setTransition(0);\n                    //移动滑块\n                    if((end-start-offset)/2<=50) {\n                        length=(end - start - offset) / 2;\n                        fn.translate(length);\n                    }\n                    else {\n                        length+=0.3;\n                        fn.translate(length);\n                    }\n                }\n            }\n        }\n        //滑动结束\n        function end(e) {\n            if (isCanDo) {\n                isCanDo = false;\n                //判断滑动距离是否大于等于指定值\n                if (end - start >= offset) {\n                    //设置滑块回弹时间\n                    fn.setTransition(1);\n                    //保留提示部分\n                    fn.translate(0);\n                    //执行回调函数\n                    textLoading.innerHTML='释放即可刷新';\n                    if (typeof option.next == \"function\") {\n                        option.next.call(fn, e);\n                    }\n                } else {\n                    //返回初始状态\n                    fn.back();\n                }\n            }\n        }\n    }\n    slide({container:\".atmosphere\",next: function (e) {\n            //松手之后执行逻辑,ajax请求数据，数据返回后隐藏加载中提示\n            var that = this;\n            setTimeout(function () {\n                that.back.call();\n            }, 2000);\n        }});\n```\n\n","slug":"下拉刷新上拉加载组件","published":1,"updated":"2020-05-18T16:35:00.484Z","layout":"post","photos":[],"link":"","_id":"cl78qfoqk006pqic9vv19h6nt","content":"<h1 id=\"下拉刷新上拉加载组件的使用\"><a href=\"#下拉刷新上拉加载组件的使用\" class=\"headerlink\" title=\"下拉刷新上拉加载组件的使用\"></a>下拉刷新上拉加载组件的使用</h1><blockquote>\n<p>在移动端H5网页中，下拉刷新和上拉加载更多数据的交互方式出现频率很高，开源社区也有很多类似的解决方案，如iscroll，pulltorefresh.js库等。下面是对这两种常见交互基本实现原理的阐述。</p>\n</blockquote>\n<p><a href=\"https://github.com/minirefresh/minirefresh\" target=\"_blank\" rel=\"noopener\">https://github.com/minirefresh/minirefresh</a></p>\n<p><a href=\"https://github.com/BoxFactura/pulltorefresh.js\" target=\"_blank\" rel=\"noopener\">https://github.com/BoxFactura/pulltorefresh.js</a></p>\n<h2 id=\"实现原理\"><a href=\"#实现原理\" class=\"headerlink\" title=\"实现原理\"></a>实现原理</h2><h3 id=\"下拉刷新\"><a href=\"#下拉刷新\" class=\"headerlink\" title=\"下拉刷新\"></a>下拉刷新</h3><p>实现下拉刷新主要分为三步：</p>\n<ul>\n<li>监听原生<code>touchstart</code>事件，记录其初始位置的值，<code>e.touches[0].pageY</code>；</li>\n<li>监听原生<code>touchmove</code>事件，记录并计算当前滑动的位置值与初始位置值的差值，大于<code>0</code>表示向下拉动，并借助CSS3的<code>translateY</code>属性使元素跟随手势向下滑动对应的差值，同时也应设置一个允许滑动的最大值；</li>\n<li>监听原生<code>touchend</code>事件，若此时元素滑动达到最大值，则触发<code>callback</code>，同时将<code>translateY</code>重设为<code>0</code>，元素回到初始位置。</li>\n</ul>\n<p>示例。查看链接：<a href=\"\">下拉刷新demo</a>（PC浏览器需调成手机模拟器模式查看）</p>\n<p>html</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">main</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\"refreshText\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">\"refreshContainer\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>111<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>222<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>333<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>444<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>555<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        ...</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">main</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>javascript</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">window</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> _element = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'refreshContainer'</span>),</span><br><span class=\"line\">      _refreshText = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.refreshText'</span>),</span><br><span class=\"line\">      _startPos = <span class=\"number\">0</span>,</span><br><span class=\"line\">      _transitionHeight = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    _element.addEventListener(<span class=\"string\">'touchstart'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'初始位置：'</span>, e.touches[<span class=\"number\">0</span>].pageY);</span><br><span class=\"line\">        _startPos = e.touches[<span class=\"number\">0</span>].pageY;</span><br><span class=\"line\">        _element.style.position = <span class=\"string\">'relative'</span>;</span><br><span class=\"line\">        _element.style.transition = <span class=\"string\">'transform 0s'</span>;</span><br><span class=\"line\">    &#125;, <span class=\"literal\">false</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">    _element.addEventListener(<span class=\"string\">'touchmove'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'当前位置：'</span>, e.touches[<span class=\"number\">0</span>].pageY);</span><br><span class=\"line\">        _transitionHeight = e.touches[<span class=\"number\">0</span>].pageY - _startPos;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (_transitionHeight &gt; <span class=\"number\">0</span> &amp;&amp; _transitionHeight &lt; <span class=\"number\">60</span>) &#123;</span><br><span class=\"line\">            _refreshText.innerText = <span class=\"string\">'下拉刷新'</span>;</span><br><span class=\"line\">            _element.style.transform = <span class=\"string\">'translateY('</span>+_transitionHeight+<span class=\"string\">'px)'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (_transitionHeight &gt; <span class=\"number\">55</span>) &#123;</span><br><span class=\"line\">              _refreshText.innerText = <span class=\"string\">'释放更新'</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;                </span><br><span class=\"line\">    &#125;, <span class=\"literal\">false</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    _element.addEventListener(<span class=\"string\">'touchend'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">        _element.style.transition = <span class=\"string\">'transform 0.5s ease 1s'</span>;</span><br><span class=\"line\">        _element.style.transform = <span class=\"string\">'translateY(0px)'</span>;</span><br><span class=\"line\">        _refreshText.innerText = <span class=\"string\">'更新中...'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// todo...</span></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;, <span class=\"literal\">false</span>);</span><br><span class=\"line\">&#125;)(<span class=\"built_in\">window</span>);</span><br></pre></td></tr></table></figure>\n<p>在下拉到松手的过程中，经历了三个状态：</p>\n<ul>\n<li>当前手势滑动位置与初始位置差值大于零时，提示正在进行下拉刷新操作；</li>\n<li>下拉到一定值时，显示松手释放后的操作提示；</li>\n<li>下拉到达设定最大值松手时，执行回调，提示正在进行更新操作。</li>\n</ul>\n<h3 id=\"上拉加载\"><a href=\"#上拉加载\" class=\"headerlink\" title=\"上拉加载\"></a>上拉加载</h3><p>上拉加载更多数据是在页面滚动时触发的动作，一般是页面滚动到底部时触发，也可以选择在滚动到一定位置的时候触发。</p>\n<p>以滚动到页面底部为例。实现原理是分别获得当前滚动条的<code>scrollTop</code>值、当前可视范围的高度值<code>clientHeight</code>以及文档的总高度<code>scrollHeight</code>。当<code>scrollTop</code>和<code>clientHeight</code>的值之和大于等于<code>scrollHeight</code>时，触发<code>callback</code>。</p>\n<p>示例。查看链接：<a href=\"\">上拉加载demo</a></p>\n<p>html</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">main</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">\"refreshContainer\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>111<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>222<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>333<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>444<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>555<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        ...</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\"refreshText\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">main</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">window</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 获取当前滚动条的位置 </span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getScrollTop</span>(<span class=\"params\"></span>) </span>&#123; </span><br><span class=\"line\">        <span class=\"keyword\">var</span> scrollTop = <span class=\"number\">0</span>; </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.documentElement &amp;&amp; <span class=\"built_in\">document</span>.documentElement.scrollTop) &#123; </span><br><span class=\"line\">            scrollTop = <span class=\"built_in\">document</span>.documentElement.scrollTop; </span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.body) &#123; </span><br><span class=\"line\">            scrollTop = <span class=\"built_in\">document</span>.body.scrollTop; </span><br><span class=\"line\">        &#125; </span><br><span class=\"line\">        <span class=\"keyword\">return</span> scrollTop; </span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 获取当前可视范围的高度 </span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getClientHeight</span>(<span class=\"params\"></span>) </span>&#123; </span><br><span class=\"line\">        <span class=\"keyword\">var</span> clientHeight = <span class=\"number\">0</span>; </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.body.clientHeight &amp;&amp; <span class=\"built_in\">document</span>.documentElement.clientHeight) &#123; </span><br><span class=\"line\">            clientHeight = <span class=\"built_in\">Math</span>.min(<span class=\"built_in\">document</span>.body.clientHeight, <span class=\"built_in\">document</span>.documentElement.clientHeight); </span><br><span class=\"line\">        &#125; </span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123; </span><br><span class=\"line\">            clientHeight = <span class=\"built_in\">Math</span>.max(<span class=\"built_in\">document</span>.body.clientHeight, <span class=\"built_in\">document</span>.documentElement.clientHeight); </span><br><span class=\"line\">        &#125; </span><br><span class=\"line\">        <span class=\"keyword\">return</span> clientHeight; </span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 获取文档完整的高度 </span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getScrollHeight</span>(<span class=\"params\"></span>) </span>&#123; </span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">Math</span>.max(<span class=\"built_in\">document</span>.body.scrollHeight, <span class=\"built_in\">document</span>.documentElement.scrollHeight); </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">var</span> _text = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.refreshText'</span>),</span><br><span class=\"line\">      _container = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'refreshContainer'</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 节流函数</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> throttle = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">method, context</span>)</span>&#123;</span><br><span class=\"line\">      clearTimeout(method.tId);</span><br><span class=\"line\">      method.tId = setTimeout(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        method.call(context);</span><br><span class=\"line\">      &#125;, <span class=\"number\">300</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fetchData</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        setTimeout(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            _container.insertAdjacentHTML(<span class=\"string\">'beforeend'</span>, <span class=\"string\">'&lt;li&gt;new add...&lt;/li&gt;'</span>);</span><br><span class=\"line\">        &#125;, <span class=\"number\">1000</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">window</span>.onscroll = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (getScrollTop() + getClientHeight() == getScrollHeight()) &#123;</span><br><span class=\"line\">          _text.innerText = <span class=\"string\">'加载中...'</span>;</span><br><span class=\"line\">          throttle(fetchData);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;)(<span class=\"built_in\">window</span>);</span><br></pre></td></tr></table></figure>\n<p>页面绑定<code>onscroll</code>事件时加入了节流函数，其作用就是忽略滚动条300毫秒内的连续多次触发。</p>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><p>上拉刷新的实现主要依靠的是<code>touch</code>事件的三个阶段，以及借助CSS3动画效果；下拉加载主要依靠页面的<code>onscroll</code>事件，需要注意的是页面滚动时可能要考虑函数节流。</p>\n<h2 id=\"学习实现\"><a href=\"#学习实现\" class=\"headerlink\" title=\"学习实现\"></a>学习实现</h2><p>滚动加载待实现。。。</p>\n<p>html</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"atmosphere\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"ptr--ptr\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"ptr--box\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"ptr--content\"</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"ptr--icon\"</span>&gt;</span>⇣<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"ptr--text\"</span>&gt;</span>下拉即可刷新...<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"ptr\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"ptr--top\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"list-card\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item-card\"</span>&gt;</span></span><br><span class=\"line\">                1</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item-card\"</span>&gt;</span></span><br><span class=\"line\">                2</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item-card\"</span>&gt;</span></span><br><span class=\"line\">                ...</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><code>javascript</code> 只有下拉刷新，滚动加载还没有</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 下拉刷新</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> slide = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">option</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> defaults=&#123;</span><br><span class=\"line\">            container:<span class=\"string\">''</span>,</span><br><span class=\"line\">            next:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;&#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> start,</span><br><span class=\"line\">            end,</span><br><span class=\"line\">            length,</span><br><span class=\"line\">            isLock = <span class=\"literal\">false</span>,<span class=\"comment\">//是否锁定整个操作</span></span><br><span class=\"line\">            isCanDo = <span class=\"literal\">false</span>,<span class=\"comment\">//是否移动滑块</span></span><br><span class=\"line\">            isTouchPad = (<span class=\"regexp\">/hp-tablet/gi</span>).test(navigator.appVersion),</span><br><span class=\"line\">            hasTouch = <span class=\"string\">'ontouchstart'</span> <span class=\"keyword\">in</span> <span class=\"built_in\">window</span> &amp;&amp; !isTouchPad;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> obj = <span class=\"built_in\">document</span>.querySelector(option.container);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> loading=obj.firstElementChild;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> textLoading = loading.firstElementChild.firstElementChild.lastElementChild</span><br><span class=\"line\">        <span class=\"keyword\">var</span> offset=loading.clientHeight;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> objparent = obj.parentElement;</span><br><span class=\"line\">        <span class=\"comment\">/*操作方法*/</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> fn =</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"comment\">//移动容器</span></span><br><span class=\"line\">                translate: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">diff</span>) </span>&#123;</span><br><span class=\"line\">                    obj.style.webkitTransform=<span class=\"string\">'translate3d(0,'</span>+diff+<span class=\"string\">'px,0)'</span>;</span><br><span class=\"line\">                    obj.style.transform=<span class=\"string\">'translate3d(0,'</span>+diff+<span class=\"string\">'px,0)'</span>;</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                <span class=\"comment\">//设置效果时间</span></span><br><span class=\"line\">                setTransition: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">time</span>) </span>&#123;</span><br><span class=\"line\">                    obj.style.webkitTransition=<span class=\"string\">'all '</span>+time+<span class=\"string\">'s'</span>;</span><br><span class=\"line\">                    obj.style.transition=<span class=\"string\">'all '</span>+time+<span class=\"string\">'s'</span>;</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                <span class=\"comment\">//返回到初始位置</span></span><br><span class=\"line\">                back: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">                    fn.translate(<span class=\"number\">0</span> - offset);</span><br><span class=\"line\">                    <span class=\"comment\">//标识操作完成</span></span><br><span class=\"line\">                    isLock = <span class=\"literal\">false</span>;</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                addEvent:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">element,event_name,event_fn</span>)</span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (element.addEventListener) &#123;</span><br><span class=\"line\">                        element.addEventListener(event_name, event_fn, <span class=\"literal\">false</span>);</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (element.attachEvent) &#123;</span><br><span class=\"line\">                        element.attachEvent(<span class=\"string\">'on'</span> + event_name, event_fn);</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        element[<span class=\"string\">'on'</span> + event_name] = event_fn;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">        fn.translate(<span class=\"number\">0</span>-offset);</span><br><span class=\"line\">        fn.addEvent(obj,<span class=\"string\">'touchstart'</span>,start);</span><br><span class=\"line\">        fn.addEvent(obj,<span class=\"string\">'touchmove'</span>,move);</span><br><span class=\"line\">        fn.addEvent(obj,<span class=\"string\">'touchend'</span>,end);</span><br><span class=\"line\">        fn.addEvent(obj,<span class=\"string\">'mousedown'</span>,start)</span><br><span class=\"line\">        fn.addEvent(obj,<span class=\"string\">'mousemove'</span>,move)</span><br><span class=\"line\">        fn.addEvent(obj,<span class=\"string\">'mouseup'</span>,end)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//滑动开始</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">start</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (objparent.scrollTop &lt;= <span class=\"number\">0</span> &amp;&amp; !isLock) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> even = <span class=\"keyword\">typeof</span> event == <span class=\"string\">\"undefined\"</span> ? e : event;</span><br><span class=\"line\">                <span class=\"comment\">//标识操作进行中</span></span><br><span class=\"line\">                isLock = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                isCanDo = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                <span class=\"comment\">//保存当前鼠标Y坐标</span></span><br><span class=\"line\">                start = hasTouch ? even.touches[<span class=\"number\">0</span>].pageY : even.pageY;</span><br><span class=\"line\">                <span class=\"comment\">//消除滑块动画时间</span></span><br><span class=\"line\">                fn.setTransition(<span class=\"number\">0</span>);</span><br><span class=\"line\">                textLoading.innerHTML=<span class=\"string\">'下拉即可刷新'</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//滑动中</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">move</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (objparent.scrollTop &lt;= <span class=\"number\">0</span> &amp;&amp; isCanDo) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> even = <span class=\"keyword\">typeof</span> event == <span class=\"string\">\"undefined\"</span> ? e : event;</span><br><span class=\"line\">                <span class=\"comment\">//保存当前鼠标Y坐标</span></span><br><span class=\"line\">                end = hasTouch ? even.touches[<span class=\"number\">0</span>].pageY : even.pageY;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (start &lt; end) &#123;</span><br><span class=\"line\">                    even.preventDefault();</span><br><span class=\"line\">                    <span class=\"comment\">//消除滑块动画时间</span></span><br><span class=\"line\">                    fn.setTransition(<span class=\"number\">0</span>);</span><br><span class=\"line\">                    <span class=\"comment\">//移动滑块</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span>((end-start-offset)/<span class=\"number\">2</span>&lt;=<span class=\"number\">50</span>) &#123;</span><br><span class=\"line\">                        length=(end - start - offset) / <span class=\"number\">2</span>;</span><br><span class=\"line\">                        fn.translate(length);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        length+=<span class=\"number\">0.3</span>;</span><br><span class=\"line\">                        fn.translate(length);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//滑动结束</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">end</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (isCanDo) &#123;</span><br><span class=\"line\">                isCanDo = <span class=\"literal\">false</span>;</span><br><span class=\"line\">                <span class=\"comment\">//判断滑动距离是否大于等于指定值</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (end - start &gt;= offset) &#123;</span><br><span class=\"line\">                    <span class=\"comment\">//设置滑块回弹时间</span></span><br><span class=\"line\">                    fn.setTransition(<span class=\"number\">1</span>);</span><br><span class=\"line\">                    <span class=\"comment\">//保留提示部分</span></span><br><span class=\"line\">                    fn.translate(<span class=\"number\">0</span>);</span><br><span class=\"line\">                    <span class=\"comment\">//执行回调函数</span></span><br><span class=\"line\">                    textLoading.innerHTML=<span class=\"string\">'释放即可刷新'</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> option.next == <span class=\"string\">\"function\"</span>) &#123;</span><br><span class=\"line\">                        option.next.call(fn, e);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    <span class=\"comment\">//返回初始状态</span></span><br><span class=\"line\">                    fn.back();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    slide(&#123;<span class=\"attr\">container</span>:<span class=\"string\">\".atmosphere\"</span>,<span class=\"attr\">next</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"comment\">//松手之后执行逻辑,ajax请求数据，数据返回后隐藏加载中提示</span></span><br><span class=\"line\">            <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">            setTimeout(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">                that.back.call();</span><br><span class=\"line\">            &#125;, <span class=\"number\">2000</span>);</span><br><span class=\"line\">        &#125;&#125;);</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"下拉刷新上拉加载组件的使用\"><a href=\"#下拉刷新上拉加载组件的使用\" class=\"headerlink\" title=\"下拉刷新上拉加载组件的使用\"></a>下拉刷新上拉加载组件的使用</h1><blockquote>\n<p>在移动端H5网页中，下拉刷新和上拉加载更多数据的交互方式出现频率很高，开源社区也有很多类似的解决方案，如iscroll，pulltorefresh.js库等。下面是对这两种常见交互基本实现原理的阐述。</p>\n</blockquote>\n<p><a href=\"https://github.com/minirefresh/minirefresh\" target=\"_blank\" rel=\"noopener\">https://github.com/minirefresh/minirefresh</a></p>\n<p><a href=\"https://github.com/BoxFactura/pulltorefresh.js\" target=\"_blank\" rel=\"noopener\">https://github.com/BoxFactura/pulltorefresh.js</a></p>\n<h2 id=\"实现原理\"><a href=\"#实现原理\" class=\"headerlink\" title=\"实现原理\"></a>实现原理</h2><h3 id=\"下拉刷新\"><a href=\"#下拉刷新\" class=\"headerlink\" title=\"下拉刷新\"></a>下拉刷新</h3><p>实现下拉刷新主要分为三步：</p>\n<ul>\n<li>监听原生<code>touchstart</code>事件，记录其初始位置的值，<code>e.touches[0].pageY</code>；</li>\n<li>监听原生<code>touchmove</code>事件，记录并计算当前滑动的位置值与初始位置值的差值，大于<code>0</code>表示向下拉动，并借助CSS3的<code>translateY</code>属性使元素跟随手势向下滑动对应的差值，同时也应设置一个允许滑动的最大值；</li>\n<li>监听原生<code>touchend</code>事件，若此时元素滑动达到最大值，则触发<code>callback</code>，同时将<code>translateY</code>重设为<code>0</code>，元素回到初始位置。</li>\n</ul>\n<p>示例。查看链接：<a href=\"\">下拉刷新demo</a>（PC浏览器需调成手机模拟器模式查看）</p>\n<p>html</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">main</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\"refreshText\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">\"refreshContainer\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>111<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>222<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>333<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>444<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>555<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        ...</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">main</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>javascript</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">window</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> _element = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'refreshContainer'</span>),</span><br><span class=\"line\">      _refreshText = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.refreshText'</span>),</span><br><span class=\"line\">      _startPos = <span class=\"number\">0</span>,</span><br><span class=\"line\">      _transitionHeight = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    _element.addEventListener(<span class=\"string\">'touchstart'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'初始位置：'</span>, e.touches[<span class=\"number\">0</span>].pageY);</span><br><span class=\"line\">        _startPos = e.touches[<span class=\"number\">0</span>].pageY;</span><br><span class=\"line\">        _element.style.position = <span class=\"string\">'relative'</span>;</span><br><span class=\"line\">        _element.style.transition = <span class=\"string\">'transform 0s'</span>;</span><br><span class=\"line\">    &#125;, <span class=\"literal\">false</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">    _element.addEventListener(<span class=\"string\">'touchmove'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'当前位置：'</span>, e.touches[<span class=\"number\">0</span>].pageY);</span><br><span class=\"line\">        _transitionHeight = e.touches[<span class=\"number\">0</span>].pageY - _startPos;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (_transitionHeight &gt; <span class=\"number\">0</span> &amp;&amp; _transitionHeight &lt; <span class=\"number\">60</span>) &#123;</span><br><span class=\"line\">            _refreshText.innerText = <span class=\"string\">'下拉刷新'</span>;</span><br><span class=\"line\">            _element.style.transform = <span class=\"string\">'translateY('</span>+_transitionHeight+<span class=\"string\">'px)'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (_transitionHeight &gt; <span class=\"number\">55</span>) &#123;</span><br><span class=\"line\">              _refreshText.innerText = <span class=\"string\">'释放更新'</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;                </span><br><span class=\"line\">    &#125;, <span class=\"literal\">false</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    _element.addEventListener(<span class=\"string\">'touchend'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">        _element.style.transition = <span class=\"string\">'transform 0.5s ease 1s'</span>;</span><br><span class=\"line\">        _element.style.transform = <span class=\"string\">'translateY(0px)'</span>;</span><br><span class=\"line\">        _refreshText.innerText = <span class=\"string\">'更新中...'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// todo...</span></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;, <span class=\"literal\">false</span>);</span><br><span class=\"line\">&#125;)(<span class=\"built_in\">window</span>);</span><br></pre></td></tr></table></figure>\n<p>在下拉到松手的过程中，经历了三个状态：</p>\n<ul>\n<li>当前手势滑动位置与初始位置差值大于零时，提示正在进行下拉刷新操作；</li>\n<li>下拉到一定值时，显示松手释放后的操作提示；</li>\n<li>下拉到达设定最大值松手时，执行回调，提示正在进行更新操作。</li>\n</ul>\n<h3 id=\"上拉加载\"><a href=\"#上拉加载\" class=\"headerlink\" title=\"上拉加载\"></a>上拉加载</h3><p>上拉加载更多数据是在页面滚动时触发的动作，一般是页面滚动到底部时触发，也可以选择在滚动到一定位置的时候触发。</p>\n<p>以滚动到页面底部为例。实现原理是分别获得当前滚动条的<code>scrollTop</code>值、当前可视范围的高度值<code>clientHeight</code>以及文档的总高度<code>scrollHeight</code>。当<code>scrollTop</code>和<code>clientHeight</code>的值之和大于等于<code>scrollHeight</code>时，触发<code>callback</code>。</p>\n<p>示例。查看链接：<a href=\"\">上拉加载demo</a></p>\n<p>html</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">main</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">\"refreshContainer\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>111<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>222<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>333<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>444<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>555<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        ...</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\"refreshText\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">main</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">window</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 获取当前滚动条的位置 </span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getScrollTop</span>(<span class=\"params\"></span>) </span>&#123; </span><br><span class=\"line\">        <span class=\"keyword\">var</span> scrollTop = <span class=\"number\">0</span>; </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.documentElement &amp;&amp; <span class=\"built_in\">document</span>.documentElement.scrollTop) &#123; </span><br><span class=\"line\">            scrollTop = <span class=\"built_in\">document</span>.documentElement.scrollTop; </span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.body) &#123; </span><br><span class=\"line\">            scrollTop = <span class=\"built_in\">document</span>.body.scrollTop; </span><br><span class=\"line\">        &#125; </span><br><span class=\"line\">        <span class=\"keyword\">return</span> scrollTop; </span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 获取当前可视范围的高度 </span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getClientHeight</span>(<span class=\"params\"></span>) </span>&#123; </span><br><span class=\"line\">        <span class=\"keyword\">var</span> clientHeight = <span class=\"number\">0</span>; </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.body.clientHeight &amp;&amp; <span class=\"built_in\">document</span>.documentElement.clientHeight) &#123; </span><br><span class=\"line\">            clientHeight = <span class=\"built_in\">Math</span>.min(<span class=\"built_in\">document</span>.body.clientHeight, <span class=\"built_in\">document</span>.documentElement.clientHeight); </span><br><span class=\"line\">        &#125; </span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123; </span><br><span class=\"line\">            clientHeight = <span class=\"built_in\">Math</span>.max(<span class=\"built_in\">document</span>.body.clientHeight, <span class=\"built_in\">document</span>.documentElement.clientHeight); </span><br><span class=\"line\">        &#125; </span><br><span class=\"line\">        <span class=\"keyword\">return</span> clientHeight; </span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 获取文档完整的高度 </span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getScrollHeight</span>(<span class=\"params\"></span>) </span>&#123; </span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">Math</span>.max(<span class=\"built_in\">document</span>.body.scrollHeight, <span class=\"built_in\">document</span>.documentElement.scrollHeight); </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">var</span> _text = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.refreshText'</span>),</span><br><span class=\"line\">      _container = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'refreshContainer'</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 节流函数</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> throttle = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">method, context</span>)</span>&#123;</span><br><span class=\"line\">      clearTimeout(method.tId);</span><br><span class=\"line\">      method.tId = setTimeout(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        method.call(context);</span><br><span class=\"line\">      &#125;, <span class=\"number\">300</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fetchData</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        setTimeout(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            _container.insertAdjacentHTML(<span class=\"string\">'beforeend'</span>, <span class=\"string\">'&lt;li&gt;new add...&lt;/li&gt;'</span>);</span><br><span class=\"line\">        &#125;, <span class=\"number\">1000</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">window</span>.onscroll = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (getScrollTop() + getClientHeight() == getScrollHeight()) &#123;</span><br><span class=\"line\">          _text.innerText = <span class=\"string\">'加载中...'</span>;</span><br><span class=\"line\">          throttle(fetchData);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;)(<span class=\"built_in\">window</span>);</span><br></pre></td></tr></table></figure>\n<p>页面绑定<code>onscroll</code>事件时加入了节流函数，其作用就是忽略滚动条300毫秒内的连续多次触发。</p>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><p>上拉刷新的实现主要依靠的是<code>touch</code>事件的三个阶段，以及借助CSS3动画效果；下拉加载主要依靠页面的<code>onscroll</code>事件，需要注意的是页面滚动时可能要考虑函数节流。</p>\n<h2 id=\"学习实现\"><a href=\"#学习实现\" class=\"headerlink\" title=\"学习实现\"></a>学习实现</h2><p>滚动加载待实现。。。</p>\n<p>html</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"atmosphere\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"ptr--ptr\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"ptr--box\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"ptr--content\"</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"ptr--icon\"</span>&gt;</span>⇣<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"ptr--text\"</span>&gt;</span>下拉即可刷新...<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"ptr\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"ptr--top\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"list-card\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item-card\"</span>&gt;</span></span><br><span class=\"line\">                1</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item-card\"</span>&gt;</span></span><br><span class=\"line\">                2</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item-card\"</span>&gt;</span></span><br><span class=\"line\">                ...</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><code>javascript</code> 只有下拉刷新，滚动加载还没有</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 下拉刷新</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> slide = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">option</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> defaults=&#123;</span><br><span class=\"line\">            container:<span class=\"string\">''</span>,</span><br><span class=\"line\">            next:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;&#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> start,</span><br><span class=\"line\">            end,</span><br><span class=\"line\">            length,</span><br><span class=\"line\">            isLock = <span class=\"literal\">false</span>,<span class=\"comment\">//是否锁定整个操作</span></span><br><span class=\"line\">            isCanDo = <span class=\"literal\">false</span>,<span class=\"comment\">//是否移动滑块</span></span><br><span class=\"line\">            isTouchPad = (<span class=\"regexp\">/hp-tablet/gi</span>).test(navigator.appVersion),</span><br><span class=\"line\">            hasTouch = <span class=\"string\">'ontouchstart'</span> <span class=\"keyword\">in</span> <span class=\"built_in\">window</span> &amp;&amp; !isTouchPad;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> obj = <span class=\"built_in\">document</span>.querySelector(option.container);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> loading=obj.firstElementChild;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> textLoading = loading.firstElementChild.firstElementChild.lastElementChild</span><br><span class=\"line\">        <span class=\"keyword\">var</span> offset=loading.clientHeight;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> objparent = obj.parentElement;</span><br><span class=\"line\">        <span class=\"comment\">/*操作方法*/</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> fn =</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"comment\">//移动容器</span></span><br><span class=\"line\">                translate: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">diff</span>) </span>&#123;</span><br><span class=\"line\">                    obj.style.webkitTransform=<span class=\"string\">'translate3d(0,'</span>+diff+<span class=\"string\">'px,0)'</span>;</span><br><span class=\"line\">                    obj.style.transform=<span class=\"string\">'translate3d(0,'</span>+diff+<span class=\"string\">'px,0)'</span>;</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                <span class=\"comment\">//设置效果时间</span></span><br><span class=\"line\">                setTransition: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">time</span>) </span>&#123;</span><br><span class=\"line\">                    obj.style.webkitTransition=<span class=\"string\">'all '</span>+time+<span class=\"string\">'s'</span>;</span><br><span class=\"line\">                    obj.style.transition=<span class=\"string\">'all '</span>+time+<span class=\"string\">'s'</span>;</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                <span class=\"comment\">//返回到初始位置</span></span><br><span class=\"line\">                back: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">                    fn.translate(<span class=\"number\">0</span> - offset);</span><br><span class=\"line\">                    <span class=\"comment\">//标识操作完成</span></span><br><span class=\"line\">                    isLock = <span class=\"literal\">false</span>;</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                addEvent:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">element,event_name,event_fn</span>)</span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (element.addEventListener) &#123;</span><br><span class=\"line\">                        element.addEventListener(event_name, event_fn, <span class=\"literal\">false</span>);</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (element.attachEvent) &#123;</span><br><span class=\"line\">                        element.attachEvent(<span class=\"string\">'on'</span> + event_name, event_fn);</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        element[<span class=\"string\">'on'</span> + event_name] = event_fn;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">        fn.translate(<span class=\"number\">0</span>-offset);</span><br><span class=\"line\">        fn.addEvent(obj,<span class=\"string\">'touchstart'</span>,start);</span><br><span class=\"line\">        fn.addEvent(obj,<span class=\"string\">'touchmove'</span>,move);</span><br><span class=\"line\">        fn.addEvent(obj,<span class=\"string\">'touchend'</span>,end);</span><br><span class=\"line\">        fn.addEvent(obj,<span class=\"string\">'mousedown'</span>,start)</span><br><span class=\"line\">        fn.addEvent(obj,<span class=\"string\">'mousemove'</span>,move)</span><br><span class=\"line\">        fn.addEvent(obj,<span class=\"string\">'mouseup'</span>,end)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//滑动开始</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">start</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (objparent.scrollTop &lt;= <span class=\"number\">0</span> &amp;&amp; !isLock) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> even = <span class=\"keyword\">typeof</span> event == <span class=\"string\">\"undefined\"</span> ? e : event;</span><br><span class=\"line\">                <span class=\"comment\">//标识操作进行中</span></span><br><span class=\"line\">                isLock = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                isCanDo = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                <span class=\"comment\">//保存当前鼠标Y坐标</span></span><br><span class=\"line\">                start = hasTouch ? even.touches[<span class=\"number\">0</span>].pageY : even.pageY;</span><br><span class=\"line\">                <span class=\"comment\">//消除滑块动画时间</span></span><br><span class=\"line\">                fn.setTransition(<span class=\"number\">0</span>);</span><br><span class=\"line\">                textLoading.innerHTML=<span class=\"string\">'下拉即可刷新'</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//滑动中</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">move</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (objparent.scrollTop &lt;= <span class=\"number\">0</span> &amp;&amp; isCanDo) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> even = <span class=\"keyword\">typeof</span> event == <span class=\"string\">\"undefined\"</span> ? e : event;</span><br><span class=\"line\">                <span class=\"comment\">//保存当前鼠标Y坐标</span></span><br><span class=\"line\">                end = hasTouch ? even.touches[<span class=\"number\">0</span>].pageY : even.pageY;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (start &lt; end) &#123;</span><br><span class=\"line\">                    even.preventDefault();</span><br><span class=\"line\">                    <span class=\"comment\">//消除滑块动画时间</span></span><br><span class=\"line\">                    fn.setTransition(<span class=\"number\">0</span>);</span><br><span class=\"line\">                    <span class=\"comment\">//移动滑块</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span>((end-start-offset)/<span class=\"number\">2</span>&lt;=<span class=\"number\">50</span>) &#123;</span><br><span class=\"line\">                        length=(end - start - offset) / <span class=\"number\">2</span>;</span><br><span class=\"line\">                        fn.translate(length);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        length+=<span class=\"number\">0.3</span>;</span><br><span class=\"line\">                        fn.translate(length);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//滑动结束</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">end</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (isCanDo) &#123;</span><br><span class=\"line\">                isCanDo = <span class=\"literal\">false</span>;</span><br><span class=\"line\">                <span class=\"comment\">//判断滑动距离是否大于等于指定值</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (end - start &gt;= offset) &#123;</span><br><span class=\"line\">                    <span class=\"comment\">//设置滑块回弹时间</span></span><br><span class=\"line\">                    fn.setTransition(<span class=\"number\">1</span>);</span><br><span class=\"line\">                    <span class=\"comment\">//保留提示部分</span></span><br><span class=\"line\">                    fn.translate(<span class=\"number\">0</span>);</span><br><span class=\"line\">                    <span class=\"comment\">//执行回调函数</span></span><br><span class=\"line\">                    textLoading.innerHTML=<span class=\"string\">'释放即可刷新'</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> option.next == <span class=\"string\">\"function\"</span>) &#123;</span><br><span class=\"line\">                        option.next.call(fn, e);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    <span class=\"comment\">//返回初始状态</span></span><br><span class=\"line\">                    fn.back();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    slide(&#123;<span class=\"attr\">container</span>:<span class=\"string\">\".atmosphere\"</span>,<span class=\"attr\">next</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"comment\">//松手之后执行逻辑,ajax请求数据，数据返回后隐藏加载中提示</span></span><br><span class=\"line\">            <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">            setTimeout(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">                that.back.call();</span><br><span class=\"line\">            &#125;, <span class=\"number\">2000</span>);</span><br><span class=\"line\">        &#125;&#125;);</span><br></pre></td></tr></table></figure>\n"},{"title":"快速搭建Flutter环境-Mac","comments":1,"abbrlink":"9a98d699","date":"2019-09-15T13:37:25.000Z","_content":"## 目录\n\n- 系统要求\n- 设置FLutter镜像(非必须)\n- 获取Flutter SDK\n- iOS开发环境设置\n- Android开发环境设置\n- 安装Flutter插件\n\n## 系统要求\n\n在Mac上要安装并运行Flutter要满足以下最低要求:\n\n- 操作系统: macOS (64-bit)\n- 磁盘空间: 700 MB (不包括Xcode或Android Studio的磁盘空间）.\n- 工具: Flutter 依赖下面这些命令行工具：`bash curl git 2.x mkdir rm unzip which`\n\n## 设置FLutter镜像(非必须)\n\n由于在国内访问Flutter可能会受到限制，Flutter官方为中国开发者搭建了临时镜像，大家可以将如下环境变量加入到用户环境变量中：\n\n```javascript\n//Macintosh HD⁩ ▸ ⁨Users⁩ ▸ ⁨你的用户名 ▸ ⁨.bash_profile\nexport PUB_HOSTED_URL=https://pub.flutter-io.cn\nexport FLUTTER_STORAGE_BASE_URL=https://storage.flutter-io.cn\n\n```\n\n注意：此镜像为临时镜像，并不能保证一直可用，大家可以从 [Using Flutter in China](https://flutter.dev/community/china) 上获得有关镜像服务器的最新动态。\n\n## 获取Flutter SDK\n\n**1.点Flutter官网下载其最新可用的安装包。**\n\n**2.解压安装包到你想安装的目录，如：**\n\n```shell\n$ cd ~/development\n$ unzip ~/Downloads/flutter_macos_v1.2.1-stable.zip\n```\n\n**3.添加flutter相关工具到path中：**\n\n```javascript\n export PATH=\"$PATH:`pwd`/flutter/bin\"\n```\n\n此代码只能暂时针对当前命令行窗口设置PATH环境变量，要想永久将Flutter添加到PATH中请参考下面做法：\n\n```shell\n$ cd ~\n$ vim .bash_profile\n```\n\n然后添加：\n\n```javascript\nexport PATH=/Users/safran/Documents/flutter/bin:$PATH\n```\n\n之后记得保存文件。\n\n### 运行 flutter doctor\n\n上面path配置完成之后，需要关闭终端重新打开，然后运行：\n\n```shell\n$ flutter doctor\n```\n\n该命令检查你的环境并在终端窗口中显示报告。Dart SDK已经在捆绑在Flutter里了，没有必要单独安装Dart。 仔细检查命令行输出以获取可能需要安装的其他软件或进一步需要执行的任务（以粗体显示）：\n\n例如：\n\n```\n[-] Android toolchain - develop for Android devices\n    • Android SDK at /Users/obiwan/Library/Android/sdk\n    ✗ Android SDK is missing command line tools; download from https://goo.gl/XxQghQ\n    • Try re-installing or updating your Android SDK,\n      visit https://flutter.dev/setup/#android-setup for detailed instructions.\n```\n\n一般的错误会是XCode或Android Studio版本太低、或者没有`ANDROID_HOME`环境变量等，可参考一下环境变量的配置来检查你的环境变量：\n\n```shell\n#flutter环境变量\nexport PATH=/Users/safran/Desktop/flutter/bin:$PATH\n# flutter镜像\nexport PUB_HOSTED_URL=https://pub.flutter-io.cn\nexport FLUTTER_STORAGE_BASE_URL=https://storage.flutter-io.cn\n#Android 环境变量\nexport ANDROID_HOME=/Users/safran/Library/Android/sdk\n#Android 模拟器路径\nexport PATH=${PATH}:${ANDROID_HOME}/emulator\n#Android tools路径\nexport PATH=${PATH}:${ANDROID_HOME}/tools\n#Android 平台工具路径\nexport PATH=${PATH}:${ANDROID_HOME}/platform-tools\n#Android NDK路径\nANDROID_NDK_HOME=/Users/safran/Library/Android/ndk/android-ndk-r10e\n```\n\n> *第一次运行一个flutter命令（如flutter doctor）时，它会下载它自己的依赖项并自行编译。以后再运行就会快得多。*\n\n## iOS开发环境设置\n\n### 安装 Xcode\n\n要用Flutter开发iOS App需要Xcode 9.0 或更高版本:\n\n**1.安装Xcode 9.0或更新版本(通过链接下载或苹果应用商店)**\n\n**2.配置Xcode命令行工具以使用新安装的Xcode版本**\n\n```shell\n$ sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer\n```\n\n以上路径时对于最新版Xcode的路径。如果你需要使用不同的Xcode版本，需要指定相应路径。\n\n**3.确保Xcode许可协议是通过打开一次Xcode或通过命令sudo xcodebuild -license同意过了**\n\n接下来就可以使用Xcode，在iOS设备或模拟器上运行Flutter App了。\n\n### 设置iOS模拟器\n\n要准备在iOS模拟器上运行并测试您的Flutter应用，请按以下步骤操作：\n\n**1.在终端输入如下命令打开一个iOS模拟器：**\n\n```shell\n$ open -a Simulator\n```\n\n**2.通过模拟器菜单栏的 硬件>设备 ，确保你打开是64位 iPhone 5s或更新的模拟器**\n\n**3.如果模拟器过大，可以通过模拟器的 Window> Scale 菜单下设置设备比例**\n\n### 创建和运行一个简单的Flutter项目\n\n**1.通过如下命令创建一个Flutter项目**\n\n```shell\n$ flutter create my_app\n```\n\n**2.命令运行完成之后会在当前目录下创建一个名为my_app的Flutter项目，然后通过一下命令可以运行它：**\n\n```shell\n$ cd my_app\n$ flutter run\n```\n\n### 如何将Flutter安装到iOS真机上？\n\n要通过`lutter run`将Flutter应用安装到iOS真机设备，需要一些额外的工具和一个Apple帐户，还需要在Xcode中进行设置：\n\n> 当然，用XCode来将Flutter运行在真机上更简单，只需要点一下`run`按钮即可，可以根据需要进行选择这两种不同的运行方式；\n\n**1.安装 Homebrew （如果已经安装了brew,跳过此步骤）.**\n\n**2.确保homebrew已更新**\n\n```shell\n$ brew update\n```\n\n**3.打开终端并运行这些命令来安装用于将Flutter应用安装到iOS设备的工具**\n\n```shell\n$ brew install --HEAD usbmuxd\n$ brew link usbmuxd\n$ brew install --HEAD libimobiledevice\n$ brew install ideviceinstaller ios-deploy cocoapods\n$ pod setup\n```\n\n如果这些命令中的任何一个失败并出现错误，可运行`brew doctor`并按照说明解决问题。\n\n**4.遵循Xcode签名流程来配置您的项目:**\n\n- 在你Flutter项目目录中通过 `open ios/Runner.xcworkspace` 打开默认的Xcode workspace\n- 在Xcode中，选择导航面板左侧中的Runner项目\n- 在Runner target设置页面中，确保在 常规>签名>团队 下选择了您的开发团队。当您选择一个团队时，Xcode会创建并下载开发证书，向您的设备注册您的帐户，并创建和下载配置文件（如果需要）\n  - 要开始您的第一个iOS开发项目，您可能需要使用您的Apple ID登录Xcode\n\n\n\n- 任何Apple ID都支持开发和测试，但如果要将应用发布到App Store则需要一个99美刀的开发者账号。\n- 当你第一次attach真机设备进行iOS开发时，需要同时信任你的Mac和该设备上的开发证书。首次将iOS设备连接到Mac时,请在对话框中选择 `Trust`。\n\n然后，转到iOS设备上的设置应用程序，选择 常规>设备管理 并信任您的证书。\n\n- 如果Xcode中的自动签名失败，请验证项目的 General > Identity > Bundle Identifier 值是否唯一。\n\n**5.通过flutter run运行启动项目**\n\n```shell\n$ flutter run\n```\n\n## Android开发环境设置&Flutter插件安装\n\n### 安装Android Studio\n\n**1.下载并安装 Android Studio**\n\n- https://developer.android.com/studio\n- https://developer.android.google.cn/studio\n\n> 因为Android网站设在国外，如果你的网络无法访问第一个地址，可以选择使用Google为中国开发者提供的中国网址进行访问。\n\n另外，关于Android Studio的安装和配置，Android官方有比较详细的说明文档https://developer.android.google.cn/studio/intro，大家可以根据需要进行查阅；\n\n**2.启动Android Studio，然后执行“Android Studio安装向导”。这将安装最新的Android SDK，Android SDK平台工具和Android SDK构建工具**\n\n### Flutter插件安装\n\n- 打开Android Studio\n- 打开Preferences > Plugins (macOS), File > Settings > Plugins (Windows & Linux)\n- 选择 Browse repositories, 搜索 Flutter plugin\n- 然后点击安装，然后安装Dart插件\n- 完成之后选择重启Android Studio\n\n### 如何在Android模拟器上运行Flutter？\n\n要准备在Android模拟器上运行并测试您的Flutter应用，需要按照以下步骤操作：\n\n- 在你的机器上启用 [VM acceleration](https://developer.android.com/studio/run/emulator-acceleration.html#vm-mac)；\n\n- 启动 Android Studio>Tools>Android>AVD Manager 并选择 `Create Virtual Device`；\n\n- 选择一个设备并选择 Next；\n\n- 为要模拟的Android版本选择一个或多个系统映像，然后选择 Next. 建议使用 x86 或 x86_64 的镜像；\n\n- 在 Emulated Performance下, 选择 Hardware - GLES 2.0 以启用硬件加速；\n\n- 验证AVD配置是否正确，然后选择 Finish；\n\n  如果对以上步骤还有不清楚的可以参阅Android官方的 [Managing AVDs](https://developer.android.com/studio/run/managing-avds.html)文档。\n\n- 在 Android Virtual Device Manager中, 点击工具栏的 `Run`，模拟器启动并显示所选操作系统版本或设备的启动画面；\n\n- 通过`flutter run`运行启动项目；\n\n### 如何在Android真机运行？\n\n要准备在Android设备上运行并测试您的Flutter应用，您需要安装Android 4.1（API level 16）或更高版本的Android设备\n\n- 在你的设备上启用 `开发人员选项` 和 `USB调试` 。详细说明可在[Android文档](https://developer.android.com/studio/debug/dev-options.html)中找到；\n- 使用USB将手机插入电脑，如果有授权提示需要同意授权；\n- 在终端中，运行` flutter devices` 命令以验证Flutter是否识别你连接的Android设备；\n- 通过`flutter run`运行启动项目；\n\n默认情况下，Flutter使用的Android SDK版本是基于你的 `adb` 工具版本， 如果你想让Flutter使用不同版本的Android SDK，则必须将该 `ANDROID_HOME` 环境变量修改SDK的目录。\n\n## 参考\n\n- [两分钟带你快速搭建Flutter开发环境(Mac)](http://www.devio.org/2019/04/03/development-environment-mac/)","source":"_posts/快速搭建Flutter环境-Mac.md","raw":"---\ntitle: 快速搭建Flutter环境-Mac\ncomments: true\ncategories:\n  - Flutter\ntags:\n  - Flutter\nabbrlink: 9a98d699\ndate: 2019-09-15 21:37:25\n---\n## 目录\n\n- 系统要求\n- 设置FLutter镜像(非必须)\n- 获取Flutter SDK\n- iOS开发环境设置\n- Android开发环境设置\n- 安装Flutter插件\n\n## 系统要求\n\n在Mac上要安装并运行Flutter要满足以下最低要求:\n\n- 操作系统: macOS (64-bit)\n- 磁盘空间: 700 MB (不包括Xcode或Android Studio的磁盘空间）.\n- 工具: Flutter 依赖下面这些命令行工具：`bash curl git 2.x mkdir rm unzip which`\n\n## 设置FLutter镜像(非必须)\n\n由于在国内访问Flutter可能会受到限制，Flutter官方为中国开发者搭建了临时镜像，大家可以将如下环境变量加入到用户环境变量中：\n\n```javascript\n//Macintosh HD⁩ ▸ ⁨Users⁩ ▸ ⁨你的用户名 ▸ ⁨.bash_profile\nexport PUB_HOSTED_URL=https://pub.flutter-io.cn\nexport FLUTTER_STORAGE_BASE_URL=https://storage.flutter-io.cn\n\n```\n\n注意：此镜像为临时镜像，并不能保证一直可用，大家可以从 [Using Flutter in China](https://flutter.dev/community/china) 上获得有关镜像服务器的最新动态。\n\n## 获取Flutter SDK\n\n**1.点Flutter官网下载其最新可用的安装包。**\n\n**2.解压安装包到你想安装的目录，如：**\n\n```shell\n$ cd ~/development\n$ unzip ~/Downloads/flutter_macos_v1.2.1-stable.zip\n```\n\n**3.添加flutter相关工具到path中：**\n\n```javascript\n export PATH=\"$PATH:`pwd`/flutter/bin\"\n```\n\n此代码只能暂时针对当前命令行窗口设置PATH环境变量，要想永久将Flutter添加到PATH中请参考下面做法：\n\n```shell\n$ cd ~\n$ vim .bash_profile\n```\n\n然后添加：\n\n```javascript\nexport PATH=/Users/safran/Documents/flutter/bin:$PATH\n```\n\n之后记得保存文件。\n\n### 运行 flutter doctor\n\n上面path配置完成之后，需要关闭终端重新打开，然后运行：\n\n```shell\n$ flutter doctor\n```\n\n该命令检查你的环境并在终端窗口中显示报告。Dart SDK已经在捆绑在Flutter里了，没有必要单独安装Dart。 仔细检查命令行输出以获取可能需要安装的其他软件或进一步需要执行的任务（以粗体显示）：\n\n例如：\n\n```\n[-] Android toolchain - develop for Android devices\n    • Android SDK at /Users/obiwan/Library/Android/sdk\n    ✗ Android SDK is missing command line tools; download from https://goo.gl/XxQghQ\n    • Try re-installing or updating your Android SDK,\n      visit https://flutter.dev/setup/#android-setup for detailed instructions.\n```\n\n一般的错误会是XCode或Android Studio版本太低、或者没有`ANDROID_HOME`环境变量等，可参考一下环境变量的配置来检查你的环境变量：\n\n```shell\n#flutter环境变量\nexport PATH=/Users/safran/Desktop/flutter/bin:$PATH\n# flutter镜像\nexport PUB_HOSTED_URL=https://pub.flutter-io.cn\nexport FLUTTER_STORAGE_BASE_URL=https://storage.flutter-io.cn\n#Android 环境变量\nexport ANDROID_HOME=/Users/safran/Library/Android/sdk\n#Android 模拟器路径\nexport PATH=${PATH}:${ANDROID_HOME}/emulator\n#Android tools路径\nexport PATH=${PATH}:${ANDROID_HOME}/tools\n#Android 平台工具路径\nexport PATH=${PATH}:${ANDROID_HOME}/platform-tools\n#Android NDK路径\nANDROID_NDK_HOME=/Users/safran/Library/Android/ndk/android-ndk-r10e\n```\n\n> *第一次运行一个flutter命令（如flutter doctor）时，它会下载它自己的依赖项并自行编译。以后再运行就会快得多。*\n\n## iOS开发环境设置\n\n### 安装 Xcode\n\n要用Flutter开发iOS App需要Xcode 9.0 或更高版本:\n\n**1.安装Xcode 9.0或更新版本(通过链接下载或苹果应用商店)**\n\n**2.配置Xcode命令行工具以使用新安装的Xcode版本**\n\n```shell\n$ sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer\n```\n\n以上路径时对于最新版Xcode的路径。如果你需要使用不同的Xcode版本，需要指定相应路径。\n\n**3.确保Xcode许可协议是通过打开一次Xcode或通过命令sudo xcodebuild -license同意过了**\n\n接下来就可以使用Xcode，在iOS设备或模拟器上运行Flutter App了。\n\n### 设置iOS模拟器\n\n要准备在iOS模拟器上运行并测试您的Flutter应用，请按以下步骤操作：\n\n**1.在终端输入如下命令打开一个iOS模拟器：**\n\n```shell\n$ open -a Simulator\n```\n\n**2.通过模拟器菜单栏的 硬件>设备 ，确保你打开是64位 iPhone 5s或更新的模拟器**\n\n**3.如果模拟器过大，可以通过模拟器的 Window> Scale 菜单下设置设备比例**\n\n### 创建和运行一个简单的Flutter项目\n\n**1.通过如下命令创建一个Flutter项目**\n\n```shell\n$ flutter create my_app\n```\n\n**2.命令运行完成之后会在当前目录下创建一个名为my_app的Flutter项目，然后通过一下命令可以运行它：**\n\n```shell\n$ cd my_app\n$ flutter run\n```\n\n### 如何将Flutter安装到iOS真机上？\n\n要通过`lutter run`将Flutter应用安装到iOS真机设备，需要一些额外的工具和一个Apple帐户，还需要在Xcode中进行设置：\n\n> 当然，用XCode来将Flutter运行在真机上更简单，只需要点一下`run`按钮即可，可以根据需要进行选择这两种不同的运行方式；\n\n**1.安装 Homebrew （如果已经安装了brew,跳过此步骤）.**\n\n**2.确保homebrew已更新**\n\n```shell\n$ brew update\n```\n\n**3.打开终端并运行这些命令来安装用于将Flutter应用安装到iOS设备的工具**\n\n```shell\n$ brew install --HEAD usbmuxd\n$ brew link usbmuxd\n$ brew install --HEAD libimobiledevice\n$ brew install ideviceinstaller ios-deploy cocoapods\n$ pod setup\n```\n\n如果这些命令中的任何一个失败并出现错误，可运行`brew doctor`并按照说明解决问题。\n\n**4.遵循Xcode签名流程来配置您的项目:**\n\n- 在你Flutter项目目录中通过 `open ios/Runner.xcworkspace` 打开默认的Xcode workspace\n- 在Xcode中，选择导航面板左侧中的Runner项目\n- 在Runner target设置页面中，确保在 常规>签名>团队 下选择了您的开发团队。当您选择一个团队时，Xcode会创建并下载开发证书，向您的设备注册您的帐户，并创建和下载配置文件（如果需要）\n  - 要开始您的第一个iOS开发项目，您可能需要使用您的Apple ID登录Xcode\n\n\n\n- 任何Apple ID都支持开发和测试，但如果要将应用发布到App Store则需要一个99美刀的开发者账号。\n- 当你第一次attach真机设备进行iOS开发时，需要同时信任你的Mac和该设备上的开发证书。首次将iOS设备连接到Mac时,请在对话框中选择 `Trust`。\n\n然后，转到iOS设备上的设置应用程序，选择 常规>设备管理 并信任您的证书。\n\n- 如果Xcode中的自动签名失败，请验证项目的 General > Identity > Bundle Identifier 值是否唯一。\n\n**5.通过flutter run运行启动项目**\n\n```shell\n$ flutter run\n```\n\n## Android开发环境设置&Flutter插件安装\n\n### 安装Android Studio\n\n**1.下载并安装 Android Studio**\n\n- https://developer.android.com/studio\n- https://developer.android.google.cn/studio\n\n> 因为Android网站设在国外，如果你的网络无法访问第一个地址，可以选择使用Google为中国开发者提供的中国网址进行访问。\n\n另外，关于Android Studio的安装和配置，Android官方有比较详细的说明文档https://developer.android.google.cn/studio/intro，大家可以根据需要进行查阅；\n\n**2.启动Android Studio，然后执行“Android Studio安装向导”。这将安装最新的Android SDK，Android SDK平台工具和Android SDK构建工具**\n\n### Flutter插件安装\n\n- 打开Android Studio\n- 打开Preferences > Plugins (macOS), File > Settings > Plugins (Windows & Linux)\n- 选择 Browse repositories, 搜索 Flutter plugin\n- 然后点击安装，然后安装Dart插件\n- 完成之后选择重启Android Studio\n\n### 如何在Android模拟器上运行Flutter？\n\n要准备在Android模拟器上运行并测试您的Flutter应用，需要按照以下步骤操作：\n\n- 在你的机器上启用 [VM acceleration](https://developer.android.com/studio/run/emulator-acceleration.html#vm-mac)；\n\n- 启动 Android Studio>Tools>Android>AVD Manager 并选择 `Create Virtual Device`；\n\n- 选择一个设备并选择 Next；\n\n- 为要模拟的Android版本选择一个或多个系统映像，然后选择 Next. 建议使用 x86 或 x86_64 的镜像；\n\n- 在 Emulated Performance下, 选择 Hardware - GLES 2.0 以启用硬件加速；\n\n- 验证AVD配置是否正确，然后选择 Finish；\n\n  如果对以上步骤还有不清楚的可以参阅Android官方的 [Managing AVDs](https://developer.android.com/studio/run/managing-avds.html)文档。\n\n- 在 Android Virtual Device Manager中, 点击工具栏的 `Run`，模拟器启动并显示所选操作系统版本或设备的启动画面；\n\n- 通过`flutter run`运行启动项目；\n\n### 如何在Android真机运行？\n\n要准备在Android设备上运行并测试您的Flutter应用，您需要安装Android 4.1（API level 16）或更高版本的Android设备\n\n- 在你的设备上启用 `开发人员选项` 和 `USB调试` 。详细说明可在[Android文档](https://developer.android.com/studio/debug/dev-options.html)中找到；\n- 使用USB将手机插入电脑，如果有授权提示需要同意授权；\n- 在终端中，运行` flutter devices` 命令以验证Flutter是否识别你连接的Android设备；\n- 通过`flutter run`运行启动项目；\n\n默认情况下，Flutter使用的Android SDK版本是基于你的 `adb` 工具版本， 如果你想让Flutter使用不同版本的Android SDK，则必须将该 `ANDROID_HOME` 环境变量修改SDK的目录。\n\n## 参考\n\n- [两分钟带你快速搭建Flutter开发环境(Mac)](http://www.devio.org/2019/04/03/development-environment-mac/)","slug":"快速搭建Flutter环境-Mac","published":1,"updated":"2020-05-18T16:35:00.487Z","layout":"post","photos":[],"link":"","_id":"cl78qfoqn006uqic9n0gavezo","content":"<h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><ul>\n<li>系统要求</li>\n<li>设置FLutter镜像(非必须)</li>\n<li>获取Flutter SDK</li>\n<li>iOS开发环境设置</li>\n<li>Android开发环境设置</li>\n<li>安装Flutter插件</li>\n</ul>\n<h2 id=\"系统要求\"><a href=\"#系统要求\" class=\"headerlink\" title=\"系统要求\"></a>系统要求</h2><p>在Mac上要安装并运行Flutter要满足以下最低要求:</p>\n<ul>\n<li>操作系统: macOS (64-bit)</li>\n<li>磁盘空间: 700 MB (不包括Xcode或Android Studio的磁盘空间）.</li>\n<li>工具: Flutter 依赖下面这些命令行工具：<code>bash curl git 2.x mkdir rm unzip which</code></li>\n</ul>\n<h2 id=\"设置FLutter镜像-非必须\"><a href=\"#设置FLutter镜像-非必须\" class=\"headerlink\" title=\"设置FLutter镜像(非必须)\"></a>设置FLutter镜像(非必须)</h2><p>由于在国内访问Flutter可能会受到限制，Flutter官方为中国开发者搭建了临时镜像，大家可以将如下环境变量加入到用户环境变量中：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//Macintosh HD⁩ ▸ ⁨Users⁩ ▸ ⁨你的用户名 ▸ ⁨.bash_profile</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> PUB_HOSTED_URL=https:<span class=\"comment\">//pub.flutter-io.cn</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> FLUTTER_STORAGE_BASE_URL=https:<span class=\"comment\">//storage.flutter-io.cn</span></span><br></pre></td></tr></table></figure>\n<p>注意：此镜像为临时镜像，并不能保证一直可用，大家可以从 <a href=\"https://flutter.dev/community/china\" target=\"_blank\" rel=\"noopener\">Using Flutter in China</a> 上获得有关镜像服务器的最新动态。</p>\n<h2 id=\"获取Flutter-SDK\"><a href=\"#获取Flutter-SDK\" class=\"headerlink\" title=\"获取Flutter SDK\"></a>获取Flutter SDK</h2><p><strong>1.点Flutter官网下载其最新可用的安装包。</strong></p>\n<p><strong>2.解压安装包到你想安装的目录，如：</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> cd ~/development</span><br><span class=\"line\"><span class=\"meta\">$</span> unzip ~/Downloads/flutter_macos_v1.2.1-stable.zip</span><br></pre></td></tr></table></figure>\n<p><strong>3.添加flutter相关工具到path中：</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> PATH=<span class=\"string\">\"$PATH:`pwd`/flutter/bin\"</span></span><br></pre></td></tr></table></figure>\n<p>此代码只能暂时针对当前命令行窗口设置PATH环境变量，要想永久将Flutter添加到PATH中请参考下面做法：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> cd ~</span><br><span class=\"line\"><span class=\"meta\">$</span> vim .bash_profile</span><br></pre></td></tr></table></figure>\n<p>然后添加：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> PATH=<span class=\"regexp\">/Users/</span>safran/Documents/flutter/bin:$PATH</span><br></pre></td></tr></table></figure>\n<p>之后记得保存文件。</p>\n<h3 id=\"运行-flutter-doctor\"><a href=\"#运行-flutter-doctor\" class=\"headerlink\" title=\"运行 flutter doctor\"></a>运行 flutter doctor</h3><p>上面path配置完成之后，需要关闭终端重新打开，然后运行：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> flutter doctor</span><br></pre></td></tr></table></figure>\n<p>该命令检查你的环境并在终端窗口中显示报告。Dart SDK已经在捆绑在Flutter里了，没有必要单独安装Dart。 仔细检查命令行输出以获取可能需要安装的其他软件或进一步需要执行的任务（以粗体显示）：</p>\n<p>例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[-] Android toolchain - develop for Android devices</span><br><span class=\"line\">    • Android SDK at /Users/obiwan/Library/Android/sdk</span><br><span class=\"line\">    ✗ Android SDK is missing command line tools; download from https://goo.gl/XxQghQ</span><br><span class=\"line\">    • Try re-installing or updating your Android SDK,</span><br><span class=\"line\">      visit https://flutter.dev/setup/#android-setup for detailed instructions.</span><br></pre></td></tr></table></figure>\n<p>一般的错误会是XCode或Android Studio版本太低、或者没有<code>ANDROID_HOME</code>环境变量等，可参考一下环境变量的配置来检查你的环境变量：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span>flutter环境变量</span><br><span class=\"line\">export PATH=/Users/safran/Desktop/flutter/bin:$PATH</span><br><span class=\"line\"><span class=\"meta\">#</span> flutter镜像</span><br><span class=\"line\">export PUB_HOSTED_URL=https://pub.flutter-io.cn</span><br><span class=\"line\">export FLUTTER_STORAGE_BASE_URL=https://storage.flutter-io.cn</span><br><span class=\"line\"><span class=\"meta\">#</span>Android 环境变量</span><br><span class=\"line\">export ANDROID_HOME=/Users/safran/Library/Android/sdk</span><br><span class=\"line\"><span class=\"meta\">#</span>Android 模拟器路径</span><br><span class=\"line\">export PATH=$&#123;PATH&#125;:$&#123;ANDROID_HOME&#125;/emulator</span><br><span class=\"line\"><span class=\"meta\">#</span>Android tools路径</span><br><span class=\"line\">export PATH=$&#123;PATH&#125;:$&#123;ANDROID_HOME&#125;/tools</span><br><span class=\"line\"><span class=\"meta\">#</span>Android 平台工具路径</span><br><span class=\"line\">export PATH=$&#123;PATH&#125;:$&#123;ANDROID_HOME&#125;/platform-tools</span><br><span class=\"line\"><span class=\"meta\">#</span>Android NDK路径</span><br><span class=\"line\">ANDROID_NDK_HOME=/Users/safran/Library/Android/ndk/android-ndk-r10e</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><em>第一次运行一个flutter命令（如flutter doctor）时，它会下载它自己的依赖项并自行编译。以后再运行就会快得多。</em></p>\n</blockquote>\n<h2 id=\"iOS开发环境设置\"><a href=\"#iOS开发环境设置\" class=\"headerlink\" title=\"iOS开发环境设置\"></a>iOS开发环境设置</h2><h3 id=\"安装-Xcode\"><a href=\"#安装-Xcode\" class=\"headerlink\" title=\"安装 Xcode\"></a>安装 Xcode</h3><p>要用Flutter开发iOS App需要Xcode 9.0 或更高版本:</p>\n<p><strong>1.安装Xcode 9.0或更新版本(通过链接下载或苹果应用商店)</strong></p>\n<p><strong>2.配置Xcode命令行工具以使用新安装的Xcode版本</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer</span><br></pre></td></tr></table></figure>\n<p>以上路径时对于最新版Xcode的路径。如果你需要使用不同的Xcode版本，需要指定相应路径。</p>\n<p><strong>3.确保Xcode许可协议是通过打开一次Xcode或通过命令sudo xcodebuild -license同意过了</strong></p>\n<p>接下来就可以使用Xcode，在iOS设备或模拟器上运行Flutter App了。</p>\n<h3 id=\"设置iOS模拟器\"><a href=\"#设置iOS模拟器\" class=\"headerlink\" title=\"设置iOS模拟器\"></a>设置iOS模拟器</h3><p>要准备在iOS模拟器上运行并测试您的Flutter应用，请按以下步骤操作：</p>\n<p><strong>1.在终端输入如下命令打开一个iOS模拟器：</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> open -a Simulator</span><br></pre></td></tr></table></figure>\n<p><strong>2.通过模拟器菜单栏的 硬件&gt;设备 ，确保你打开是64位 iPhone 5s或更新的模拟器</strong></p>\n<p><strong>3.如果模拟器过大，可以通过模拟器的 Window&gt; Scale 菜单下设置设备比例</strong></p>\n<h3 id=\"创建和运行一个简单的Flutter项目\"><a href=\"#创建和运行一个简单的Flutter项目\" class=\"headerlink\" title=\"创建和运行一个简单的Flutter项目\"></a>创建和运行一个简单的Flutter项目</h3><p><strong>1.通过如下命令创建一个Flutter项目</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> flutter create my_app</span><br></pre></td></tr></table></figure>\n<p><strong>2.命令运行完成之后会在当前目录下创建一个名为my_app的Flutter项目，然后通过一下命令可以运行它：</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> cd my_app</span><br><span class=\"line\"><span class=\"meta\">$</span> flutter run</span><br></pre></td></tr></table></figure>\n<h3 id=\"如何将Flutter安装到iOS真机上？\"><a href=\"#如何将Flutter安装到iOS真机上？\" class=\"headerlink\" title=\"如何将Flutter安装到iOS真机上？\"></a>如何将Flutter安装到iOS真机上？</h3><p>要通过<code>lutter run</code>将Flutter应用安装到iOS真机设备，需要一些额外的工具和一个Apple帐户，还需要在Xcode中进行设置：</p>\n<blockquote>\n<p>当然，用XCode来将Flutter运行在真机上更简单，只需要点一下<code>run</code>按钮即可，可以根据需要进行选择这两种不同的运行方式；</p>\n</blockquote>\n<p><strong>1.安装 Homebrew （如果已经安装了brew,跳过此步骤）.</strong></p>\n<p><strong>2.确保homebrew已更新</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> brew update</span><br></pre></td></tr></table></figure>\n<p><strong>3.打开终端并运行这些命令来安装用于将Flutter应用安装到iOS设备的工具</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> brew install --HEAD usbmuxd</span><br><span class=\"line\"><span class=\"meta\">$</span> brew link usbmuxd</span><br><span class=\"line\"><span class=\"meta\">$</span> brew install --HEAD libimobiledevice</span><br><span class=\"line\"><span class=\"meta\">$</span> brew install ideviceinstaller ios-deploy cocoapods</span><br><span class=\"line\"><span class=\"meta\">$</span> pod setup</span><br></pre></td></tr></table></figure>\n<p>如果这些命令中的任何一个失败并出现错误，可运行<code>brew doctor</code>并按照说明解决问题。</p>\n<p><strong>4.遵循Xcode签名流程来配置您的项目:</strong></p>\n<ul>\n<li>在你Flutter项目目录中通过 <code>open ios/Runner.xcworkspace</code> 打开默认的Xcode workspace</li>\n<li>在Xcode中，选择导航面板左侧中的Runner项目</li>\n<li>在Runner target设置页面中，确保在 常规&gt;签名&gt;团队 下选择了您的开发团队。当您选择一个团队时，Xcode会创建并下载开发证书，向您的设备注册您的帐户，并创建和下载配置文件（如果需要）<ul>\n<li>要开始您的第一个iOS开发项目，您可能需要使用您的Apple ID登录Xcode</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>任何Apple ID都支持开发和测试，但如果要将应用发布到App Store则需要一个99美刀的开发者账号。</li>\n<li>当你第一次attach真机设备进行iOS开发时，需要同时信任你的Mac和该设备上的开发证书。首次将iOS设备连接到Mac时,请在对话框中选择 <code>Trust</code>。</li>\n</ul>\n<p>然后，转到iOS设备上的设置应用程序，选择 常规&gt;设备管理 并信任您的证书。</p>\n<ul>\n<li>如果Xcode中的自动签名失败，请验证项目的 General &gt; Identity &gt; Bundle Identifier 值是否唯一。</li>\n</ul>\n<p><strong>5.通过flutter run运行启动项目</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> flutter run</span><br></pre></td></tr></table></figure>\n<h2 id=\"Android开发环境设置-amp-Flutter插件安装\"><a href=\"#Android开发环境设置-amp-Flutter插件安装\" class=\"headerlink\" title=\"Android开发环境设置&amp;Flutter插件安装\"></a>Android开发环境设置&amp;Flutter插件安装</h2><h3 id=\"安装Android-Studio\"><a href=\"#安装Android-Studio\" class=\"headerlink\" title=\"安装Android Studio\"></a>安装Android Studio</h3><p><strong>1.下载并安装 Android Studio</strong></p>\n<ul>\n<li><a href=\"https://developer.android.com/studio\" target=\"_blank\" rel=\"noopener\">https://developer.android.com/studio</a></li>\n<li><a href=\"https://developer.android.google.cn/studio\" target=\"_blank\" rel=\"noopener\">https://developer.android.google.cn/studio</a></li>\n</ul>\n<blockquote>\n<p>因为Android网站设在国外，如果你的网络无法访问第一个地址，可以选择使用Google为中国开发者提供的中国网址进行访问。</p>\n</blockquote>\n<p>另外，关于Android Studio的安装和配置，Android官方有比较详细的说明文档<a href=\"https://developer.android.google.cn/studio/intro，大家可以根据需要进行查阅；\" target=\"_blank\" rel=\"noopener\">https://developer.android.google.cn/studio/intro，大家可以根据需要进行查阅；</a></p>\n<p><strong>2.启动Android Studio，然后执行“Android Studio安装向导”。这将安装最新的Android SDK，Android SDK平台工具和Android SDK构建工具</strong></p>\n<h3 id=\"Flutter插件安装\"><a href=\"#Flutter插件安装\" class=\"headerlink\" title=\"Flutter插件安装\"></a>Flutter插件安装</h3><ul>\n<li>打开Android Studio</li>\n<li>打开Preferences &gt; Plugins (macOS), File &gt; Settings &gt; Plugins (Windows &amp; Linux)</li>\n<li>选择 Browse repositories, 搜索 Flutter plugin</li>\n<li>然后点击安装，然后安装Dart插件</li>\n<li>完成之后选择重启Android Studio</li>\n</ul>\n<h3 id=\"如何在Android模拟器上运行Flutter？\"><a href=\"#如何在Android模拟器上运行Flutter？\" class=\"headerlink\" title=\"如何在Android模拟器上运行Flutter？\"></a>如何在Android模拟器上运行Flutter？</h3><p>要准备在Android模拟器上运行并测试您的Flutter应用，需要按照以下步骤操作：</p>\n<ul>\n<li><p>在你的机器上启用 <a href=\"https://developer.android.com/studio/run/emulator-acceleration.html#vm-mac\" target=\"_blank\" rel=\"noopener\">VM acceleration</a>；</p>\n</li>\n<li><p>启动 Android Studio&gt;Tools&gt;Android&gt;AVD Manager 并选择 <code>Create Virtual Device</code>；</p>\n</li>\n<li><p>选择一个设备并选择 Next；</p>\n</li>\n<li><p>为要模拟的Android版本选择一个或多个系统映像，然后选择 Next. 建议使用 x86 或 x86_64 的镜像；</p>\n</li>\n<li><p>在 Emulated Performance下, 选择 Hardware - GLES 2.0 以启用硬件加速；</p>\n</li>\n<li><p>验证AVD配置是否正确，然后选择 Finish；</p>\n<p>如果对以上步骤还有不清楚的可以参阅Android官方的 <a href=\"https://developer.android.com/studio/run/managing-avds.html\" target=\"_blank\" rel=\"noopener\">Managing AVDs</a>文档。</p>\n</li>\n<li><p>在 Android Virtual Device Manager中, 点击工具栏的 <code>Run</code>，模拟器启动并显示所选操作系统版本或设备的启动画面；</p>\n</li>\n<li><p>通过<code>flutter run</code>运行启动项目；</p>\n</li>\n</ul>\n<h3 id=\"如何在Android真机运行？\"><a href=\"#如何在Android真机运行？\" class=\"headerlink\" title=\"如何在Android真机运行？\"></a>如何在Android真机运行？</h3><p>要准备在Android设备上运行并测试您的Flutter应用，您需要安装Android 4.1（API level 16）或更高版本的Android设备</p>\n<ul>\n<li>在你的设备上启用 <code>开发人员选项</code> 和 <code>USB调试</code> 。详细说明可在<a href=\"https://developer.android.com/studio/debug/dev-options.html\" target=\"_blank\" rel=\"noopener\">Android文档</a>中找到；</li>\n<li>使用USB将手机插入电脑，如果有授权提示需要同意授权；</li>\n<li>在终端中，运行<code>flutter devices</code> 命令以验证Flutter是否识别你连接的Android设备；</li>\n<li>通过<code>flutter run</code>运行启动项目；</li>\n</ul>\n<p>默认情况下，Flutter使用的Android SDK版本是基于你的 <code>adb</code> 工具版本， 如果你想让Flutter使用不同版本的Android SDK，则必须将该 <code>ANDROID_HOME</code> 环境变量修改SDK的目录。</p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"http://www.devio.org/2019/04/03/development-environment-mac/\" target=\"_blank\" rel=\"noopener\">两分钟带你快速搭建Flutter开发环境(Mac)</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><ul>\n<li>系统要求</li>\n<li>设置FLutter镜像(非必须)</li>\n<li>获取Flutter SDK</li>\n<li>iOS开发环境设置</li>\n<li>Android开发环境设置</li>\n<li>安装Flutter插件</li>\n</ul>\n<h2 id=\"系统要求\"><a href=\"#系统要求\" class=\"headerlink\" title=\"系统要求\"></a>系统要求</h2><p>在Mac上要安装并运行Flutter要满足以下最低要求:</p>\n<ul>\n<li>操作系统: macOS (64-bit)</li>\n<li>磁盘空间: 700 MB (不包括Xcode或Android Studio的磁盘空间）.</li>\n<li>工具: Flutter 依赖下面这些命令行工具：<code>bash curl git 2.x mkdir rm unzip which</code></li>\n</ul>\n<h2 id=\"设置FLutter镜像-非必须\"><a href=\"#设置FLutter镜像-非必须\" class=\"headerlink\" title=\"设置FLutter镜像(非必须)\"></a>设置FLutter镜像(非必须)</h2><p>由于在国内访问Flutter可能会受到限制，Flutter官方为中国开发者搭建了临时镜像，大家可以将如下环境变量加入到用户环境变量中：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//Macintosh HD⁩ ▸ ⁨Users⁩ ▸ ⁨你的用户名 ▸ ⁨.bash_profile</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> PUB_HOSTED_URL=https:<span class=\"comment\">//pub.flutter-io.cn</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> FLUTTER_STORAGE_BASE_URL=https:<span class=\"comment\">//storage.flutter-io.cn</span></span><br></pre></td></tr></table></figure>\n<p>注意：此镜像为临时镜像，并不能保证一直可用，大家可以从 <a href=\"https://flutter.dev/community/china\" target=\"_blank\" rel=\"noopener\">Using Flutter in China</a> 上获得有关镜像服务器的最新动态。</p>\n<h2 id=\"获取Flutter-SDK\"><a href=\"#获取Flutter-SDK\" class=\"headerlink\" title=\"获取Flutter SDK\"></a>获取Flutter SDK</h2><p><strong>1.点Flutter官网下载其最新可用的安装包。</strong></p>\n<p><strong>2.解压安装包到你想安装的目录，如：</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> cd ~/development</span><br><span class=\"line\"><span class=\"meta\">$</span> unzip ~/Downloads/flutter_macos_v1.2.1-stable.zip</span><br></pre></td></tr></table></figure>\n<p><strong>3.添加flutter相关工具到path中：</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> PATH=<span class=\"string\">\"$PATH:`pwd`/flutter/bin\"</span></span><br></pre></td></tr></table></figure>\n<p>此代码只能暂时针对当前命令行窗口设置PATH环境变量，要想永久将Flutter添加到PATH中请参考下面做法：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> cd ~</span><br><span class=\"line\"><span class=\"meta\">$</span> vim .bash_profile</span><br></pre></td></tr></table></figure>\n<p>然后添加：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> PATH=<span class=\"regexp\">/Users/</span>safran/Documents/flutter/bin:$PATH</span><br></pre></td></tr></table></figure>\n<p>之后记得保存文件。</p>\n<h3 id=\"运行-flutter-doctor\"><a href=\"#运行-flutter-doctor\" class=\"headerlink\" title=\"运行 flutter doctor\"></a>运行 flutter doctor</h3><p>上面path配置完成之后，需要关闭终端重新打开，然后运行：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> flutter doctor</span><br></pre></td></tr></table></figure>\n<p>该命令检查你的环境并在终端窗口中显示报告。Dart SDK已经在捆绑在Flutter里了，没有必要单独安装Dart。 仔细检查命令行输出以获取可能需要安装的其他软件或进一步需要执行的任务（以粗体显示）：</p>\n<p>例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[-] Android toolchain - develop for Android devices</span><br><span class=\"line\">    • Android SDK at /Users/obiwan/Library/Android/sdk</span><br><span class=\"line\">    ✗ Android SDK is missing command line tools; download from https://goo.gl/XxQghQ</span><br><span class=\"line\">    • Try re-installing or updating your Android SDK,</span><br><span class=\"line\">      visit https://flutter.dev/setup/#android-setup for detailed instructions.</span><br></pre></td></tr></table></figure>\n<p>一般的错误会是XCode或Android Studio版本太低、或者没有<code>ANDROID_HOME</code>环境变量等，可参考一下环境变量的配置来检查你的环境变量：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span>flutter环境变量</span><br><span class=\"line\">export PATH=/Users/safran/Desktop/flutter/bin:$PATH</span><br><span class=\"line\"><span class=\"meta\">#</span> flutter镜像</span><br><span class=\"line\">export PUB_HOSTED_URL=https://pub.flutter-io.cn</span><br><span class=\"line\">export FLUTTER_STORAGE_BASE_URL=https://storage.flutter-io.cn</span><br><span class=\"line\"><span class=\"meta\">#</span>Android 环境变量</span><br><span class=\"line\">export ANDROID_HOME=/Users/safran/Library/Android/sdk</span><br><span class=\"line\"><span class=\"meta\">#</span>Android 模拟器路径</span><br><span class=\"line\">export PATH=$&#123;PATH&#125;:$&#123;ANDROID_HOME&#125;/emulator</span><br><span class=\"line\"><span class=\"meta\">#</span>Android tools路径</span><br><span class=\"line\">export PATH=$&#123;PATH&#125;:$&#123;ANDROID_HOME&#125;/tools</span><br><span class=\"line\"><span class=\"meta\">#</span>Android 平台工具路径</span><br><span class=\"line\">export PATH=$&#123;PATH&#125;:$&#123;ANDROID_HOME&#125;/platform-tools</span><br><span class=\"line\"><span class=\"meta\">#</span>Android NDK路径</span><br><span class=\"line\">ANDROID_NDK_HOME=/Users/safran/Library/Android/ndk/android-ndk-r10e</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><em>第一次运行一个flutter命令（如flutter doctor）时，它会下载它自己的依赖项并自行编译。以后再运行就会快得多。</em></p>\n</blockquote>\n<h2 id=\"iOS开发环境设置\"><a href=\"#iOS开发环境设置\" class=\"headerlink\" title=\"iOS开发环境设置\"></a>iOS开发环境设置</h2><h3 id=\"安装-Xcode\"><a href=\"#安装-Xcode\" class=\"headerlink\" title=\"安装 Xcode\"></a>安装 Xcode</h3><p>要用Flutter开发iOS App需要Xcode 9.0 或更高版本:</p>\n<p><strong>1.安装Xcode 9.0或更新版本(通过链接下载或苹果应用商店)</strong></p>\n<p><strong>2.配置Xcode命令行工具以使用新安装的Xcode版本</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer</span><br></pre></td></tr></table></figure>\n<p>以上路径时对于最新版Xcode的路径。如果你需要使用不同的Xcode版本，需要指定相应路径。</p>\n<p><strong>3.确保Xcode许可协议是通过打开一次Xcode或通过命令sudo xcodebuild -license同意过了</strong></p>\n<p>接下来就可以使用Xcode，在iOS设备或模拟器上运行Flutter App了。</p>\n<h3 id=\"设置iOS模拟器\"><a href=\"#设置iOS模拟器\" class=\"headerlink\" title=\"设置iOS模拟器\"></a>设置iOS模拟器</h3><p>要准备在iOS模拟器上运行并测试您的Flutter应用，请按以下步骤操作：</p>\n<p><strong>1.在终端输入如下命令打开一个iOS模拟器：</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> open -a Simulator</span><br></pre></td></tr></table></figure>\n<p><strong>2.通过模拟器菜单栏的 硬件&gt;设备 ，确保你打开是64位 iPhone 5s或更新的模拟器</strong></p>\n<p><strong>3.如果模拟器过大，可以通过模拟器的 Window&gt; Scale 菜单下设置设备比例</strong></p>\n<h3 id=\"创建和运行一个简单的Flutter项目\"><a href=\"#创建和运行一个简单的Flutter项目\" class=\"headerlink\" title=\"创建和运行一个简单的Flutter项目\"></a>创建和运行一个简单的Flutter项目</h3><p><strong>1.通过如下命令创建一个Flutter项目</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> flutter create my_app</span><br></pre></td></tr></table></figure>\n<p><strong>2.命令运行完成之后会在当前目录下创建一个名为my_app的Flutter项目，然后通过一下命令可以运行它：</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> cd my_app</span><br><span class=\"line\"><span class=\"meta\">$</span> flutter run</span><br></pre></td></tr></table></figure>\n<h3 id=\"如何将Flutter安装到iOS真机上？\"><a href=\"#如何将Flutter安装到iOS真机上？\" class=\"headerlink\" title=\"如何将Flutter安装到iOS真机上？\"></a>如何将Flutter安装到iOS真机上？</h3><p>要通过<code>lutter run</code>将Flutter应用安装到iOS真机设备，需要一些额外的工具和一个Apple帐户，还需要在Xcode中进行设置：</p>\n<blockquote>\n<p>当然，用XCode来将Flutter运行在真机上更简单，只需要点一下<code>run</code>按钮即可，可以根据需要进行选择这两种不同的运行方式；</p>\n</blockquote>\n<p><strong>1.安装 Homebrew （如果已经安装了brew,跳过此步骤）.</strong></p>\n<p><strong>2.确保homebrew已更新</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> brew update</span><br></pre></td></tr></table></figure>\n<p><strong>3.打开终端并运行这些命令来安装用于将Flutter应用安装到iOS设备的工具</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> brew install --HEAD usbmuxd</span><br><span class=\"line\"><span class=\"meta\">$</span> brew link usbmuxd</span><br><span class=\"line\"><span class=\"meta\">$</span> brew install --HEAD libimobiledevice</span><br><span class=\"line\"><span class=\"meta\">$</span> brew install ideviceinstaller ios-deploy cocoapods</span><br><span class=\"line\"><span class=\"meta\">$</span> pod setup</span><br></pre></td></tr></table></figure>\n<p>如果这些命令中的任何一个失败并出现错误，可运行<code>brew doctor</code>并按照说明解决问题。</p>\n<p><strong>4.遵循Xcode签名流程来配置您的项目:</strong></p>\n<ul>\n<li>在你Flutter项目目录中通过 <code>open ios/Runner.xcworkspace</code> 打开默认的Xcode workspace</li>\n<li>在Xcode中，选择导航面板左侧中的Runner项目</li>\n<li>在Runner target设置页面中，确保在 常规&gt;签名&gt;团队 下选择了您的开发团队。当您选择一个团队时，Xcode会创建并下载开发证书，向您的设备注册您的帐户，并创建和下载配置文件（如果需要）<ul>\n<li>要开始您的第一个iOS开发项目，您可能需要使用您的Apple ID登录Xcode</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>任何Apple ID都支持开发和测试，但如果要将应用发布到App Store则需要一个99美刀的开发者账号。</li>\n<li>当你第一次attach真机设备进行iOS开发时，需要同时信任你的Mac和该设备上的开发证书。首次将iOS设备连接到Mac时,请在对话框中选择 <code>Trust</code>。</li>\n</ul>\n<p>然后，转到iOS设备上的设置应用程序，选择 常规&gt;设备管理 并信任您的证书。</p>\n<ul>\n<li>如果Xcode中的自动签名失败，请验证项目的 General &gt; Identity &gt; Bundle Identifier 值是否唯一。</li>\n</ul>\n<p><strong>5.通过flutter run运行启动项目</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> flutter run</span><br></pre></td></tr></table></figure>\n<h2 id=\"Android开发环境设置-amp-Flutter插件安装\"><a href=\"#Android开发环境设置-amp-Flutter插件安装\" class=\"headerlink\" title=\"Android开发环境设置&amp;Flutter插件安装\"></a>Android开发环境设置&amp;Flutter插件安装</h2><h3 id=\"安装Android-Studio\"><a href=\"#安装Android-Studio\" class=\"headerlink\" title=\"安装Android Studio\"></a>安装Android Studio</h3><p><strong>1.下载并安装 Android Studio</strong></p>\n<ul>\n<li><a href=\"https://developer.android.com/studio\" target=\"_blank\" rel=\"noopener\">https://developer.android.com/studio</a></li>\n<li><a href=\"https://developer.android.google.cn/studio\" target=\"_blank\" rel=\"noopener\">https://developer.android.google.cn/studio</a></li>\n</ul>\n<blockquote>\n<p>因为Android网站设在国外，如果你的网络无法访问第一个地址，可以选择使用Google为中国开发者提供的中国网址进行访问。</p>\n</blockquote>\n<p>另外，关于Android Studio的安装和配置，Android官方有比较详细的说明文档<a href=\"https://developer.android.google.cn/studio/intro，大家可以根据需要进行查阅；\" target=\"_blank\" rel=\"noopener\">https://developer.android.google.cn/studio/intro，大家可以根据需要进行查阅；</a></p>\n<p><strong>2.启动Android Studio，然后执行“Android Studio安装向导”。这将安装最新的Android SDK，Android SDK平台工具和Android SDK构建工具</strong></p>\n<h3 id=\"Flutter插件安装\"><a href=\"#Flutter插件安装\" class=\"headerlink\" title=\"Flutter插件安装\"></a>Flutter插件安装</h3><ul>\n<li>打开Android Studio</li>\n<li>打开Preferences &gt; Plugins (macOS), File &gt; Settings &gt; Plugins (Windows &amp; Linux)</li>\n<li>选择 Browse repositories, 搜索 Flutter plugin</li>\n<li>然后点击安装，然后安装Dart插件</li>\n<li>完成之后选择重启Android Studio</li>\n</ul>\n<h3 id=\"如何在Android模拟器上运行Flutter？\"><a href=\"#如何在Android模拟器上运行Flutter？\" class=\"headerlink\" title=\"如何在Android模拟器上运行Flutter？\"></a>如何在Android模拟器上运行Flutter？</h3><p>要准备在Android模拟器上运行并测试您的Flutter应用，需要按照以下步骤操作：</p>\n<ul>\n<li><p>在你的机器上启用 <a href=\"https://developer.android.com/studio/run/emulator-acceleration.html#vm-mac\" target=\"_blank\" rel=\"noopener\">VM acceleration</a>；</p>\n</li>\n<li><p>启动 Android Studio&gt;Tools&gt;Android&gt;AVD Manager 并选择 <code>Create Virtual Device</code>；</p>\n</li>\n<li><p>选择一个设备并选择 Next；</p>\n</li>\n<li><p>为要模拟的Android版本选择一个或多个系统映像，然后选择 Next. 建议使用 x86 或 x86_64 的镜像；</p>\n</li>\n<li><p>在 Emulated Performance下, 选择 Hardware - GLES 2.0 以启用硬件加速；</p>\n</li>\n<li><p>验证AVD配置是否正确，然后选择 Finish；</p>\n<p>如果对以上步骤还有不清楚的可以参阅Android官方的 <a href=\"https://developer.android.com/studio/run/managing-avds.html\" target=\"_blank\" rel=\"noopener\">Managing AVDs</a>文档。</p>\n</li>\n<li><p>在 Android Virtual Device Manager中, 点击工具栏的 <code>Run</code>，模拟器启动并显示所选操作系统版本或设备的启动画面；</p>\n</li>\n<li><p>通过<code>flutter run</code>运行启动项目；</p>\n</li>\n</ul>\n<h3 id=\"如何在Android真机运行？\"><a href=\"#如何在Android真机运行？\" class=\"headerlink\" title=\"如何在Android真机运行？\"></a>如何在Android真机运行？</h3><p>要准备在Android设备上运行并测试您的Flutter应用，您需要安装Android 4.1（API level 16）或更高版本的Android设备</p>\n<ul>\n<li>在你的设备上启用 <code>开发人员选项</code> 和 <code>USB调试</code> 。详细说明可在<a href=\"https://developer.android.com/studio/debug/dev-options.html\" target=\"_blank\" rel=\"noopener\">Android文档</a>中找到；</li>\n<li>使用USB将手机插入电脑，如果有授权提示需要同意授权；</li>\n<li>在终端中，运行<code>flutter devices</code> 命令以验证Flutter是否识别你连接的Android设备；</li>\n<li>通过<code>flutter run</code>运行启动项目；</li>\n</ul>\n<p>默认情况下，Flutter使用的Android SDK版本是基于你的 <code>adb</code> 工具版本， 如果你想让Flutter使用不同版本的Android SDK，则必须将该 <code>ANDROID_HOME</code> 环境变量修改SDK的目录。</p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"http://www.devio.org/2019/04/03/development-environment-mac/\" target=\"_blank\" rel=\"noopener\">两分钟带你快速搭建Flutter开发环境(Mac)</a></li>\n</ul>\n"},{"title":"Vue插件集合","comments":1,"abbrlink":"4d08fea4","date":"2018-10-05T14:35:29.000Z","_content":"\n## UI组件\n\n### 框架\n\n1. [element](https://github.com/ElemeFE/element) - 饿了么出品的Vue2的web UI工具套件\n2. [mint-ui](https://github.com/ElemeFE/mint-ui) - Vue 2的移动UI元素\n3. [iview](https://github.com/iview/iview) - 基于 Vuejs 的开源 UI 组件库\n4. [Keen-UI](https://github.com/JosephusPaye/Keen-UI) - 轻量级的基本UI组件合集\n5. [vue-material](https://github.com/marcosmoura/vue-material) - 通过Vue Material和Vue 2建立精美的app应用\n6. [muse-ui](https://github.com/museui/muse-ui) - 三端样式一致的响应式 UI 库\n7. [vuetify](https://github.com/vuetifyjs/vuetify) - 为移动而生的Vue JS 2组件框架\n8. [vonic](https://github.com/wangdahoo/vonic) - 快速构建移动端单页应用\n9. [vue-blu](https://github.com/chenz24/vue-blu) - 帮助你轻松创建web应用\n10. [vue-multiselect](https://github.com/monterail/vue-multiselect) - Vue.js选择框解决方案\n11. [VueCircleMenu](https://github.com/OYsun/VueCircleMenu) - 漂亮的vue圆环菜单\n12. [vue-chat](https://github.com/Coffcer/vue-chat) - vuejs和vuex及webpack的聊天示例\n13. [radon-ui](https://github.com/luojilab/radon-ui) - 快速开发产品的Vue组件库\n14. [vue-waterfall](https://github.com/MopTym/vue-waterfall) - Vue.js的瀑布布局组件\n15. [vue-carbon](https://github.com/myronliu347/vue-carbon) - 基于 vue 开发MD风格的移动端\n16. [vue-beauty](https://github.com/FE-Driver/vue-beauty) - 由vue和ant design创建的优美UI组件\n17. [bootstrap-vue](https://github.com/pi0/bootstrap-vue) - 应用于Vuejs2的Twitter的Bootstrap 4组件\n18. [vueAdmin](https://github.com/taylorchen709/vueAdmin) - 基于vuejs2和element的简单的管理员模板\n19. [vue-ztree](https://github.com/lisiyizu/vue-ztree) - 用 vue 写的树层级组件\n20. [vue-tree](https://github.com/weibangtuo/vue-tree) - vue树视图组件\n21. [vue-tabs](https://github.com/alexqdjay/vue-tabs) - 多tab页轻型框架\n\n\n\n### 编辑器\n\n1. [markcook](https://github.com/jrainlau/markcook) - 好看的markdown编辑器\n2. [eme](https://github.com/egoist/eme) - 优雅的Markdown编辑器\n3. [vue-syntax-highlight](https://github.com/vuejs/vue-syntax-highlight) - Sublime Text语法高亮\n4. [vue-quill-editor](https://github.com/surmon-china/vue-quill-editor) - 基于Quill适用于Vue2的富文本编辑器\n5. [Vueditor](https://github.com/hifarer/Vueditor) - 所见即所得的编辑器\n6. [vue-html5-editor](https://github.com/PeakTai/vue-html5-editor) - html5所见即所得编辑器\n7. [vue2-editor](https://github.com/davidroyer/vue2-editor) - HTML编辑器\n8. [vue-simplemde](https://github.com/F-loat/vue-simplemde) - VueJS的Markdown编辑器组件\n9. [vue-quill](https://github.com/CroudSupport/vue-quill) - vue组件构建quill编辑器\n\n### slider\n\n1. [vue-awesome-swiper](https://github.com/surmon-china/vue-awesome-swiper) - vue.js触摸滑动组件\n2. [vue-slick](https://github.com/staskjs/vue-slick) - 实现流畅轮播框的vue组件\n3. [vue-swipe](https://github.com/ElemeFE/vue-swipe) - VueJS触摸滑块\n4. [vue-swiper](https://github.com/weilao/vue-swiper) - 易于使用的滑块组件\n5. [vue-images](https://github.com/littlewin-wang/vue-images) - 显示一组图片的lightbox组件\n6. [vue-carousel-3d](https://github.com/Wlada/vue-carousel-3d) - VueJS的3D轮播组件\n7. [vue-slide](https://github.com/hilongjw/vue-slide) - vue轻量级滑动组件\n8. [vue-slider](https://github.com/warpcgd/vue-slider) - vue 滑动组件\n9. [vue-m-carousel](https://github.com/shiye515/vue-m-carousel) - vue 移动端轮播组件\n10. [dd-vue-component](https://github.com/ibufu/dd-vue-component) - 订单来了的公共组件库\n11. [vue-easy-slider](https://github.com/shhdgit/vue-easy-slider) - Vue 2.x的滑块组件\n\n### 图表\n\n1. [vue-table](https://github.com/ratiw/vue-table) - 简化数据表格\n2. [vue-chartjs](https://github.com/apertureless/vue-chartjs) - vue中的Chartjs的封装\n3. [vue-charts](https://github.com/hchstera/vue-charts) - 轻松渲染一个图表\n4. [vue-chart](https://github.com/miaolz123/vue-chart) - 强大的高速的vue图表解析\n5. [vue-highcharts](https://github.com/weizhenye/vue-highcharts) - HighCharts组件\n6. [chartjs](https://github.com/vue-bulma/chartjs) - Vue Bulma的chartjs组件\n7. [vue-chartkick](https://github.com/ankane/vue-chartkick) - VueJS一行代码实现优美图表\n\n### 日历\n\n1. [vue-calendar](https://github.com/jinzhe/vue-calendar) - 日期选择插件\n2. [vue-datepicker](https://github.com/hilongjw/vue-datepicker) - 日历和日期选择组件\n3. [vue-datetime-picker](https://github.com/Haixing-Hu/vue-datetime-picker) - 日期时间选择控件\n4. [vue2-calendar](https://github.com/icai/vue2-calendar) - 支持lunar和日期事件的日期选择器\n5. [vue-fullcalendar](https://github.com/Wanderxx/vue-fullcalendar) - 基于vue.js的全日历组件\n6. [vue-datepicker](https://github.com/weifeiyue/vue-datepicker) - 漂亮的Vue日期选择器组件\n7. [datepicker](https://github.com/vue-bulma/datepicker) - 基于flatpickr的时间选择组件\n8. [vue2-timepicker](https://github.com/phoenixwong/vue2-timepicker) - 下拉时间选择器\n9. [vue-date-picker](https://github.com/Bubblings/vue-date-picker) - VueJS日期选择器组件\n10. [vue-datepicker-simple](https://github.com/dai-siki/vue-datepicker-simple) - 基于vue的日期选择器\n\n### 地址选择\n\n1. [vue-city](https://github.com/xinxingyu/vue-city) - 城市选择器\n2. [vue-region-picker](https://github.com/QingWei-Li/vue-region-picker) - 选择中国的省份市和地区\n\n### 地图\n\n1. [vue-amap](https://github.com/ElemeFE/vue-amap) - 基于Vue 2和高德地图的地图组件\n2. [vue-google-maps](https://github.com/GuillaumeLeclerc/vue-google-maps) - 带有双向数据绑定Google地图组件\n3. [vue-baidu-map](https://github.com/Dafrok/vue-baidu-map)- 基于 Vue 2的百度地图组件库\n4. [vue-cmap](https://github.com/doodlewind/vue-cmap) - Vue China map可视化组件\n\n### 播放器\n\n1. [vue-video-player](https://github.com/surmon-china/vue-video-player) - VueJS视频及直播播放器\n2. [vue-video](https://github.com/hilongjw/vue-video) - Vue.js的HTML5视频播放器\n3. [vue-music-master](https://github.com/yunyi1895/vue-music-master) - vue手机端网页音乐播放器\n\n### 滚动scroll\n\n1. [vue-scroller](https://github.com/wangdahoo/vue-scroller) - Vonic UI的功能性组件\n2. [vue-mugen-scroll](https://github.com/egoist/vue-mugen-scroll) - 无限滚动组件\n3. [vue-infinite-loading](https://github.com/PeachScript/vue-infinite-loading) - VueJS的无限滚动插件\n4. [vue-virtual-scroller](https://github.com/Akryum/vue-virtual-scroller) - 带任意数目数据的顺畅的滚动\n5. [vue-infinite-scroll](https://github.com/ElemeFE/vue-infinite-scroll) - VueJS的无限滚动指令\n6. [vue-scrollbar](https://github.com/BosNaufal/vue-scrollbar) - 最简单的滚动区域组件\n7. [vue-scroll](https://github.com/suguangwen/vue-scroll) - vue滚动\n8. [vue-pull-to-refresh](https://github.com/bajian/vue-pull-to-refresh) - Vue2的上拉下拉\n9. [mint-loadmore](https://github.com/mint-ui/mint-loadmore) - VueJS的双向下拉刷新组件\n10. [vue-smoothscroll](https://github.com/Teddy-Zhu/vue-smoothscroll) - smoothscroll的VueJS版本\n\n### 文件上传\n\n1. [vue-upload-component](https://github.com/lian-yue/vue-upload-component) - Vuejs文件上传组件\n2. [vue-core-image-upload](https://github.com/Vanthink-UED/vue-core-image-upload) - 轻量级的vue上传插件\n3. [vue-dropzone](https://github.com/rowanwins/vue-dropzone) - 用于文件上传的Vue组件\n\n### 图片处理\n\n1. [vue-lazyload-img](https://github.com/JALBAA/vue-lazyload-img) - 移动优化的vue图片懒加载插件\n2. [vue-image-crop-upload](https://github.com/dai-siki/vue-image-crop-upload) - vue图片剪裁上传组件\n3. [vue-svgicon](https://github.com/MMF-FE/vue-svgicon) - 创建svg图标组件的工具\n4. [vue-img-loader](https://github.com/JackGit/vue-img-loader) - 图片加载UI组件\n5. [vue-image-clip](https://github.com/legeneek/vue-image-clip)- 基于vue的图像剪辑组件\n6. [vue-progressive-image](https://github.com/MatteoGabriele/vue-progressive-image) - Vue的渐进图像加载插件\n\n### 提示\n\n1. [vue-toast-mobile](https://github.com/ElemeFE/vue-toast-mobile) - VueJS的toast插件\n2. [vue-msgbox](https://github.com/ElemeFE/vue-msgbox) - vuejs的消息框\n3. [vue-tooltip](https://github.com/Akryum/vue-tooltip) - 带绑定信息提示的提示工具\n4. [vue-verify-pop](https://github.com/aweiu/vue-verify-pop) - 带气泡提示的vue校验插件\n\n### 进度条\n\n1. [vue-radial-progress](https://github.com/wyzant-dev/vue-radial-progress) - Vue.js放射性进度条组件\n2. [vue-progressbar](https://github.com/hilongjw/vue-progressbar) - vue轻量级进度条\n3. [vue2-loading-bar](https://github.com/BosNaufal/vue2-loading-bar) - 最简单的仿Youtube加载条视图\n\n### 其他\n\n1. [vue-dragging](https://github.com/hilongjw/vue-dragging)- 使元素可以拖拽\n2. [Vue.Draggable](https://github.com/David-Desmaisons/Vue.Draggable)- 实现拖放和视图模型数组同步\n3. [vue-picture-input](https://github.com/alessiomaffeis/vue-picture-input)- 移动友好的图片文件输入组件\n4. [rubik](https://github.com/ccforward/rubik)- 基于Vuejs2的开源 UI 组件库\n5. [VueStar](https://github.com/OYsun/VueStar)- 带星星动画的vue点赞按钮\n6. [vue-tables-2](https://github.com/matfish2/vue-tables-2)- 显示数据的bootstrap样式网格\n7. [DataVisualization](https://github.com/SimonZhangITer/DataVisualization)- 数据可视化\n8. [vue-drag-and-drop-list](https://github.com/Alex-fun/vue-drag-and-drop-list)- 创建排序列表的Vue指令\n9. [vuwe](https://github.com/vuwe/vuwe)- 基于微信WeUI所开发的专用于Vue2的组件库\n10. [vue-typer](https://github.com/cngu/vue-typer)- 模拟用户输入选择和删除文本的Vue组件\n11. [vue-impression](https://github.com/NewDadaFE/vue-impression)- 移动Vuejs2 UI元素\n12. [vue-datatable](https://github.com/galenyuan/vue-datatable)- 使用Vuejs创建的DataTableView\n13. [vue-instant](https://github.com/santiblanko/vue-instant)- 轻松创建自动提示的自定义搜索控件\n14. [vue-slider-component](https://github.com/NightCatSama/vue-slider-component)- 在vue1和vue2中使用滑块\n15. [vue-touch-ripple](https://github.com/surmon-china/vue-touch-ripple)- vuejs的触摸ripple组件\n16. [coffeebreak](https://github.com/Kocisov/coffeebreak)- 实时编辑CSS组件工具\n17. [vue-datasource](https://github.com/coderdiaz/vue-datasource)- 创建VueJS动态表格\n18. [handsontable](https://github.com/vue-bulma/handsontable)- 网页表格组件\n19. [vue-bootstrap-table](https://github.com/jbaysolutions/vue-bootstrap-table)- 可排序可检索的表格\n20. [vue-google-signin-button](https://github.com/phanan/vue-google-signin-button)- 导入谷歌登录按钮\n21. [vue-float-label](https://github.com/bkzl/vue-float-label)- VueJS浮动标签模式\n22. [vue-tagsinput](https://github.com/Ginhing/vue-tagsinput)- 基于VueJS的标签组件\n23. [vue-social-sharing](https://github.com/nicolasbeauvais/vue-social-sharing)- 社交分享组件\n24. [vue-popup-mixin](https://github.com/myronliu347/vue-popup-mixin)- 用于管理弹出框的遮盖层\n25. [cubeex](https://github.com/fangyongbao/cubeex)- 包含一套完整的移动UI\n26. [vue-fullcalendar](https://github.com/CroudSupport/vue-fullcalendar)- vue FullCalendar封装\n27. [vue-material-design](https://github.com/loujiayu/vue-material-design)- Vue MD风格组件\n28. [vue-morris](https://github.com/bbonnin/vue-morris)- Vuejs组件封装Morrisjs库\n29. [we-vue](https://github.com/tianyong90/we-vue)- Vue2及weui1开发的组件\n30. [vue-form-2](https://github.com/matfish2/vue-form-2)- 全面的HTML表单管理的解决方案\n31. [vue-side-nav](https://github.com/vue-comps/vue-side-nav)- 响应式的侧边导航\n32. [mint-indicator](https://github.com/mint-ui/mint-indicator)- VueJS移动加载指示器插件\n33. [vue-ripple](https://github.com/BosNaufal/vue-ripple)- 制作谷歌MD风格涟漪效果的Vue组件\n34. [vue-touch-keyboard](https://github.com/icebob/vue-touch-keyboard)- VueJS虚拟键盘组件\n35. [vue-parallax](https://github.com/vue-comps/vue-parallax)- 整洁的视觉效果\n36. [vue-typewriter](https://github.com/eduardostuart/vue-typewriter)- vue组件类型\n37. [vue-ios-alertview](https://github.com/Treri/vue-ios-alertview)- iOS7+ 风格的alertview服务\n38. [paco-ui-vue](https://github.com/yeseason/paco-ui-vue)- PACOUI的vue组件\n39. [vue-button](https://github.com/steven5538/vue-button)- Vue按钮组件\n\n## 开发框架\n\n1. [vue.js](https://github.com/vuejs/vue) - 流行的轻量高效的前端组件化方案\n2. [vue-admin](https://github.com/fundon/vue-admin) - Vue管理面板框架\n3. [electron-vue](https://github.com/SimulatedGREG/electron-vue) - Electron及VueJS快速启动样板\n4. [vue-2.0-boilerplate](https://github.com/petervmeijgaard/vue-2.0-boilerplate) - Vue2单页应用样板\n5. [vue-webgulp](https://github.com/rodzzlessa24/vue-webgulp) - 仿VueJS Vue loader示例\n6. [vue-bulma](https://github.com/wangxg2016/vue-bulma) - 轻量级高性能MVVM Admin UI框架\n7. [vue-spa-template](https://github.com/hanan198501/vue-spa-template) - 前后端分离后的单页应用开发\n8. [Framework7-Vue](https://github.com/nolimits4web/Framework7-Vue) - VueJS与Framework7结合\n9. [vue-element-starter](https://github.com/Metnew/vue-element-starter) - vue启动页\n\n## 实用库\n\n1. [vuelidate](https://github.com/monterail/vuelidate) - 简单轻量级的基于模块的Vue.js验证\n2. [qingcheng](https://github.com/zerqu/qingcheng) - qingcheng主题\n3. [vuex](https://github.com/vuejs/vuex) - 专为 Vue.js 应用程序开发的状态管理模式\n4. [vue-axios](https://github.com/imcvampire/vue-axios) - 将axios整合到VueJS的封装\n5. [vue-desktop](https://github.com/ElemeFE/vue-desktop) - 创建管理面板网站的UI库\n6. [vue-meta](https://github.com/declandewet/vue-meta) - 管理app的meta信息\n7. [avoriaz](https://github.com/eddyerburgh/avoriaz) - VueJS测试实用工具库\n8. [vue-framework7](https://github.com/lmk123/vue-framework7) - 结合VueJS使用的Framework7组件\n9. [vue-lazy-render](https://github.com/yeyuqiudeng/vue-lazy-render) - 用于Vue组件的延迟渲染\n10. [vue-svg-icon](https://github.com/cenkai88/vue-svg-icon) - vue2的可变彩色svg图标方案\n11. [vue-online](https://github.com/Sopamo/vue-online) - reactive的在线和离线组件\n12. [vue-password-strength-meter](https://github.com/apertureless/vue-password-strength-meter) - 交互式密码强度计\n13. [vuep](https://github.com/QingWei-Li/vuep) - 用实时编辑和预览来渲染Vue组件\n14. [vue-bootstrap-modal](https://github.com/Coffcer/vue-bootstrap-modal) - vue的Bootstrap样式组件\n15. [element-admin](https://github.com/lynzz/element-admin) - 支持 vuecli 的 Element UI 的后台模板\n16. [vue-shortkey](https://github.com/iFgR/vue-shortkey) - 应用于Vue.js的Vue-ShortKey 插件\n17. [cleave](https://github.com/vue-bulma/cleave) - 基于cleave.js的Cleave组件\n18. [vue-events](https://github.com/cklmercer/vue-events) - 简化事件的VueJS插件\n19. [http-vue-loader](https://github.com/FranckFreiburger/http-vue-loader) - 从html及js环境加载vue文件\n20. [vue-electron](https://github.com/SimulatedGREG/vue-electron) - 将选择的API封装到Vue对象中的插件\n21. [vue-router-transition](https://github.com/weinot/vue-router-transition) - 页面过渡插件\n22. [vuemit](https://github.com/gocanto/vuemit) - 处理VueJS事件\n23. [vue-cordova](https://github.com/kartsims/vue-cordova) - Cordova的VueJS插件\n24. [vue-qart](https://github.com/superman66/vue-qart) - 用于qartjs的Vue2指令\n25. [vue-websocket](https://github.com/icebob/vue-websocket) - VueJS的Websocket插件\n26. [vue-gesture](https://github.com/mlyknown/vue-gesture) - VueJS的手势事件插件\n27. [vue-local-storage](https://github.com/pinguinjkeke/vue-local-storage) - 具有类型支持的Vuejs本地储存插件\n28. [lazy-vue](https://github.com/gocanto/lazy-vue) - 懒加载图片\n29. [vue-lazyloadImg](https://github.com/yodfz/vue-lazyloadImg) - 图片懒加载插件\n30. [vue-bus](https://github.com/yangmingshan/vue-bus) - VueJS的事件总线\n31. [vue-observe-visibility](https://github.com/Akryum/vue-observe-visibility) - 当元素在页面上可见或隐藏时检测\n32. [vue-notifications](https://github.com/se-panfilov/vue-notifications) - 非阻塞通知库\n33. [v-media-query](https://github.com/AStaroverov/v-media-query) - vue中添加用于配合媒体查询的方法\n34. [vuex-shared-mutations](https://github.com/xanf/vuex-shared-mutations) - 分享某种Vuex mutations\n35. [vue-lazy-component](https://github.com/Coffcer/vue-lazy-component) - 懒加载组件或者元素的Vue指令\n36. [vue-reactive-storage](https://github.com/ropbla9/vue-reactive-storage) - vue插件的Reactive层\n37. [vue-ts-loader](https://github.com/HerringtonDarkholme/vue-ts-loader) - 在Vue装载机检查脚本\n38. [vue-pagination-2](https://github.com/matfish2/vue-pagination-2) - 简单通用的分页组件\n39. [vuex-i18n](https://github.com/dkfbasel/vuex-i18n) - 定位插件\n40. [Vue.resize](https://github.com/David-Desmaisons/Vue.resize) - 检测HTML调整大小事件的vue指令\n41. [vue-zoombox](https://github.com/vue-comps/vue-zoombox) - 一个高级zoombox\n42. [leo-vue-validator](https://github.com/LeoHuiyi/leo-vue-validator) - 异步的表单验证组件\n43. [modal](https://github.com/vue-bulma/modal) - Vue Bulma的modal组件\n44. [Famous-Vue](https://github.com/irwansyahwii/Famous-Vue) - Famous库的vue组件\n45. [vue-input-autosize](https://github.com/syropian/vue-input-autosize) - 基于内容自动调整文本输入的大小\n46. [vue-file-base64](https://github.com/BosNaufal/vue-file-base64) - 将文件转换为Base64的vue组件\n47. [Vue-Easy-Validator](https://github.com/MetinSeylan/Vue-Easy-Validator) - 简单的表单验证\n48. [vue-truncate-filter](https://github.com/imcvampire/vue-truncate-filter) - 截断字符串的VueJS过滤器\n\n## 服务端\n\n1. [vue-ssr](https://github.com/hilongjw/vue-ssr) - 结合Express使用Vue2服务端渲染\n2. [nuxt.js](https://github.com/nuxt/nuxt.js) - 用于服务器渲染Vue app的最小化框架\n3. [vue-ssr](https://github.com/ccforward/vue-ssr) - 非常简单的VueJS服务器端渲染模板\n4. [vue-easy-renderer](https://github.com/leaves4j/vue-easy-renderer) - Nodejs服务端渲染\n5. [express-vue](https://github.com/danmademe/express-vue) - 简单的使用服务器端渲染vue.js\n\n## 辅助工具\n\n1. [DejaVue](https://github.com/MiCottOn/DejaVue) - Vuejs可视化及压力测试\n2. [vue-generate-component](https://github.com/NetanelBasal/vue-generate-component) - 轻松生成Vue js组件的CLI工具\n3. [vscode-VueHelper](https://github.com/OYsun/vscode-VueHelper) - 目前vscode最好的vue代码提示插件\n4. [vue-play](https://github.com/vue-play/vue-play) - 展示Vue组件的最小化框架\n5. [VuejsStarterKit](https://github.com/MetinSeylan/VuejsStarterKit) - vuejs starter套件\n6. [vue-multipage-cli](https://github.com/xwpongithub/vue-multipage-cli) - 简单的多页CLI\n\n## 应用实例\n\n1. [pagekit](https://github.com/pagekit/pagekit) - 轻量级的CMS建站系统\n2. [vuedo](https://github.com/Vuedo/vuedo) - 博客平台\n3. [koel](https://github.com/phanan/koel) - 基于网络的个人音频流媒体服务\n4. [CMS-of-Blog](https://github.com/ycwalker/CMS-of-Blog) - 博客内容管理器\n5. [vue-cnode](https://github.com/lzxb/vue-cnode) - 重写vue版cnode社区\n6. [vue-ghpages-blog](https://github.com/viko16/vue-ghpages-blog) - 依赖GitHub Pages无需本地生成的静态博客\n7. [swoole-vue-webim](https://github.com/wh469012917/swoole-vue-webim) - Web版的聊天应用\n8. [fewords](https://github.com/sapjax/fewords) - 功能极其简单的笔记本\n9. [jackblog-vue](https://github.com/jackhutu/jackblog-vue) - 个人博客系统\n10. [vue-blog](https://github.com/surmon-china/vue-blog) - 使用Vue2.0 和Vuex的vue-blog\n11. [vue-dashing-js](https://github.com/thelinuxlich/vue-dashing-js) - nuvo-dashing-js的fork\n12. [rss-reader](https://github.com/mrgodhani/rss-reader) - 简单的rss阅读器\n\n## Demo示例\n\n1. [eleme](https://github.com/liangxiaojuan/eleme) - 高仿饿了么app商家详情\n2. [NeteaseCloudWebApp](https://github.com/javaSwing/NeteaseCloudWebApp) - 高仿网易云音乐的webapp\n3. [vue-zhihu-daily](https://github.com/hilongjw/vue-zhihu-daily) - 知乎日报 with Vuejs\n4. [Vue-cnodejs](https://github.com/shinygang/Vue-cnodejs) - 基于vue重写Cnodejs.org的webapp\n5. [vue2-demo](https://github.com/lzxb/vue2-demo) - 从零构建vue2 + vue-router + vuex 开发环境\n6. [vue-wechat](https://github.com/useryangtao/vue-wechat) - vue.js开发微信app界面\n7. [vue-music](https://github.com/Sioxas/vue-music) - Vue 音乐搜索播放\n8. [maizuo](https://github.com/zhengguorong/maizuo) - vue/vuex/redux仿卖座网\n9. [vue-demo](https://github.com/kenberkeley/vue-demo) - vue简易留言板\n10. [spa-starter-kit](https://github.com/codecasts/spa-starter-kit) - 单页应用启动套件\n11. [zhihudaily-vue](https://github.com/yatessss/zhihudaily-vue) - 知乎日报web版\n12. [douban](https://github.com/jiakeqi/douban) - 模仿豆瓣前端\n13. [vue-Meizi](https://github.com/liangxiaojuan/vue-Meizi) - vue最新实战项目\n14. [vue-demo-kugou](https://github.com/lavyun/vue-demo-kugou) - vuejs仿写酷狗音乐webapp\n15. [vue2.0-taopiaopiao](https://github.com/canfoo/vue2.0-taopiaopiao) - vue2.0与express构建淘票票页面\n16. [node-vue-server-webpack](https://github.com/yjj5855/node-vue-server-webpack) - Node.js+Vue.js+webpack快速开发框架\n17. [VueDemo_Sell_Eleme](https://github.com/SimonZhangITer/VueDemo_Sell_Eleme) - Vue2高仿饿了么外卖平台\n18. [vue-leancloud-blog](https://github.com/jiangjiu/vue-leancloud-blog) - 一个前后端完全分离的单页应用\n19. [vue-fis3](https://github.com/okoala/vue-fis3) - 流行开源工具集成demo\n20. [mi-by-vue](https://github.com/wendaosanshou/mi-by-vue) - VueJS仿小米官网\n21. [vue-demo-maizuo](https://github.com/ChuckCZC/vue-demo-maizuo) - 使用Vue2全家桶仿制卖座电影\n22. [vue2.x-douban](https://github.com/superman66/vue2.x-douban) - Vue2实现简易豆瓣电影webApp\n23. [vue-adminLte-vue-router](https://github.com/liujians/vue-adminLte-vue-router) - vue和adminLte整合应用\n24. [vue-zhihudaily](https://github.com/iHaPBoy/vue-zhihudaily) - 知乎日报 Web 版本\n25. [Zhihu-Daily-Vue.js](https://github.com/pomelo-chuan/Zhihu-Daily-Vue.js) - Vuejs单页网页应用\n26. [vue-axios-github](https://github.com/superman66/vue-axios-github) - 登录拦截登出功能\n27. [vue2.x-Cnode](https://github.com/vincentSea/vue2.x-Cnode) - 基于vue全家桶的Cnode社区\n28. [hello-vue-django](https://github.com/rokups/hello-vue-django) - 使用带有Django的vuejs的样板项目\n29. [websocket_chat](https://github.com/secreter/websocket_chat) - 基于vue和websocket的多人在线聊天室\n30. [x-blog](https://github.com/CommanderXL/x-blog) - 开源的个人blog项目\n31. [vue-cnode](https://github.com/wszgxa/vue-cnode) - vue单页应用demo\n32. [vue-express-mongodb](https://github.com/xrr2016/vue-express-mongodb) - 简单的前后端分离案例\n33. [photoShare](https://github.com/beidan/photoShare) - 基于图片分享的社交平台\n34. [notepad](https://github.com/lin-xin/notepad) - 本地存储的记事本\n35. [vue-zhihudaily-2.0](https://github.com/cs1707/vue-zhihudaily-2.0) - 使用Vue2.0+vue-router+vuex创建的zhihudaily\n36. [vueBlog](https://github.com/elva2596/vueBlog) - 前后端分离博客\n37. [Zhihu_Daily](https://github.com/littlewin-wang/Zhihu_Daily) - 基于Vue和Nodejs的Web单页应用\n38. [vue-ruby-china](https://github.com/hql123/vue-ruby-china) - VueJS框架搭建的rubychina平台\n39. [vue-koa-demo](https://github.com/Molunerfinn/vue-koa-demo) - 使用Vue2和Koa1的全栈demo\n40. [life-app-vue](https://github.com/shaqihe/life-app-vue) - 使用vue2完成多功能集合到小webapp\n41. [vue-trip](https://github.com/wenye123/vue-trip) - vue2做的出行webapp\n42. [github-explorer](https://github.com/SidKwok/github-explorer) - 寻找最有趣的GitHub库\n43. [vue-ssr-boilerplate](https://github.com/albertchan/vue-ssr-boilerplate) - 精简版的ofvue-hackernews-2\n44. [vue-bushishiren](https://github.com/nswbmw/vue-bushishiren) - 不是诗人应用\n45. [houtai](https://github.com/peng1992/houtai) - 基于vue和Element的后台管理系统\n46. [ios7-vue](https://github.com/QRL909109/ios7-vue) - 使用vue2.0 vue-router vuex模拟ios7\n47. [Framework7-VueJS](https://github.com/tyllo/Framework7-VueJS) - 使用移动框架的示例\n48. [cnode-vue](https://github.com/BubblyPoker/cnode-vue) - 基于vue和vue-router构建的cnodejs web网站SPA\n49. [vue-cli-multipage-bootstrap](https://github.com/zhoou/vue-cli-multipage-bootstrap) - 将vue官方在线示例整合到组件中\n50. [vue-cnode](https://github.com/jiananle/vue-cnode) - 用 Vue 做的 CNode 官网\n51. [seeMusic](https://github.com/Alex-xd/seeMusic) - 跨平台云音乐播放器\n52. [HyaReader](https://github.com/GitaiQAQ/HyaReader) - 移动友好的阅读器\n53. [zhihu-daily](https://github.com/xrr2016/zhihu-daily) - 轻松查看知乎日报内容\n54. [vue-cnode](https://github.com/Damonlw/vue-cnode) - 使用cNode社区提供的接口\n55. [zhihu-daily-vue](https://github.com/moonou/zhihu-daily-vue) - 知乎日报\n56. [vue-dropload](https://github.com/ITCNZ/vue-dropload) - 用以测试下拉加载与简单路由\n57. [vue-cnode-mobile](https://github.com/soulcm/vue-cnode-mobile) - 搭建cnode社区\n58. [Vuejs-SalePlatform](https://github.com/fishenal/Vuejs-SalePlatform) - vuejs搭建的售卖平台demo\n59. [vue-memo](https://github.com/youknowznm/vue-memo) - 用 vue写的记事本应用\n60. [sls-vuex2-demo](https://github.com/sailengsi/sls-vuex2-demo) - vuex2商城购物车demo\n61. [v-notes](https://github.com/Halfeld/v-notes) - 简单美观的记事本\n62. [vue-starter](https://github.com/BosNaufal/vue-starter) - VueJs项目的简单启动页","source":"_posts/Vue插件集合.md","raw":"---\ntitle: Vue插件集合\ncomments: true\ncategories:\n  - Vue\ntags:\n  - Vue\n  - Vue插件\nabbrlink: 4d08fea4\ndate: 2018-10-05 22:35:29\n---\n\n## UI组件\n\n### 框架\n\n1. [element](https://github.com/ElemeFE/element) - 饿了么出品的Vue2的web UI工具套件\n2. [mint-ui](https://github.com/ElemeFE/mint-ui) - Vue 2的移动UI元素\n3. [iview](https://github.com/iview/iview) - 基于 Vuejs 的开源 UI 组件库\n4. [Keen-UI](https://github.com/JosephusPaye/Keen-UI) - 轻量级的基本UI组件合集\n5. [vue-material](https://github.com/marcosmoura/vue-material) - 通过Vue Material和Vue 2建立精美的app应用\n6. [muse-ui](https://github.com/museui/muse-ui) - 三端样式一致的响应式 UI 库\n7. [vuetify](https://github.com/vuetifyjs/vuetify) - 为移动而生的Vue JS 2组件框架\n8. [vonic](https://github.com/wangdahoo/vonic) - 快速构建移动端单页应用\n9. [vue-blu](https://github.com/chenz24/vue-blu) - 帮助你轻松创建web应用\n10. [vue-multiselect](https://github.com/monterail/vue-multiselect) - Vue.js选择框解决方案\n11. [VueCircleMenu](https://github.com/OYsun/VueCircleMenu) - 漂亮的vue圆环菜单\n12. [vue-chat](https://github.com/Coffcer/vue-chat) - vuejs和vuex及webpack的聊天示例\n13. [radon-ui](https://github.com/luojilab/radon-ui) - 快速开发产品的Vue组件库\n14. [vue-waterfall](https://github.com/MopTym/vue-waterfall) - Vue.js的瀑布布局组件\n15. [vue-carbon](https://github.com/myronliu347/vue-carbon) - 基于 vue 开发MD风格的移动端\n16. [vue-beauty](https://github.com/FE-Driver/vue-beauty) - 由vue和ant design创建的优美UI组件\n17. [bootstrap-vue](https://github.com/pi0/bootstrap-vue) - 应用于Vuejs2的Twitter的Bootstrap 4组件\n18. [vueAdmin](https://github.com/taylorchen709/vueAdmin) - 基于vuejs2和element的简单的管理员模板\n19. [vue-ztree](https://github.com/lisiyizu/vue-ztree) - 用 vue 写的树层级组件\n20. [vue-tree](https://github.com/weibangtuo/vue-tree) - vue树视图组件\n21. [vue-tabs](https://github.com/alexqdjay/vue-tabs) - 多tab页轻型框架\n\n\n\n### 编辑器\n\n1. [markcook](https://github.com/jrainlau/markcook) - 好看的markdown编辑器\n2. [eme](https://github.com/egoist/eme) - 优雅的Markdown编辑器\n3. [vue-syntax-highlight](https://github.com/vuejs/vue-syntax-highlight) - Sublime Text语法高亮\n4. [vue-quill-editor](https://github.com/surmon-china/vue-quill-editor) - 基于Quill适用于Vue2的富文本编辑器\n5. [Vueditor](https://github.com/hifarer/Vueditor) - 所见即所得的编辑器\n6. [vue-html5-editor](https://github.com/PeakTai/vue-html5-editor) - html5所见即所得编辑器\n7. [vue2-editor](https://github.com/davidroyer/vue2-editor) - HTML编辑器\n8. [vue-simplemde](https://github.com/F-loat/vue-simplemde) - VueJS的Markdown编辑器组件\n9. [vue-quill](https://github.com/CroudSupport/vue-quill) - vue组件构建quill编辑器\n\n### slider\n\n1. [vue-awesome-swiper](https://github.com/surmon-china/vue-awesome-swiper) - vue.js触摸滑动组件\n2. [vue-slick](https://github.com/staskjs/vue-slick) - 实现流畅轮播框的vue组件\n3. [vue-swipe](https://github.com/ElemeFE/vue-swipe) - VueJS触摸滑块\n4. [vue-swiper](https://github.com/weilao/vue-swiper) - 易于使用的滑块组件\n5. [vue-images](https://github.com/littlewin-wang/vue-images) - 显示一组图片的lightbox组件\n6. [vue-carousel-3d](https://github.com/Wlada/vue-carousel-3d) - VueJS的3D轮播组件\n7. [vue-slide](https://github.com/hilongjw/vue-slide) - vue轻量级滑动组件\n8. [vue-slider](https://github.com/warpcgd/vue-slider) - vue 滑动组件\n9. [vue-m-carousel](https://github.com/shiye515/vue-m-carousel) - vue 移动端轮播组件\n10. [dd-vue-component](https://github.com/ibufu/dd-vue-component) - 订单来了的公共组件库\n11. [vue-easy-slider](https://github.com/shhdgit/vue-easy-slider) - Vue 2.x的滑块组件\n\n### 图表\n\n1. [vue-table](https://github.com/ratiw/vue-table) - 简化数据表格\n2. [vue-chartjs](https://github.com/apertureless/vue-chartjs) - vue中的Chartjs的封装\n3. [vue-charts](https://github.com/hchstera/vue-charts) - 轻松渲染一个图表\n4. [vue-chart](https://github.com/miaolz123/vue-chart) - 强大的高速的vue图表解析\n5. [vue-highcharts](https://github.com/weizhenye/vue-highcharts) - HighCharts组件\n6. [chartjs](https://github.com/vue-bulma/chartjs) - Vue Bulma的chartjs组件\n7. [vue-chartkick](https://github.com/ankane/vue-chartkick) - VueJS一行代码实现优美图表\n\n### 日历\n\n1. [vue-calendar](https://github.com/jinzhe/vue-calendar) - 日期选择插件\n2. [vue-datepicker](https://github.com/hilongjw/vue-datepicker) - 日历和日期选择组件\n3. [vue-datetime-picker](https://github.com/Haixing-Hu/vue-datetime-picker) - 日期时间选择控件\n4. [vue2-calendar](https://github.com/icai/vue2-calendar) - 支持lunar和日期事件的日期选择器\n5. [vue-fullcalendar](https://github.com/Wanderxx/vue-fullcalendar) - 基于vue.js的全日历组件\n6. [vue-datepicker](https://github.com/weifeiyue/vue-datepicker) - 漂亮的Vue日期选择器组件\n7. [datepicker](https://github.com/vue-bulma/datepicker) - 基于flatpickr的时间选择组件\n8. [vue2-timepicker](https://github.com/phoenixwong/vue2-timepicker) - 下拉时间选择器\n9. [vue-date-picker](https://github.com/Bubblings/vue-date-picker) - VueJS日期选择器组件\n10. [vue-datepicker-simple](https://github.com/dai-siki/vue-datepicker-simple) - 基于vue的日期选择器\n\n### 地址选择\n\n1. [vue-city](https://github.com/xinxingyu/vue-city) - 城市选择器\n2. [vue-region-picker](https://github.com/QingWei-Li/vue-region-picker) - 选择中国的省份市和地区\n\n### 地图\n\n1. [vue-amap](https://github.com/ElemeFE/vue-amap) - 基于Vue 2和高德地图的地图组件\n2. [vue-google-maps](https://github.com/GuillaumeLeclerc/vue-google-maps) - 带有双向数据绑定Google地图组件\n3. [vue-baidu-map](https://github.com/Dafrok/vue-baidu-map)- 基于 Vue 2的百度地图组件库\n4. [vue-cmap](https://github.com/doodlewind/vue-cmap) - Vue China map可视化组件\n\n### 播放器\n\n1. [vue-video-player](https://github.com/surmon-china/vue-video-player) - VueJS视频及直播播放器\n2. [vue-video](https://github.com/hilongjw/vue-video) - Vue.js的HTML5视频播放器\n3. [vue-music-master](https://github.com/yunyi1895/vue-music-master) - vue手机端网页音乐播放器\n\n### 滚动scroll\n\n1. [vue-scroller](https://github.com/wangdahoo/vue-scroller) - Vonic UI的功能性组件\n2. [vue-mugen-scroll](https://github.com/egoist/vue-mugen-scroll) - 无限滚动组件\n3. [vue-infinite-loading](https://github.com/PeachScript/vue-infinite-loading) - VueJS的无限滚动插件\n4. [vue-virtual-scroller](https://github.com/Akryum/vue-virtual-scroller) - 带任意数目数据的顺畅的滚动\n5. [vue-infinite-scroll](https://github.com/ElemeFE/vue-infinite-scroll) - VueJS的无限滚动指令\n6. [vue-scrollbar](https://github.com/BosNaufal/vue-scrollbar) - 最简单的滚动区域组件\n7. [vue-scroll](https://github.com/suguangwen/vue-scroll) - vue滚动\n8. [vue-pull-to-refresh](https://github.com/bajian/vue-pull-to-refresh) - Vue2的上拉下拉\n9. [mint-loadmore](https://github.com/mint-ui/mint-loadmore) - VueJS的双向下拉刷新组件\n10. [vue-smoothscroll](https://github.com/Teddy-Zhu/vue-smoothscroll) - smoothscroll的VueJS版本\n\n### 文件上传\n\n1. [vue-upload-component](https://github.com/lian-yue/vue-upload-component) - Vuejs文件上传组件\n2. [vue-core-image-upload](https://github.com/Vanthink-UED/vue-core-image-upload) - 轻量级的vue上传插件\n3. [vue-dropzone](https://github.com/rowanwins/vue-dropzone) - 用于文件上传的Vue组件\n\n### 图片处理\n\n1. [vue-lazyload-img](https://github.com/JALBAA/vue-lazyload-img) - 移动优化的vue图片懒加载插件\n2. [vue-image-crop-upload](https://github.com/dai-siki/vue-image-crop-upload) - vue图片剪裁上传组件\n3. [vue-svgicon](https://github.com/MMF-FE/vue-svgicon) - 创建svg图标组件的工具\n4. [vue-img-loader](https://github.com/JackGit/vue-img-loader) - 图片加载UI组件\n5. [vue-image-clip](https://github.com/legeneek/vue-image-clip)- 基于vue的图像剪辑组件\n6. [vue-progressive-image](https://github.com/MatteoGabriele/vue-progressive-image) - Vue的渐进图像加载插件\n\n### 提示\n\n1. [vue-toast-mobile](https://github.com/ElemeFE/vue-toast-mobile) - VueJS的toast插件\n2. [vue-msgbox](https://github.com/ElemeFE/vue-msgbox) - vuejs的消息框\n3. [vue-tooltip](https://github.com/Akryum/vue-tooltip) - 带绑定信息提示的提示工具\n4. [vue-verify-pop](https://github.com/aweiu/vue-verify-pop) - 带气泡提示的vue校验插件\n\n### 进度条\n\n1. [vue-radial-progress](https://github.com/wyzant-dev/vue-radial-progress) - Vue.js放射性进度条组件\n2. [vue-progressbar](https://github.com/hilongjw/vue-progressbar) - vue轻量级进度条\n3. [vue2-loading-bar](https://github.com/BosNaufal/vue2-loading-bar) - 最简单的仿Youtube加载条视图\n\n### 其他\n\n1. [vue-dragging](https://github.com/hilongjw/vue-dragging)- 使元素可以拖拽\n2. [Vue.Draggable](https://github.com/David-Desmaisons/Vue.Draggable)- 实现拖放和视图模型数组同步\n3. [vue-picture-input](https://github.com/alessiomaffeis/vue-picture-input)- 移动友好的图片文件输入组件\n4. [rubik](https://github.com/ccforward/rubik)- 基于Vuejs2的开源 UI 组件库\n5. [VueStar](https://github.com/OYsun/VueStar)- 带星星动画的vue点赞按钮\n6. [vue-tables-2](https://github.com/matfish2/vue-tables-2)- 显示数据的bootstrap样式网格\n7. [DataVisualization](https://github.com/SimonZhangITer/DataVisualization)- 数据可视化\n8. [vue-drag-and-drop-list](https://github.com/Alex-fun/vue-drag-and-drop-list)- 创建排序列表的Vue指令\n9. [vuwe](https://github.com/vuwe/vuwe)- 基于微信WeUI所开发的专用于Vue2的组件库\n10. [vue-typer](https://github.com/cngu/vue-typer)- 模拟用户输入选择和删除文本的Vue组件\n11. [vue-impression](https://github.com/NewDadaFE/vue-impression)- 移动Vuejs2 UI元素\n12. [vue-datatable](https://github.com/galenyuan/vue-datatable)- 使用Vuejs创建的DataTableView\n13. [vue-instant](https://github.com/santiblanko/vue-instant)- 轻松创建自动提示的自定义搜索控件\n14. [vue-slider-component](https://github.com/NightCatSama/vue-slider-component)- 在vue1和vue2中使用滑块\n15. [vue-touch-ripple](https://github.com/surmon-china/vue-touch-ripple)- vuejs的触摸ripple组件\n16. [coffeebreak](https://github.com/Kocisov/coffeebreak)- 实时编辑CSS组件工具\n17. [vue-datasource](https://github.com/coderdiaz/vue-datasource)- 创建VueJS动态表格\n18. [handsontable](https://github.com/vue-bulma/handsontable)- 网页表格组件\n19. [vue-bootstrap-table](https://github.com/jbaysolutions/vue-bootstrap-table)- 可排序可检索的表格\n20. [vue-google-signin-button](https://github.com/phanan/vue-google-signin-button)- 导入谷歌登录按钮\n21. [vue-float-label](https://github.com/bkzl/vue-float-label)- VueJS浮动标签模式\n22. [vue-tagsinput](https://github.com/Ginhing/vue-tagsinput)- 基于VueJS的标签组件\n23. [vue-social-sharing](https://github.com/nicolasbeauvais/vue-social-sharing)- 社交分享组件\n24. [vue-popup-mixin](https://github.com/myronliu347/vue-popup-mixin)- 用于管理弹出框的遮盖层\n25. [cubeex](https://github.com/fangyongbao/cubeex)- 包含一套完整的移动UI\n26. [vue-fullcalendar](https://github.com/CroudSupport/vue-fullcalendar)- vue FullCalendar封装\n27. [vue-material-design](https://github.com/loujiayu/vue-material-design)- Vue MD风格组件\n28. [vue-morris](https://github.com/bbonnin/vue-morris)- Vuejs组件封装Morrisjs库\n29. [we-vue](https://github.com/tianyong90/we-vue)- Vue2及weui1开发的组件\n30. [vue-form-2](https://github.com/matfish2/vue-form-2)- 全面的HTML表单管理的解决方案\n31. [vue-side-nav](https://github.com/vue-comps/vue-side-nav)- 响应式的侧边导航\n32. [mint-indicator](https://github.com/mint-ui/mint-indicator)- VueJS移动加载指示器插件\n33. [vue-ripple](https://github.com/BosNaufal/vue-ripple)- 制作谷歌MD风格涟漪效果的Vue组件\n34. [vue-touch-keyboard](https://github.com/icebob/vue-touch-keyboard)- VueJS虚拟键盘组件\n35. [vue-parallax](https://github.com/vue-comps/vue-parallax)- 整洁的视觉效果\n36. [vue-typewriter](https://github.com/eduardostuart/vue-typewriter)- vue组件类型\n37. [vue-ios-alertview](https://github.com/Treri/vue-ios-alertview)- iOS7+ 风格的alertview服务\n38. [paco-ui-vue](https://github.com/yeseason/paco-ui-vue)- PACOUI的vue组件\n39. [vue-button](https://github.com/steven5538/vue-button)- Vue按钮组件\n\n## 开发框架\n\n1. [vue.js](https://github.com/vuejs/vue) - 流行的轻量高效的前端组件化方案\n2. [vue-admin](https://github.com/fundon/vue-admin) - Vue管理面板框架\n3. [electron-vue](https://github.com/SimulatedGREG/electron-vue) - Electron及VueJS快速启动样板\n4. [vue-2.0-boilerplate](https://github.com/petervmeijgaard/vue-2.0-boilerplate) - Vue2单页应用样板\n5. [vue-webgulp](https://github.com/rodzzlessa24/vue-webgulp) - 仿VueJS Vue loader示例\n6. [vue-bulma](https://github.com/wangxg2016/vue-bulma) - 轻量级高性能MVVM Admin UI框架\n7. [vue-spa-template](https://github.com/hanan198501/vue-spa-template) - 前后端分离后的单页应用开发\n8. [Framework7-Vue](https://github.com/nolimits4web/Framework7-Vue) - VueJS与Framework7结合\n9. [vue-element-starter](https://github.com/Metnew/vue-element-starter) - vue启动页\n\n## 实用库\n\n1. [vuelidate](https://github.com/monterail/vuelidate) - 简单轻量级的基于模块的Vue.js验证\n2. [qingcheng](https://github.com/zerqu/qingcheng) - qingcheng主题\n3. [vuex](https://github.com/vuejs/vuex) - 专为 Vue.js 应用程序开发的状态管理模式\n4. [vue-axios](https://github.com/imcvampire/vue-axios) - 将axios整合到VueJS的封装\n5. [vue-desktop](https://github.com/ElemeFE/vue-desktop) - 创建管理面板网站的UI库\n6. [vue-meta](https://github.com/declandewet/vue-meta) - 管理app的meta信息\n7. [avoriaz](https://github.com/eddyerburgh/avoriaz) - VueJS测试实用工具库\n8. [vue-framework7](https://github.com/lmk123/vue-framework7) - 结合VueJS使用的Framework7组件\n9. [vue-lazy-render](https://github.com/yeyuqiudeng/vue-lazy-render) - 用于Vue组件的延迟渲染\n10. [vue-svg-icon](https://github.com/cenkai88/vue-svg-icon) - vue2的可变彩色svg图标方案\n11. [vue-online](https://github.com/Sopamo/vue-online) - reactive的在线和离线组件\n12. [vue-password-strength-meter](https://github.com/apertureless/vue-password-strength-meter) - 交互式密码强度计\n13. [vuep](https://github.com/QingWei-Li/vuep) - 用实时编辑和预览来渲染Vue组件\n14. [vue-bootstrap-modal](https://github.com/Coffcer/vue-bootstrap-modal) - vue的Bootstrap样式组件\n15. [element-admin](https://github.com/lynzz/element-admin) - 支持 vuecli 的 Element UI 的后台模板\n16. [vue-shortkey](https://github.com/iFgR/vue-shortkey) - 应用于Vue.js的Vue-ShortKey 插件\n17. [cleave](https://github.com/vue-bulma/cleave) - 基于cleave.js的Cleave组件\n18. [vue-events](https://github.com/cklmercer/vue-events) - 简化事件的VueJS插件\n19. [http-vue-loader](https://github.com/FranckFreiburger/http-vue-loader) - 从html及js环境加载vue文件\n20. [vue-electron](https://github.com/SimulatedGREG/vue-electron) - 将选择的API封装到Vue对象中的插件\n21. [vue-router-transition](https://github.com/weinot/vue-router-transition) - 页面过渡插件\n22. [vuemit](https://github.com/gocanto/vuemit) - 处理VueJS事件\n23. [vue-cordova](https://github.com/kartsims/vue-cordova) - Cordova的VueJS插件\n24. [vue-qart](https://github.com/superman66/vue-qart) - 用于qartjs的Vue2指令\n25. [vue-websocket](https://github.com/icebob/vue-websocket) - VueJS的Websocket插件\n26. [vue-gesture](https://github.com/mlyknown/vue-gesture) - VueJS的手势事件插件\n27. [vue-local-storage](https://github.com/pinguinjkeke/vue-local-storage) - 具有类型支持的Vuejs本地储存插件\n28. [lazy-vue](https://github.com/gocanto/lazy-vue) - 懒加载图片\n29. [vue-lazyloadImg](https://github.com/yodfz/vue-lazyloadImg) - 图片懒加载插件\n30. [vue-bus](https://github.com/yangmingshan/vue-bus) - VueJS的事件总线\n31. [vue-observe-visibility](https://github.com/Akryum/vue-observe-visibility) - 当元素在页面上可见或隐藏时检测\n32. [vue-notifications](https://github.com/se-panfilov/vue-notifications) - 非阻塞通知库\n33. [v-media-query](https://github.com/AStaroverov/v-media-query) - vue中添加用于配合媒体查询的方法\n34. [vuex-shared-mutations](https://github.com/xanf/vuex-shared-mutations) - 分享某种Vuex mutations\n35. [vue-lazy-component](https://github.com/Coffcer/vue-lazy-component) - 懒加载组件或者元素的Vue指令\n36. [vue-reactive-storage](https://github.com/ropbla9/vue-reactive-storage) - vue插件的Reactive层\n37. [vue-ts-loader](https://github.com/HerringtonDarkholme/vue-ts-loader) - 在Vue装载机检查脚本\n38. [vue-pagination-2](https://github.com/matfish2/vue-pagination-2) - 简单通用的分页组件\n39. [vuex-i18n](https://github.com/dkfbasel/vuex-i18n) - 定位插件\n40. [Vue.resize](https://github.com/David-Desmaisons/Vue.resize) - 检测HTML调整大小事件的vue指令\n41. [vue-zoombox](https://github.com/vue-comps/vue-zoombox) - 一个高级zoombox\n42. [leo-vue-validator](https://github.com/LeoHuiyi/leo-vue-validator) - 异步的表单验证组件\n43. [modal](https://github.com/vue-bulma/modal) - Vue Bulma的modal组件\n44. [Famous-Vue](https://github.com/irwansyahwii/Famous-Vue) - Famous库的vue组件\n45. [vue-input-autosize](https://github.com/syropian/vue-input-autosize) - 基于内容自动调整文本输入的大小\n46. [vue-file-base64](https://github.com/BosNaufal/vue-file-base64) - 将文件转换为Base64的vue组件\n47. [Vue-Easy-Validator](https://github.com/MetinSeylan/Vue-Easy-Validator) - 简单的表单验证\n48. [vue-truncate-filter](https://github.com/imcvampire/vue-truncate-filter) - 截断字符串的VueJS过滤器\n\n## 服务端\n\n1. [vue-ssr](https://github.com/hilongjw/vue-ssr) - 结合Express使用Vue2服务端渲染\n2. [nuxt.js](https://github.com/nuxt/nuxt.js) - 用于服务器渲染Vue app的最小化框架\n3. [vue-ssr](https://github.com/ccforward/vue-ssr) - 非常简单的VueJS服务器端渲染模板\n4. [vue-easy-renderer](https://github.com/leaves4j/vue-easy-renderer) - Nodejs服务端渲染\n5. [express-vue](https://github.com/danmademe/express-vue) - 简单的使用服务器端渲染vue.js\n\n## 辅助工具\n\n1. [DejaVue](https://github.com/MiCottOn/DejaVue) - Vuejs可视化及压力测试\n2. [vue-generate-component](https://github.com/NetanelBasal/vue-generate-component) - 轻松生成Vue js组件的CLI工具\n3. [vscode-VueHelper](https://github.com/OYsun/vscode-VueHelper) - 目前vscode最好的vue代码提示插件\n4. [vue-play](https://github.com/vue-play/vue-play) - 展示Vue组件的最小化框架\n5. [VuejsStarterKit](https://github.com/MetinSeylan/VuejsStarterKit) - vuejs starter套件\n6. [vue-multipage-cli](https://github.com/xwpongithub/vue-multipage-cli) - 简单的多页CLI\n\n## 应用实例\n\n1. [pagekit](https://github.com/pagekit/pagekit) - 轻量级的CMS建站系统\n2. [vuedo](https://github.com/Vuedo/vuedo) - 博客平台\n3. [koel](https://github.com/phanan/koel) - 基于网络的个人音频流媒体服务\n4. [CMS-of-Blog](https://github.com/ycwalker/CMS-of-Blog) - 博客内容管理器\n5. [vue-cnode](https://github.com/lzxb/vue-cnode) - 重写vue版cnode社区\n6. [vue-ghpages-blog](https://github.com/viko16/vue-ghpages-blog) - 依赖GitHub Pages无需本地生成的静态博客\n7. [swoole-vue-webim](https://github.com/wh469012917/swoole-vue-webim) - Web版的聊天应用\n8. [fewords](https://github.com/sapjax/fewords) - 功能极其简单的笔记本\n9. [jackblog-vue](https://github.com/jackhutu/jackblog-vue) - 个人博客系统\n10. [vue-blog](https://github.com/surmon-china/vue-blog) - 使用Vue2.0 和Vuex的vue-blog\n11. [vue-dashing-js](https://github.com/thelinuxlich/vue-dashing-js) - nuvo-dashing-js的fork\n12. [rss-reader](https://github.com/mrgodhani/rss-reader) - 简单的rss阅读器\n\n## Demo示例\n\n1. [eleme](https://github.com/liangxiaojuan/eleme) - 高仿饿了么app商家详情\n2. [NeteaseCloudWebApp](https://github.com/javaSwing/NeteaseCloudWebApp) - 高仿网易云音乐的webapp\n3. [vue-zhihu-daily](https://github.com/hilongjw/vue-zhihu-daily) - 知乎日报 with Vuejs\n4. [Vue-cnodejs](https://github.com/shinygang/Vue-cnodejs) - 基于vue重写Cnodejs.org的webapp\n5. [vue2-demo](https://github.com/lzxb/vue2-demo) - 从零构建vue2 + vue-router + vuex 开发环境\n6. [vue-wechat](https://github.com/useryangtao/vue-wechat) - vue.js开发微信app界面\n7. [vue-music](https://github.com/Sioxas/vue-music) - Vue 音乐搜索播放\n8. [maizuo](https://github.com/zhengguorong/maizuo) - vue/vuex/redux仿卖座网\n9. [vue-demo](https://github.com/kenberkeley/vue-demo) - vue简易留言板\n10. [spa-starter-kit](https://github.com/codecasts/spa-starter-kit) - 单页应用启动套件\n11. [zhihudaily-vue](https://github.com/yatessss/zhihudaily-vue) - 知乎日报web版\n12. [douban](https://github.com/jiakeqi/douban) - 模仿豆瓣前端\n13. [vue-Meizi](https://github.com/liangxiaojuan/vue-Meizi) - vue最新实战项目\n14. [vue-demo-kugou](https://github.com/lavyun/vue-demo-kugou) - vuejs仿写酷狗音乐webapp\n15. [vue2.0-taopiaopiao](https://github.com/canfoo/vue2.0-taopiaopiao) - vue2.0与express构建淘票票页面\n16. [node-vue-server-webpack](https://github.com/yjj5855/node-vue-server-webpack) - Node.js+Vue.js+webpack快速开发框架\n17. [VueDemo_Sell_Eleme](https://github.com/SimonZhangITer/VueDemo_Sell_Eleme) - Vue2高仿饿了么外卖平台\n18. [vue-leancloud-blog](https://github.com/jiangjiu/vue-leancloud-blog) - 一个前后端完全分离的单页应用\n19. [vue-fis3](https://github.com/okoala/vue-fis3) - 流行开源工具集成demo\n20. [mi-by-vue](https://github.com/wendaosanshou/mi-by-vue) - VueJS仿小米官网\n21. [vue-demo-maizuo](https://github.com/ChuckCZC/vue-demo-maizuo) - 使用Vue2全家桶仿制卖座电影\n22. [vue2.x-douban](https://github.com/superman66/vue2.x-douban) - Vue2实现简易豆瓣电影webApp\n23. [vue-adminLte-vue-router](https://github.com/liujians/vue-adminLte-vue-router) - vue和adminLte整合应用\n24. [vue-zhihudaily](https://github.com/iHaPBoy/vue-zhihudaily) - 知乎日报 Web 版本\n25. [Zhihu-Daily-Vue.js](https://github.com/pomelo-chuan/Zhihu-Daily-Vue.js) - Vuejs单页网页应用\n26. [vue-axios-github](https://github.com/superman66/vue-axios-github) - 登录拦截登出功能\n27. [vue2.x-Cnode](https://github.com/vincentSea/vue2.x-Cnode) - 基于vue全家桶的Cnode社区\n28. [hello-vue-django](https://github.com/rokups/hello-vue-django) - 使用带有Django的vuejs的样板项目\n29. [websocket_chat](https://github.com/secreter/websocket_chat) - 基于vue和websocket的多人在线聊天室\n30. [x-blog](https://github.com/CommanderXL/x-blog) - 开源的个人blog项目\n31. [vue-cnode](https://github.com/wszgxa/vue-cnode) - vue单页应用demo\n32. [vue-express-mongodb](https://github.com/xrr2016/vue-express-mongodb) - 简单的前后端分离案例\n33. [photoShare](https://github.com/beidan/photoShare) - 基于图片分享的社交平台\n34. [notepad](https://github.com/lin-xin/notepad) - 本地存储的记事本\n35. [vue-zhihudaily-2.0](https://github.com/cs1707/vue-zhihudaily-2.0) - 使用Vue2.0+vue-router+vuex创建的zhihudaily\n36. [vueBlog](https://github.com/elva2596/vueBlog) - 前后端分离博客\n37. [Zhihu_Daily](https://github.com/littlewin-wang/Zhihu_Daily) - 基于Vue和Nodejs的Web单页应用\n38. [vue-ruby-china](https://github.com/hql123/vue-ruby-china) - VueJS框架搭建的rubychina平台\n39. [vue-koa-demo](https://github.com/Molunerfinn/vue-koa-demo) - 使用Vue2和Koa1的全栈demo\n40. [life-app-vue](https://github.com/shaqihe/life-app-vue) - 使用vue2完成多功能集合到小webapp\n41. [vue-trip](https://github.com/wenye123/vue-trip) - vue2做的出行webapp\n42. [github-explorer](https://github.com/SidKwok/github-explorer) - 寻找最有趣的GitHub库\n43. [vue-ssr-boilerplate](https://github.com/albertchan/vue-ssr-boilerplate) - 精简版的ofvue-hackernews-2\n44. [vue-bushishiren](https://github.com/nswbmw/vue-bushishiren) - 不是诗人应用\n45. [houtai](https://github.com/peng1992/houtai) - 基于vue和Element的后台管理系统\n46. [ios7-vue](https://github.com/QRL909109/ios7-vue) - 使用vue2.0 vue-router vuex模拟ios7\n47. [Framework7-VueJS](https://github.com/tyllo/Framework7-VueJS) - 使用移动框架的示例\n48. [cnode-vue](https://github.com/BubblyPoker/cnode-vue) - 基于vue和vue-router构建的cnodejs web网站SPA\n49. [vue-cli-multipage-bootstrap](https://github.com/zhoou/vue-cli-multipage-bootstrap) - 将vue官方在线示例整合到组件中\n50. [vue-cnode](https://github.com/jiananle/vue-cnode) - 用 Vue 做的 CNode 官网\n51. [seeMusic](https://github.com/Alex-xd/seeMusic) - 跨平台云音乐播放器\n52. [HyaReader](https://github.com/GitaiQAQ/HyaReader) - 移动友好的阅读器\n53. [zhihu-daily](https://github.com/xrr2016/zhihu-daily) - 轻松查看知乎日报内容\n54. [vue-cnode](https://github.com/Damonlw/vue-cnode) - 使用cNode社区提供的接口\n55. [zhihu-daily-vue](https://github.com/moonou/zhihu-daily-vue) - 知乎日报\n56. [vue-dropload](https://github.com/ITCNZ/vue-dropload) - 用以测试下拉加载与简单路由\n57. [vue-cnode-mobile](https://github.com/soulcm/vue-cnode-mobile) - 搭建cnode社区\n58. [Vuejs-SalePlatform](https://github.com/fishenal/Vuejs-SalePlatform) - vuejs搭建的售卖平台demo\n59. [vue-memo](https://github.com/youknowznm/vue-memo) - 用 vue写的记事本应用\n60. [sls-vuex2-demo](https://github.com/sailengsi/sls-vuex2-demo) - vuex2商城购物车demo\n61. [v-notes](https://github.com/Halfeld/v-notes) - 简单美观的记事本\n62. [vue-starter](https://github.com/BosNaufal/vue-starter) - VueJs项目的简单启动页","slug":"Vue插件集合","published":1,"updated":"2020-05-18T16:35:00.480Z","layout":"post","photos":[],"link":"","_id":"cl78qfor1007dqic95ykp0hgw","content":"<h2 id=\"UI组件\"><a href=\"#UI组件\" class=\"headerlink\" title=\"UI组件\"></a>UI组件</h2><h3 id=\"框架\"><a href=\"#框架\" class=\"headerlink\" title=\"框架\"></a>框架</h3><ol>\n<li><a href=\"https://github.com/ElemeFE/element\" target=\"_blank\" rel=\"noopener\">element</a> - 饿了么出品的Vue2的web UI工具套件</li>\n<li><a href=\"https://github.com/ElemeFE/mint-ui\" target=\"_blank\" rel=\"noopener\">mint-ui</a> - Vue 2的移动UI元素</li>\n<li><a href=\"https://github.com/iview/iview\" target=\"_blank\" rel=\"noopener\">iview</a> - 基于 Vuejs 的开源 UI 组件库</li>\n<li><a href=\"https://github.com/JosephusPaye/Keen-UI\" target=\"_blank\" rel=\"noopener\">Keen-UI</a> - 轻量级的基本UI组件合集</li>\n<li><a href=\"https://github.com/marcosmoura/vue-material\" target=\"_blank\" rel=\"noopener\">vue-material</a> - 通过Vue Material和Vue 2建立精美的app应用</li>\n<li><a href=\"https://github.com/museui/muse-ui\" target=\"_blank\" rel=\"noopener\">muse-ui</a> - 三端样式一致的响应式 UI 库</li>\n<li><a href=\"https://github.com/vuetifyjs/vuetify\" target=\"_blank\" rel=\"noopener\">vuetify</a> - 为移动而生的Vue JS 2组件框架</li>\n<li><a href=\"https://github.com/wangdahoo/vonic\" target=\"_blank\" rel=\"noopener\">vonic</a> - 快速构建移动端单页应用</li>\n<li><a href=\"https://github.com/chenz24/vue-blu\" target=\"_blank\" rel=\"noopener\">vue-blu</a> - 帮助你轻松创建web应用</li>\n<li><a href=\"https://github.com/monterail/vue-multiselect\" target=\"_blank\" rel=\"noopener\">vue-multiselect</a> - Vue.js选择框解决方案</li>\n<li><a href=\"https://github.com/OYsun/VueCircleMenu\" target=\"_blank\" rel=\"noopener\">VueCircleMenu</a> - 漂亮的vue圆环菜单</li>\n<li><a href=\"https://github.com/Coffcer/vue-chat\" target=\"_blank\" rel=\"noopener\">vue-chat</a> - vuejs和vuex及webpack的聊天示例</li>\n<li><a href=\"https://github.com/luojilab/radon-ui\" target=\"_blank\" rel=\"noopener\">radon-ui</a> - 快速开发产品的Vue组件库</li>\n<li><a href=\"https://github.com/MopTym/vue-waterfall\" target=\"_blank\" rel=\"noopener\">vue-waterfall</a> - Vue.js的瀑布布局组件</li>\n<li><a href=\"https://github.com/myronliu347/vue-carbon\" target=\"_blank\" rel=\"noopener\">vue-carbon</a> - 基于 vue 开发MD风格的移动端</li>\n<li><a href=\"https://github.com/FE-Driver/vue-beauty\" target=\"_blank\" rel=\"noopener\">vue-beauty</a> - 由vue和ant design创建的优美UI组件</li>\n<li><a href=\"https://github.com/pi0/bootstrap-vue\" target=\"_blank\" rel=\"noopener\">bootstrap-vue</a> - 应用于Vuejs2的Twitter的Bootstrap 4组件</li>\n<li><a href=\"https://github.com/taylorchen709/vueAdmin\" target=\"_blank\" rel=\"noopener\">vueAdmin</a> - 基于vuejs2和element的简单的管理员模板</li>\n<li><a href=\"https://github.com/lisiyizu/vue-ztree\" target=\"_blank\" rel=\"noopener\">vue-ztree</a> - 用 vue 写的树层级组件</li>\n<li><a href=\"https://github.com/weibangtuo/vue-tree\" target=\"_blank\" rel=\"noopener\">vue-tree</a> - vue树视图组件</li>\n<li><a href=\"https://github.com/alexqdjay/vue-tabs\" target=\"_blank\" rel=\"noopener\">vue-tabs</a> - 多tab页轻型框架</li>\n</ol>\n<h3 id=\"编辑器\"><a href=\"#编辑器\" class=\"headerlink\" title=\"编辑器\"></a>编辑器</h3><ol>\n<li><a href=\"https://github.com/jrainlau/markcook\" target=\"_blank\" rel=\"noopener\">markcook</a> - 好看的markdown编辑器</li>\n<li><a href=\"https://github.com/egoist/eme\" target=\"_blank\" rel=\"noopener\">eme</a> - 优雅的Markdown编辑器</li>\n<li><a href=\"https://github.com/vuejs/vue-syntax-highlight\" target=\"_blank\" rel=\"noopener\">vue-syntax-highlight</a> - Sublime Text语法高亮</li>\n<li><a href=\"https://github.com/surmon-china/vue-quill-editor\" target=\"_blank\" rel=\"noopener\">vue-quill-editor</a> - 基于Quill适用于Vue2的富文本编辑器</li>\n<li><a href=\"https://github.com/hifarer/Vueditor\" target=\"_blank\" rel=\"noopener\">Vueditor</a> - 所见即所得的编辑器</li>\n<li><a href=\"https://github.com/PeakTai/vue-html5-editor\" target=\"_blank\" rel=\"noopener\">vue-html5-editor</a> - html5所见即所得编辑器</li>\n<li><a href=\"https://github.com/davidroyer/vue2-editor\" target=\"_blank\" rel=\"noopener\">vue2-editor</a> - HTML编辑器</li>\n<li><a href=\"https://github.com/F-loat/vue-simplemde\" target=\"_blank\" rel=\"noopener\">vue-simplemde</a> - VueJS的Markdown编辑器组件</li>\n<li><a href=\"https://github.com/CroudSupport/vue-quill\" target=\"_blank\" rel=\"noopener\">vue-quill</a> - vue组件构建quill编辑器</li>\n</ol>\n<h3 id=\"slider\"><a href=\"#slider\" class=\"headerlink\" title=\"slider\"></a>slider</h3><ol>\n<li><a href=\"https://github.com/surmon-china/vue-awesome-swiper\" target=\"_blank\" rel=\"noopener\">vue-awesome-swiper</a> - vue.js触摸滑动组件</li>\n<li><a href=\"https://github.com/staskjs/vue-slick\" target=\"_blank\" rel=\"noopener\">vue-slick</a> - 实现流畅轮播框的vue组件</li>\n<li><a href=\"https://github.com/ElemeFE/vue-swipe\" target=\"_blank\" rel=\"noopener\">vue-swipe</a> - VueJS触摸滑块</li>\n<li><a href=\"https://github.com/weilao/vue-swiper\" target=\"_blank\" rel=\"noopener\">vue-swiper</a> - 易于使用的滑块组件</li>\n<li><a href=\"https://github.com/littlewin-wang/vue-images\" target=\"_blank\" rel=\"noopener\">vue-images</a> - 显示一组图片的lightbox组件</li>\n<li><a href=\"https://github.com/Wlada/vue-carousel-3d\" target=\"_blank\" rel=\"noopener\">vue-carousel-3d</a> - VueJS的3D轮播组件</li>\n<li><a href=\"https://github.com/hilongjw/vue-slide\" target=\"_blank\" rel=\"noopener\">vue-slide</a> - vue轻量级滑动组件</li>\n<li><a href=\"https://github.com/warpcgd/vue-slider\" target=\"_blank\" rel=\"noopener\">vue-slider</a> - vue 滑动组件</li>\n<li><a href=\"https://github.com/shiye515/vue-m-carousel\" target=\"_blank\" rel=\"noopener\">vue-m-carousel</a> - vue 移动端轮播组件</li>\n<li><a href=\"https://github.com/ibufu/dd-vue-component\" target=\"_blank\" rel=\"noopener\">dd-vue-component</a> - 订单来了的公共组件库</li>\n<li><a href=\"https://github.com/shhdgit/vue-easy-slider\" target=\"_blank\" rel=\"noopener\">vue-easy-slider</a> - Vue 2.x的滑块组件</li>\n</ol>\n<h3 id=\"图表\"><a href=\"#图表\" class=\"headerlink\" title=\"图表\"></a>图表</h3><ol>\n<li><a href=\"https://github.com/ratiw/vue-table\" target=\"_blank\" rel=\"noopener\">vue-table</a> - 简化数据表格</li>\n<li><a href=\"https://github.com/apertureless/vue-chartjs\" target=\"_blank\" rel=\"noopener\">vue-chartjs</a> - vue中的Chartjs的封装</li>\n<li><a href=\"https://github.com/hchstera/vue-charts\" target=\"_blank\" rel=\"noopener\">vue-charts</a> - 轻松渲染一个图表</li>\n<li><a href=\"https://github.com/miaolz123/vue-chart\" target=\"_blank\" rel=\"noopener\">vue-chart</a> - 强大的高速的vue图表解析</li>\n<li><a href=\"https://github.com/weizhenye/vue-highcharts\" target=\"_blank\" rel=\"noopener\">vue-highcharts</a> - HighCharts组件</li>\n<li><a href=\"https://github.com/vue-bulma/chartjs\" target=\"_blank\" rel=\"noopener\">chartjs</a> - Vue Bulma的chartjs组件</li>\n<li><a href=\"https://github.com/ankane/vue-chartkick\" target=\"_blank\" rel=\"noopener\">vue-chartkick</a> - VueJS一行代码实现优美图表</li>\n</ol>\n<h3 id=\"日历\"><a href=\"#日历\" class=\"headerlink\" title=\"日历\"></a>日历</h3><ol>\n<li><a href=\"https://github.com/jinzhe/vue-calendar\" target=\"_blank\" rel=\"noopener\">vue-calendar</a> - 日期选择插件</li>\n<li><a href=\"https://github.com/hilongjw/vue-datepicker\" target=\"_blank\" rel=\"noopener\">vue-datepicker</a> - 日历和日期选择组件</li>\n<li><a href=\"https://github.com/Haixing-Hu/vue-datetime-picker\" target=\"_blank\" rel=\"noopener\">vue-datetime-picker</a> - 日期时间选择控件</li>\n<li><a href=\"https://github.com/icai/vue2-calendar\" target=\"_blank\" rel=\"noopener\">vue2-calendar</a> - 支持lunar和日期事件的日期选择器</li>\n<li><a href=\"https://github.com/Wanderxx/vue-fullcalendar\" target=\"_blank\" rel=\"noopener\">vue-fullcalendar</a> - 基于vue.js的全日历组件</li>\n<li><a href=\"https://github.com/weifeiyue/vue-datepicker\" target=\"_blank\" rel=\"noopener\">vue-datepicker</a> - 漂亮的Vue日期选择器组件</li>\n<li><a href=\"https://github.com/vue-bulma/datepicker\" target=\"_blank\" rel=\"noopener\">datepicker</a> - 基于flatpickr的时间选择组件</li>\n<li><a href=\"https://github.com/phoenixwong/vue2-timepicker\" target=\"_blank\" rel=\"noopener\">vue2-timepicker</a> - 下拉时间选择器</li>\n<li><a href=\"https://github.com/Bubblings/vue-date-picker\" target=\"_blank\" rel=\"noopener\">vue-date-picker</a> - VueJS日期选择器组件</li>\n<li><a href=\"https://github.com/dai-siki/vue-datepicker-simple\" target=\"_blank\" rel=\"noopener\">vue-datepicker-simple</a> - 基于vue的日期选择器</li>\n</ol>\n<h3 id=\"地址选择\"><a href=\"#地址选择\" class=\"headerlink\" title=\"地址选择\"></a>地址选择</h3><ol>\n<li><a href=\"https://github.com/xinxingyu/vue-city\" target=\"_blank\" rel=\"noopener\">vue-city</a> - 城市选择器</li>\n<li><a href=\"https://github.com/QingWei-Li/vue-region-picker\" target=\"_blank\" rel=\"noopener\">vue-region-picker</a> - 选择中国的省份市和地区</li>\n</ol>\n<h3 id=\"地图\"><a href=\"#地图\" class=\"headerlink\" title=\"地图\"></a>地图</h3><ol>\n<li><a href=\"https://github.com/ElemeFE/vue-amap\" target=\"_blank\" rel=\"noopener\">vue-amap</a> - 基于Vue 2和高德地图的地图组件</li>\n<li><a href=\"https://github.com/GuillaumeLeclerc/vue-google-maps\" target=\"_blank\" rel=\"noopener\">vue-google-maps</a> - 带有双向数据绑定Google地图组件</li>\n<li><a href=\"https://github.com/Dafrok/vue-baidu-map\" target=\"_blank\" rel=\"noopener\">vue-baidu-map</a>- 基于 Vue 2的百度地图组件库</li>\n<li><a href=\"https://github.com/doodlewind/vue-cmap\" target=\"_blank\" rel=\"noopener\">vue-cmap</a> - Vue China map可视化组件</li>\n</ol>\n<h3 id=\"播放器\"><a href=\"#播放器\" class=\"headerlink\" title=\"播放器\"></a>播放器</h3><ol>\n<li><a href=\"https://github.com/surmon-china/vue-video-player\" target=\"_blank\" rel=\"noopener\">vue-video-player</a> - VueJS视频及直播播放器</li>\n<li><a href=\"https://github.com/hilongjw/vue-video\" target=\"_blank\" rel=\"noopener\">vue-video</a> - Vue.js的HTML5视频播放器</li>\n<li><a href=\"https://github.com/yunyi1895/vue-music-master\" target=\"_blank\" rel=\"noopener\">vue-music-master</a> - vue手机端网页音乐播放器</li>\n</ol>\n<h3 id=\"滚动scroll\"><a href=\"#滚动scroll\" class=\"headerlink\" title=\"滚动scroll\"></a>滚动scroll</h3><ol>\n<li><a href=\"https://github.com/wangdahoo/vue-scroller\" target=\"_blank\" rel=\"noopener\">vue-scroller</a> - Vonic UI的功能性组件</li>\n<li><a href=\"https://github.com/egoist/vue-mugen-scroll\" target=\"_blank\" rel=\"noopener\">vue-mugen-scroll</a> - 无限滚动组件</li>\n<li><a href=\"https://github.com/PeachScript/vue-infinite-loading\" target=\"_blank\" rel=\"noopener\">vue-infinite-loading</a> - VueJS的无限滚动插件</li>\n<li><a href=\"https://github.com/Akryum/vue-virtual-scroller\" target=\"_blank\" rel=\"noopener\">vue-virtual-scroller</a> - 带任意数目数据的顺畅的滚动</li>\n<li><a href=\"https://github.com/ElemeFE/vue-infinite-scroll\" target=\"_blank\" rel=\"noopener\">vue-infinite-scroll</a> - VueJS的无限滚动指令</li>\n<li><a href=\"https://github.com/BosNaufal/vue-scrollbar\" target=\"_blank\" rel=\"noopener\">vue-scrollbar</a> - 最简单的滚动区域组件</li>\n<li><a href=\"https://github.com/suguangwen/vue-scroll\" target=\"_blank\" rel=\"noopener\">vue-scroll</a> - vue滚动</li>\n<li><a href=\"https://github.com/bajian/vue-pull-to-refresh\" target=\"_blank\" rel=\"noopener\">vue-pull-to-refresh</a> - Vue2的上拉下拉</li>\n<li><a href=\"https://github.com/mint-ui/mint-loadmore\" target=\"_blank\" rel=\"noopener\">mint-loadmore</a> - VueJS的双向下拉刷新组件</li>\n<li><a href=\"https://github.com/Teddy-Zhu/vue-smoothscroll\" target=\"_blank\" rel=\"noopener\">vue-smoothscroll</a> - smoothscroll的VueJS版本</li>\n</ol>\n<h3 id=\"文件上传\"><a href=\"#文件上传\" class=\"headerlink\" title=\"文件上传\"></a>文件上传</h3><ol>\n<li><a href=\"https://github.com/lian-yue/vue-upload-component\" target=\"_blank\" rel=\"noopener\">vue-upload-component</a> - Vuejs文件上传组件</li>\n<li><a href=\"https://github.com/Vanthink-UED/vue-core-image-upload\" target=\"_blank\" rel=\"noopener\">vue-core-image-upload</a> - 轻量级的vue上传插件</li>\n<li><a href=\"https://github.com/rowanwins/vue-dropzone\" target=\"_blank\" rel=\"noopener\">vue-dropzone</a> - 用于文件上传的Vue组件</li>\n</ol>\n<h3 id=\"图片处理\"><a href=\"#图片处理\" class=\"headerlink\" title=\"图片处理\"></a>图片处理</h3><ol>\n<li><a href=\"https://github.com/JALBAA/vue-lazyload-img\" target=\"_blank\" rel=\"noopener\">vue-lazyload-img</a> - 移动优化的vue图片懒加载插件</li>\n<li><a href=\"https://github.com/dai-siki/vue-image-crop-upload\" target=\"_blank\" rel=\"noopener\">vue-image-crop-upload</a> - vue图片剪裁上传组件</li>\n<li><a href=\"https://github.com/MMF-FE/vue-svgicon\" target=\"_blank\" rel=\"noopener\">vue-svgicon</a> - 创建svg图标组件的工具</li>\n<li><a href=\"https://github.com/JackGit/vue-img-loader\" target=\"_blank\" rel=\"noopener\">vue-img-loader</a> - 图片加载UI组件</li>\n<li><a href=\"https://github.com/legeneek/vue-image-clip\" target=\"_blank\" rel=\"noopener\">vue-image-clip</a>- 基于vue的图像剪辑组件</li>\n<li><a href=\"https://github.com/MatteoGabriele/vue-progressive-image\" target=\"_blank\" rel=\"noopener\">vue-progressive-image</a> - Vue的渐进图像加载插件</li>\n</ol>\n<h3 id=\"提示\"><a href=\"#提示\" class=\"headerlink\" title=\"提示\"></a>提示</h3><ol>\n<li><a href=\"https://github.com/ElemeFE/vue-toast-mobile\" target=\"_blank\" rel=\"noopener\">vue-toast-mobile</a> - VueJS的toast插件</li>\n<li><a href=\"https://github.com/ElemeFE/vue-msgbox\" target=\"_blank\" rel=\"noopener\">vue-msgbox</a> - vuejs的消息框</li>\n<li><a href=\"https://github.com/Akryum/vue-tooltip\" target=\"_blank\" rel=\"noopener\">vue-tooltip</a> - 带绑定信息提示的提示工具</li>\n<li><a href=\"https://github.com/aweiu/vue-verify-pop\" target=\"_blank\" rel=\"noopener\">vue-verify-pop</a> - 带气泡提示的vue校验插件</li>\n</ol>\n<h3 id=\"进度条\"><a href=\"#进度条\" class=\"headerlink\" title=\"进度条\"></a>进度条</h3><ol>\n<li><a href=\"https://github.com/wyzant-dev/vue-radial-progress\" target=\"_blank\" rel=\"noopener\">vue-radial-progress</a> - Vue.js放射性进度条组件</li>\n<li><a href=\"https://github.com/hilongjw/vue-progressbar\" target=\"_blank\" rel=\"noopener\">vue-progressbar</a> - vue轻量级进度条</li>\n<li><a href=\"https://github.com/BosNaufal/vue2-loading-bar\" target=\"_blank\" rel=\"noopener\">vue2-loading-bar</a> - 最简单的仿Youtube加载条视图</li>\n</ol>\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><ol>\n<li><a href=\"https://github.com/hilongjw/vue-dragging\" target=\"_blank\" rel=\"noopener\">vue-dragging</a>- 使元素可以拖拽</li>\n<li><a href=\"https://github.com/David-Desmaisons/Vue.Draggable\" target=\"_blank\" rel=\"noopener\">Vue.Draggable</a>- 实现拖放和视图模型数组同步</li>\n<li><a href=\"https://github.com/alessiomaffeis/vue-picture-input\" target=\"_blank\" rel=\"noopener\">vue-picture-input</a>- 移动友好的图片文件输入组件</li>\n<li><a href=\"https://github.com/ccforward/rubik\" target=\"_blank\" rel=\"noopener\">rubik</a>- 基于Vuejs2的开源 UI 组件库</li>\n<li><a href=\"https://github.com/OYsun/VueStar\" target=\"_blank\" rel=\"noopener\">VueStar</a>- 带星星动画的vue点赞按钮</li>\n<li><a href=\"https://github.com/matfish2/vue-tables-2\" target=\"_blank\" rel=\"noopener\">vue-tables-2</a>- 显示数据的bootstrap样式网格</li>\n<li><a href=\"https://github.com/SimonZhangITer/DataVisualization\" target=\"_blank\" rel=\"noopener\">DataVisualization</a>- 数据可视化</li>\n<li><a href=\"https://github.com/Alex-fun/vue-drag-and-drop-list\" target=\"_blank\" rel=\"noopener\">vue-drag-and-drop-list</a>- 创建排序列表的Vue指令</li>\n<li><a href=\"https://github.com/vuwe/vuwe\" target=\"_blank\" rel=\"noopener\">vuwe</a>- 基于微信WeUI所开发的专用于Vue2的组件库</li>\n<li><a href=\"https://github.com/cngu/vue-typer\" target=\"_blank\" rel=\"noopener\">vue-typer</a>- 模拟用户输入选择和删除文本的Vue组件</li>\n<li><a href=\"https://github.com/NewDadaFE/vue-impression\" target=\"_blank\" rel=\"noopener\">vue-impression</a>- 移动Vuejs2 UI元素</li>\n<li><a href=\"https://github.com/galenyuan/vue-datatable\" target=\"_blank\" rel=\"noopener\">vue-datatable</a>- 使用Vuejs创建的DataTableView</li>\n<li><a href=\"https://github.com/santiblanko/vue-instant\" target=\"_blank\" rel=\"noopener\">vue-instant</a>- 轻松创建自动提示的自定义搜索控件</li>\n<li><a href=\"https://github.com/NightCatSama/vue-slider-component\" target=\"_blank\" rel=\"noopener\">vue-slider-component</a>- 在vue1和vue2中使用滑块</li>\n<li><a href=\"https://github.com/surmon-china/vue-touch-ripple\" target=\"_blank\" rel=\"noopener\">vue-touch-ripple</a>- vuejs的触摸ripple组件</li>\n<li><a href=\"https://github.com/Kocisov/coffeebreak\" target=\"_blank\" rel=\"noopener\">coffeebreak</a>- 实时编辑CSS组件工具</li>\n<li><a href=\"https://github.com/coderdiaz/vue-datasource\" target=\"_blank\" rel=\"noopener\">vue-datasource</a>- 创建VueJS动态表格</li>\n<li><a href=\"https://github.com/vue-bulma/handsontable\" target=\"_blank\" rel=\"noopener\">handsontable</a>- 网页表格组件</li>\n<li><a href=\"https://github.com/jbaysolutions/vue-bootstrap-table\" target=\"_blank\" rel=\"noopener\">vue-bootstrap-table</a>- 可排序可检索的表格</li>\n<li><a href=\"https://github.com/phanan/vue-google-signin-button\" target=\"_blank\" rel=\"noopener\">vue-google-signin-button</a>- 导入谷歌登录按钮</li>\n<li><a href=\"https://github.com/bkzl/vue-float-label\" target=\"_blank\" rel=\"noopener\">vue-float-label</a>- VueJS浮动标签模式</li>\n<li><a href=\"https://github.com/Ginhing/vue-tagsinput\" target=\"_blank\" rel=\"noopener\">vue-tagsinput</a>- 基于VueJS的标签组件</li>\n<li><a href=\"https://github.com/nicolasbeauvais/vue-social-sharing\" target=\"_blank\" rel=\"noopener\">vue-social-sharing</a>- 社交分享组件</li>\n<li><a href=\"https://github.com/myronliu347/vue-popup-mixin\" target=\"_blank\" rel=\"noopener\">vue-popup-mixin</a>- 用于管理弹出框的遮盖层</li>\n<li><a href=\"https://github.com/fangyongbao/cubeex\" target=\"_blank\" rel=\"noopener\">cubeex</a>- 包含一套完整的移动UI</li>\n<li><a href=\"https://github.com/CroudSupport/vue-fullcalendar\" target=\"_blank\" rel=\"noopener\">vue-fullcalendar</a>- vue FullCalendar封装</li>\n<li><a href=\"https://github.com/loujiayu/vue-material-design\" target=\"_blank\" rel=\"noopener\">vue-material-design</a>- Vue MD风格组件</li>\n<li><a href=\"https://github.com/bbonnin/vue-morris\" target=\"_blank\" rel=\"noopener\">vue-morris</a>- Vuejs组件封装Morrisjs库</li>\n<li><a href=\"https://github.com/tianyong90/we-vue\" target=\"_blank\" rel=\"noopener\">we-vue</a>- Vue2及weui1开发的组件</li>\n<li><a href=\"https://github.com/matfish2/vue-form-2\" target=\"_blank\" rel=\"noopener\">vue-form-2</a>- 全面的HTML表单管理的解决方案</li>\n<li><a href=\"https://github.com/vue-comps/vue-side-nav\" target=\"_blank\" rel=\"noopener\">vue-side-nav</a>- 响应式的侧边导航</li>\n<li><a href=\"https://github.com/mint-ui/mint-indicator\" target=\"_blank\" rel=\"noopener\">mint-indicator</a>- VueJS移动加载指示器插件</li>\n<li><a href=\"https://github.com/BosNaufal/vue-ripple\" target=\"_blank\" rel=\"noopener\">vue-ripple</a>- 制作谷歌MD风格涟漪效果的Vue组件</li>\n<li><a href=\"https://github.com/icebob/vue-touch-keyboard\" target=\"_blank\" rel=\"noopener\">vue-touch-keyboard</a>- VueJS虚拟键盘组件</li>\n<li><a href=\"https://github.com/vue-comps/vue-parallax\" target=\"_blank\" rel=\"noopener\">vue-parallax</a>- 整洁的视觉效果</li>\n<li><a href=\"https://github.com/eduardostuart/vue-typewriter\" target=\"_blank\" rel=\"noopener\">vue-typewriter</a>- vue组件类型</li>\n<li><a href=\"https://github.com/Treri/vue-ios-alertview\" target=\"_blank\" rel=\"noopener\">vue-ios-alertview</a>- iOS7+ 风格的alertview服务</li>\n<li><a href=\"https://github.com/yeseason/paco-ui-vue\" target=\"_blank\" rel=\"noopener\">paco-ui-vue</a>- PACOUI的vue组件</li>\n<li><a href=\"https://github.com/steven5538/vue-button\" target=\"_blank\" rel=\"noopener\">vue-button</a>- Vue按钮组件</li>\n</ol>\n<h2 id=\"开发框架\"><a href=\"#开发框架\" class=\"headerlink\" title=\"开发框架\"></a>开发框架</h2><ol>\n<li><a href=\"https://github.com/vuejs/vue\" target=\"_blank\" rel=\"noopener\">vue.js</a> - 流行的轻量高效的前端组件化方案</li>\n<li><a href=\"https://github.com/fundon/vue-admin\" target=\"_blank\" rel=\"noopener\">vue-admin</a> - Vue管理面板框架</li>\n<li><a href=\"https://github.com/SimulatedGREG/electron-vue\" target=\"_blank\" rel=\"noopener\">electron-vue</a> - Electron及VueJS快速启动样板</li>\n<li><a href=\"https://github.com/petervmeijgaard/vue-2.0-boilerplate\" target=\"_blank\" rel=\"noopener\">vue-2.0-boilerplate</a> - Vue2单页应用样板</li>\n<li><a href=\"https://github.com/rodzzlessa24/vue-webgulp\" target=\"_blank\" rel=\"noopener\">vue-webgulp</a> - 仿VueJS Vue loader示例</li>\n<li><a href=\"https://github.com/wangxg2016/vue-bulma\" target=\"_blank\" rel=\"noopener\">vue-bulma</a> - 轻量级高性能MVVM Admin UI框架</li>\n<li><a href=\"https://github.com/hanan198501/vue-spa-template\" target=\"_blank\" rel=\"noopener\">vue-spa-template</a> - 前后端分离后的单页应用开发</li>\n<li><a href=\"https://github.com/nolimits4web/Framework7-Vue\" target=\"_blank\" rel=\"noopener\">Framework7-Vue</a> - VueJS与Framework7结合</li>\n<li><a href=\"https://github.com/Metnew/vue-element-starter\" target=\"_blank\" rel=\"noopener\">vue-element-starter</a> - vue启动页</li>\n</ol>\n<h2 id=\"实用库\"><a href=\"#实用库\" class=\"headerlink\" title=\"实用库\"></a>实用库</h2><ol>\n<li><a href=\"https://github.com/monterail/vuelidate\" target=\"_blank\" rel=\"noopener\">vuelidate</a> - 简单轻量级的基于模块的Vue.js验证</li>\n<li><a href=\"https://github.com/zerqu/qingcheng\" target=\"_blank\" rel=\"noopener\">qingcheng</a> - qingcheng主题</li>\n<li><a href=\"https://github.com/vuejs/vuex\" target=\"_blank\" rel=\"noopener\">vuex</a> - 专为 Vue.js 应用程序开发的状态管理模式</li>\n<li><a href=\"https://github.com/imcvampire/vue-axios\" target=\"_blank\" rel=\"noopener\">vue-axios</a> - 将axios整合到VueJS的封装</li>\n<li><a href=\"https://github.com/ElemeFE/vue-desktop\" target=\"_blank\" rel=\"noopener\">vue-desktop</a> - 创建管理面板网站的UI库</li>\n<li><a href=\"https://github.com/declandewet/vue-meta\" target=\"_blank\" rel=\"noopener\">vue-meta</a> - 管理app的meta信息</li>\n<li><a href=\"https://github.com/eddyerburgh/avoriaz\" target=\"_blank\" rel=\"noopener\">avoriaz</a> - VueJS测试实用工具库</li>\n<li><a href=\"https://github.com/lmk123/vue-framework7\" target=\"_blank\" rel=\"noopener\">vue-framework7</a> - 结合VueJS使用的Framework7组件</li>\n<li><a href=\"https://github.com/yeyuqiudeng/vue-lazy-render\" target=\"_blank\" rel=\"noopener\">vue-lazy-render</a> - 用于Vue组件的延迟渲染</li>\n<li><a href=\"https://github.com/cenkai88/vue-svg-icon\" target=\"_blank\" rel=\"noopener\">vue-svg-icon</a> - vue2的可变彩色svg图标方案</li>\n<li><a href=\"https://github.com/Sopamo/vue-online\" target=\"_blank\" rel=\"noopener\">vue-online</a> - reactive的在线和离线组件</li>\n<li><a href=\"https://github.com/apertureless/vue-password-strength-meter\" target=\"_blank\" rel=\"noopener\">vue-password-strength-meter</a> - 交互式密码强度计</li>\n<li><a href=\"https://github.com/QingWei-Li/vuep\" target=\"_blank\" rel=\"noopener\">vuep</a> - 用实时编辑和预览来渲染Vue组件</li>\n<li><a href=\"https://github.com/Coffcer/vue-bootstrap-modal\" target=\"_blank\" rel=\"noopener\">vue-bootstrap-modal</a> - vue的Bootstrap样式组件</li>\n<li><a href=\"https://github.com/lynzz/element-admin\" target=\"_blank\" rel=\"noopener\">element-admin</a> - 支持 vuecli 的 Element UI 的后台模板</li>\n<li><a href=\"https://github.com/iFgR/vue-shortkey\" target=\"_blank\" rel=\"noopener\">vue-shortkey</a> - 应用于Vue.js的Vue-ShortKey 插件</li>\n<li><a href=\"https://github.com/vue-bulma/cleave\" target=\"_blank\" rel=\"noopener\">cleave</a> - 基于cleave.js的Cleave组件</li>\n<li><a href=\"https://github.com/cklmercer/vue-events\" target=\"_blank\" rel=\"noopener\">vue-events</a> - 简化事件的VueJS插件</li>\n<li><a href=\"https://github.com/FranckFreiburger/http-vue-loader\" target=\"_blank\" rel=\"noopener\">http-vue-loader</a> - 从html及js环境加载vue文件</li>\n<li><a href=\"https://github.com/SimulatedGREG/vue-electron\" target=\"_blank\" rel=\"noopener\">vue-electron</a> - 将选择的API封装到Vue对象中的插件</li>\n<li><a href=\"https://github.com/weinot/vue-router-transition\" target=\"_blank\" rel=\"noopener\">vue-router-transition</a> - 页面过渡插件</li>\n<li><a href=\"https://github.com/gocanto/vuemit\" target=\"_blank\" rel=\"noopener\">vuemit</a> - 处理VueJS事件</li>\n<li><a href=\"https://github.com/kartsims/vue-cordova\" target=\"_blank\" rel=\"noopener\">vue-cordova</a> - Cordova的VueJS插件</li>\n<li><a href=\"https://github.com/superman66/vue-qart\" target=\"_blank\" rel=\"noopener\">vue-qart</a> - 用于qartjs的Vue2指令</li>\n<li><a href=\"https://github.com/icebob/vue-websocket\" target=\"_blank\" rel=\"noopener\">vue-websocket</a> - VueJS的Websocket插件</li>\n<li><a href=\"https://github.com/mlyknown/vue-gesture\" target=\"_blank\" rel=\"noopener\">vue-gesture</a> - VueJS的手势事件插件</li>\n<li><a href=\"https://github.com/pinguinjkeke/vue-local-storage\" target=\"_blank\" rel=\"noopener\">vue-local-storage</a> - 具有类型支持的Vuejs本地储存插件</li>\n<li><a href=\"https://github.com/gocanto/lazy-vue\" target=\"_blank\" rel=\"noopener\">lazy-vue</a> - 懒加载图片</li>\n<li><a href=\"https://github.com/yodfz/vue-lazyloadImg\" target=\"_blank\" rel=\"noopener\">vue-lazyloadImg</a> - 图片懒加载插件</li>\n<li><a href=\"https://github.com/yangmingshan/vue-bus\" target=\"_blank\" rel=\"noopener\">vue-bus</a> - VueJS的事件总线</li>\n<li><a href=\"https://github.com/Akryum/vue-observe-visibility\" target=\"_blank\" rel=\"noopener\">vue-observe-visibility</a> - 当元素在页面上可见或隐藏时检测</li>\n<li><a href=\"https://github.com/se-panfilov/vue-notifications\" target=\"_blank\" rel=\"noopener\">vue-notifications</a> - 非阻塞通知库</li>\n<li><a href=\"https://github.com/AStaroverov/v-media-query\" target=\"_blank\" rel=\"noopener\">v-media-query</a> - vue中添加用于配合媒体查询的方法</li>\n<li><a href=\"https://github.com/xanf/vuex-shared-mutations\" target=\"_blank\" rel=\"noopener\">vuex-shared-mutations</a> - 分享某种Vuex mutations</li>\n<li><a href=\"https://github.com/Coffcer/vue-lazy-component\" target=\"_blank\" rel=\"noopener\">vue-lazy-component</a> - 懒加载组件或者元素的Vue指令</li>\n<li><a href=\"https://github.com/ropbla9/vue-reactive-storage\" target=\"_blank\" rel=\"noopener\">vue-reactive-storage</a> - vue插件的Reactive层</li>\n<li><a href=\"https://github.com/HerringtonDarkholme/vue-ts-loader\" target=\"_blank\" rel=\"noopener\">vue-ts-loader</a> - 在Vue装载机检查脚本</li>\n<li><a href=\"https://github.com/matfish2/vue-pagination-2\" target=\"_blank\" rel=\"noopener\">vue-pagination-2</a> - 简单通用的分页组件</li>\n<li><a href=\"https://github.com/dkfbasel/vuex-i18n\" target=\"_blank\" rel=\"noopener\">vuex-i18n</a> - 定位插件</li>\n<li><a href=\"https://github.com/David-Desmaisons/Vue.resize\" target=\"_blank\" rel=\"noopener\">Vue.resize</a> - 检测HTML调整大小事件的vue指令</li>\n<li><a href=\"https://github.com/vue-comps/vue-zoombox\" target=\"_blank\" rel=\"noopener\">vue-zoombox</a> - 一个高级zoombox</li>\n<li><a href=\"https://github.com/LeoHuiyi/leo-vue-validator\" target=\"_blank\" rel=\"noopener\">leo-vue-validator</a> - 异步的表单验证组件</li>\n<li><a href=\"https://github.com/vue-bulma/modal\" target=\"_blank\" rel=\"noopener\">modal</a> - Vue Bulma的modal组件</li>\n<li><a href=\"https://github.com/irwansyahwii/Famous-Vue\" target=\"_blank\" rel=\"noopener\">Famous-Vue</a> - Famous库的vue组件</li>\n<li><a href=\"https://github.com/syropian/vue-input-autosize\" target=\"_blank\" rel=\"noopener\">vue-input-autosize</a> - 基于内容自动调整文本输入的大小</li>\n<li><a href=\"https://github.com/BosNaufal/vue-file-base64\" target=\"_blank\" rel=\"noopener\">vue-file-base64</a> - 将文件转换为Base64的vue组件</li>\n<li><a href=\"https://github.com/MetinSeylan/Vue-Easy-Validator\" target=\"_blank\" rel=\"noopener\">Vue-Easy-Validator</a> - 简单的表单验证</li>\n<li><a href=\"https://github.com/imcvampire/vue-truncate-filter\" target=\"_blank\" rel=\"noopener\">vue-truncate-filter</a> - 截断字符串的VueJS过滤器</li>\n</ol>\n<h2 id=\"服务端\"><a href=\"#服务端\" class=\"headerlink\" title=\"服务端\"></a>服务端</h2><ol>\n<li><a href=\"https://github.com/hilongjw/vue-ssr\" target=\"_blank\" rel=\"noopener\">vue-ssr</a> - 结合Express使用Vue2服务端渲染</li>\n<li><a href=\"https://github.com/nuxt/nuxt.js\" target=\"_blank\" rel=\"noopener\">nuxt.js</a> - 用于服务器渲染Vue app的最小化框架</li>\n<li><a href=\"https://github.com/ccforward/vue-ssr\" target=\"_blank\" rel=\"noopener\">vue-ssr</a> - 非常简单的VueJS服务器端渲染模板</li>\n<li><a href=\"https://github.com/leaves4j/vue-easy-renderer\" target=\"_blank\" rel=\"noopener\">vue-easy-renderer</a> - Nodejs服务端渲染</li>\n<li><a href=\"https://github.com/danmademe/express-vue\" target=\"_blank\" rel=\"noopener\">express-vue</a> - 简单的使用服务器端渲染vue.js</li>\n</ol>\n<h2 id=\"辅助工具\"><a href=\"#辅助工具\" class=\"headerlink\" title=\"辅助工具\"></a>辅助工具</h2><ol>\n<li><a href=\"https://github.com/MiCottOn/DejaVue\" target=\"_blank\" rel=\"noopener\">DejaVue</a> - Vuejs可视化及压力测试</li>\n<li><a href=\"https://github.com/NetanelBasal/vue-generate-component\" target=\"_blank\" rel=\"noopener\">vue-generate-component</a> - 轻松生成Vue js组件的CLI工具</li>\n<li><a href=\"https://github.com/OYsun/vscode-VueHelper\" target=\"_blank\" rel=\"noopener\">vscode-VueHelper</a> - 目前vscode最好的vue代码提示插件</li>\n<li><a href=\"https://github.com/vue-play/vue-play\" target=\"_blank\" rel=\"noopener\">vue-play</a> - 展示Vue组件的最小化框架</li>\n<li><a href=\"https://github.com/MetinSeylan/VuejsStarterKit\" target=\"_blank\" rel=\"noopener\">VuejsStarterKit</a> - vuejs starter套件</li>\n<li><a href=\"https://github.com/xwpongithub/vue-multipage-cli\" target=\"_blank\" rel=\"noopener\">vue-multipage-cli</a> - 简单的多页CLI</li>\n</ol>\n<h2 id=\"应用实例\"><a href=\"#应用实例\" class=\"headerlink\" title=\"应用实例\"></a>应用实例</h2><ol>\n<li><a href=\"https://github.com/pagekit/pagekit\" target=\"_blank\" rel=\"noopener\">pagekit</a> - 轻量级的CMS建站系统</li>\n<li><a href=\"https://github.com/Vuedo/vuedo\" target=\"_blank\" rel=\"noopener\">vuedo</a> - 博客平台</li>\n<li><a href=\"https://github.com/phanan/koel\" target=\"_blank\" rel=\"noopener\">koel</a> - 基于网络的个人音频流媒体服务</li>\n<li><a href=\"https://github.com/ycwalker/CMS-of-Blog\" target=\"_blank\" rel=\"noopener\">CMS-of-Blog</a> - 博客内容管理器</li>\n<li><a href=\"https://github.com/lzxb/vue-cnode\" target=\"_blank\" rel=\"noopener\">vue-cnode</a> - 重写vue版cnode社区</li>\n<li><a href=\"https://github.com/viko16/vue-ghpages-blog\" target=\"_blank\" rel=\"noopener\">vue-ghpages-blog</a> - 依赖GitHub Pages无需本地生成的静态博客</li>\n<li><a href=\"https://github.com/wh469012917/swoole-vue-webim\" target=\"_blank\" rel=\"noopener\">swoole-vue-webim</a> - Web版的聊天应用</li>\n<li><a href=\"https://github.com/sapjax/fewords\" target=\"_blank\" rel=\"noopener\">fewords</a> - 功能极其简单的笔记本</li>\n<li><a href=\"https://github.com/jackhutu/jackblog-vue\" target=\"_blank\" rel=\"noopener\">jackblog-vue</a> - 个人博客系统</li>\n<li><a href=\"https://github.com/surmon-china/vue-blog\" target=\"_blank\" rel=\"noopener\">vue-blog</a> - 使用Vue2.0 和Vuex的vue-blog</li>\n<li><a href=\"https://github.com/thelinuxlich/vue-dashing-js\" target=\"_blank\" rel=\"noopener\">vue-dashing-js</a> - nuvo-dashing-js的fork</li>\n<li><a href=\"https://github.com/mrgodhani/rss-reader\" target=\"_blank\" rel=\"noopener\">rss-reader</a> - 简单的rss阅读器</li>\n</ol>\n<h2 id=\"Demo示例\"><a href=\"#Demo示例\" class=\"headerlink\" title=\"Demo示例\"></a>Demo示例</h2><ol>\n<li><a href=\"https://github.com/liangxiaojuan/eleme\" target=\"_blank\" rel=\"noopener\">eleme</a> - 高仿饿了么app商家详情</li>\n<li><a href=\"https://github.com/javaSwing/NeteaseCloudWebApp\" target=\"_blank\" rel=\"noopener\">NeteaseCloudWebApp</a> - 高仿网易云音乐的webapp</li>\n<li><a href=\"https://github.com/hilongjw/vue-zhihu-daily\" target=\"_blank\" rel=\"noopener\">vue-zhihu-daily</a> - 知乎日报 with Vuejs</li>\n<li><a href=\"https://github.com/shinygang/Vue-cnodejs\" target=\"_blank\" rel=\"noopener\">Vue-cnodejs</a> - 基于vue重写Cnodejs.org的webapp</li>\n<li><a href=\"https://github.com/lzxb/vue2-demo\" target=\"_blank\" rel=\"noopener\">vue2-demo</a> - 从零构建vue2 + vue-router + vuex 开发环境</li>\n<li><a href=\"https://github.com/useryangtao/vue-wechat\" target=\"_blank\" rel=\"noopener\">vue-wechat</a> - vue.js开发微信app界面</li>\n<li><a href=\"https://github.com/Sioxas/vue-music\" target=\"_blank\" rel=\"noopener\">vue-music</a> - Vue 音乐搜索播放</li>\n<li><a href=\"https://github.com/zhengguorong/maizuo\" target=\"_blank\" rel=\"noopener\">maizuo</a> - vue/vuex/redux仿卖座网</li>\n<li><a href=\"https://github.com/kenberkeley/vue-demo\" target=\"_blank\" rel=\"noopener\">vue-demo</a> - vue简易留言板</li>\n<li><a href=\"https://github.com/codecasts/spa-starter-kit\" target=\"_blank\" rel=\"noopener\">spa-starter-kit</a> - 单页应用启动套件</li>\n<li><a href=\"https://github.com/yatessss/zhihudaily-vue\" target=\"_blank\" rel=\"noopener\">zhihudaily-vue</a> - 知乎日报web版</li>\n<li><a href=\"https://github.com/jiakeqi/douban\" target=\"_blank\" rel=\"noopener\">douban</a> - 模仿豆瓣前端</li>\n<li><a href=\"https://github.com/liangxiaojuan/vue-Meizi\" target=\"_blank\" rel=\"noopener\">vue-Meizi</a> - vue最新实战项目</li>\n<li><a href=\"https://github.com/lavyun/vue-demo-kugou\" target=\"_blank\" rel=\"noopener\">vue-demo-kugou</a> - vuejs仿写酷狗音乐webapp</li>\n<li><a href=\"https://github.com/canfoo/vue2.0-taopiaopiao\" target=\"_blank\" rel=\"noopener\">vue2.0-taopiaopiao</a> - vue2.0与express构建淘票票页面</li>\n<li><a href=\"https://github.com/yjj5855/node-vue-server-webpack\" target=\"_blank\" rel=\"noopener\">node-vue-server-webpack</a> - Node.js+Vue.js+webpack快速开发框架</li>\n<li><a href=\"https://github.com/SimonZhangITer/VueDemo_Sell_Eleme\" target=\"_blank\" rel=\"noopener\">VueDemo_Sell_Eleme</a> - Vue2高仿饿了么外卖平台</li>\n<li><a href=\"https://github.com/jiangjiu/vue-leancloud-blog\" target=\"_blank\" rel=\"noopener\">vue-leancloud-blog</a> - 一个前后端完全分离的单页应用</li>\n<li><a href=\"https://github.com/okoala/vue-fis3\" target=\"_blank\" rel=\"noopener\">vue-fis3</a> - 流行开源工具集成demo</li>\n<li><a href=\"https://github.com/wendaosanshou/mi-by-vue\" target=\"_blank\" rel=\"noopener\">mi-by-vue</a> - VueJS仿小米官网</li>\n<li><a href=\"https://github.com/ChuckCZC/vue-demo-maizuo\" target=\"_blank\" rel=\"noopener\">vue-demo-maizuo</a> - 使用Vue2全家桶仿制卖座电影</li>\n<li><a href=\"https://github.com/superman66/vue2.x-douban\" target=\"_blank\" rel=\"noopener\">vue2.x-douban</a> - Vue2实现简易豆瓣电影webApp</li>\n<li><a href=\"https://github.com/liujians/vue-adminLte-vue-router\" target=\"_blank\" rel=\"noopener\">vue-adminLte-vue-router</a> - vue和adminLte整合应用</li>\n<li><a href=\"https://github.com/iHaPBoy/vue-zhihudaily\" target=\"_blank\" rel=\"noopener\">vue-zhihudaily</a> - 知乎日报 Web 版本</li>\n<li><a href=\"https://github.com/pomelo-chuan/Zhihu-Daily-Vue.js\" target=\"_blank\" rel=\"noopener\">Zhihu-Daily-Vue.js</a> - Vuejs单页网页应用</li>\n<li><a href=\"https://github.com/superman66/vue-axios-github\" target=\"_blank\" rel=\"noopener\">vue-axios-github</a> - 登录拦截登出功能</li>\n<li><a href=\"https://github.com/vincentSea/vue2.x-Cnode\" target=\"_blank\" rel=\"noopener\">vue2.x-Cnode</a> - 基于vue全家桶的Cnode社区</li>\n<li><a href=\"https://github.com/rokups/hello-vue-django\" target=\"_blank\" rel=\"noopener\">hello-vue-django</a> - 使用带有Django的vuejs的样板项目</li>\n<li><a href=\"https://github.com/secreter/websocket_chat\" target=\"_blank\" rel=\"noopener\">websocket_chat</a> - 基于vue和websocket的多人在线聊天室</li>\n<li><a href=\"https://github.com/CommanderXL/x-blog\" target=\"_blank\" rel=\"noopener\">x-blog</a> - 开源的个人blog项目</li>\n<li><a href=\"https://github.com/wszgxa/vue-cnode\" target=\"_blank\" rel=\"noopener\">vue-cnode</a> - vue单页应用demo</li>\n<li><a href=\"https://github.com/xrr2016/vue-express-mongodb\" target=\"_blank\" rel=\"noopener\">vue-express-mongodb</a> - 简单的前后端分离案例</li>\n<li><a href=\"https://github.com/beidan/photoShare\" target=\"_blank\" rel=\"noopener\">photoShare</a> - 基于图片分享的社交平台</li>\n<li><a href=\"https://github.com/lin-xin/notepad\" target=\"_blank\" rel=\"noopener\">notepad</a> - 本地存储的记事本</li>\n<li><a href=\"https://github.com/cs1707/vue-zhihudaily-2.0\" target=\"_blank\" rel=\"noopener\">vue-zhihudaily-2.0</a> - 使用Vue2.0+vue-router+vuex创建的zhihudaily</li>\n<li><a href=\"https://github.com/elva2596/vueBlog\" target=\"_blank\" rel=\"noopener\">vueBlog</a> - 前后端分离博客</li>\n<li><a href=\"https://github.com/littlewin-wang/Zhihu_Daily\" target=\"_blank\" rel=\"noopener\">Zhihu_Daily</a> - 基于Vue和Nodejs的Web单页应用</li>\n<li><a href=\"https://github.com/hql123/vue-ruby-china\" target=\"_blank\" rel=\"noopener\">vue-ruby-china</a> - VueJS框架搭建的rubychina平台</li>\n<li><a href=\"https://github.com/Molunerfinn/vue-koa-demo\" target=\"_blank\" rel=\"noopener\">vue-koa-demo</a> - 使用Vue2和Koa1的全栈demo</li>\n<li><a href=\"https://github.com/shaqihe/life-app-vue\" target=\"_blank\" rel=\"noopener\">life-app-vue</a> - 使用vue2完成多功能集合到小webapp</li>\n<li><a href=\"https://github.com/wenye123/vue-trip\" target=\"_blank\" rel=\"noopener\">vue-trip</a> - vue2做的出行webapp</li>\n<li><a href=\"https://github.com/SidKwok/github-explorer\" target=\"_blank\" rel=\"noopener\">github-explorer</a> - 寻找最有趣的GitHub库</li>\n<li><a href=\"https://github.com/albertchan/vue-ssr-boilerplate\" target=\"_blank\" rel=\"noopener\">vue-ssr-boilerplate</a> - 精简版的ofvue-hackernews-2</li>\n<li><a href=\"https://github.com/nswbmw/vue-bushishiren\" target=\"_blank\" rel=\"noopener\">vue-bushishiren</a> - 不是诗人应用</li>\n<li><a href=\"https://github.com/peng1992/houtai\" target=\"_blank\" rel=\"noopener\">houtai</a> - 基于vue和Element的后台管理系统</li>\n<li><a href=\"https://github.com/QRL909109/ios7-vue\" target=\"_blank\" rel=\"noopener\">ios7-vue</a> - 使用vue2.0 vue-router vuex模拟ios7</li>\n<li><a href=\"https://github.com/tyllo/Framework7-VueJS\" target=\"_blank\" rel=\"noopener\">Framework7-VueJS</a> - 使用移动框架的示例</li>\n<li><a href=\"https://github.com/BubblyPoker/cnode-vue\" target=\"_blank\" rel=\"noopener\">cnode-vue</a> - 基于vue和vue-router构建的cnodejs web网站SPA</li>\n<li><a href=\"https://github.com/zhoou/vue-cli-multipage-bootstrap\" target=\"_blank\" rel=\"noopener\">vue-cli-multipage-bootstrap</a> - 将vue官方在线示例整合到组件中</li>\n<li><a href=\"https://github.com/jiananle/vue-cnode\" target=\"_blank\" rel=\"noopener\">vue-cnode</a> - 用 Vue 做的 CNode 官网</li>\n<li><a href=\"https://github.com/Alex-xd/seeMusic\" target=\"_blank\" rel=\"noopener\">seeMusic</a> - 跨平台云音乐播放器</li>\n<li><a href=\"https://github.com/GitaiQAQ/HyaReader\" target=\"_blank\" rel=\"noopener\">HyaReader</a> - 移动友好的阅读器</li>\n<li><a href=\"https://github.com/xrr2016/zhihu-daily\" target=\"_blank\" rel=\"noopener\">zhihu-daily</a> - 轻松查看知乎日报内容</li>\n<li><a href=\"https://github.com/Damonlw/vue-cnode\" target=\"_blank\" rel=\"noopener\">vue-cnode</a> - 使用cNode社区提供的接口</li>\n<li><a href=\"https://github.com/moonou/zhihu-daily-vue\" target=\"_blank\" rel=\"noopener\">zhihu-daily-vue</a> - 知乎日报</li>\n<li><a href=\"https://github.com/ITCNZ/vue-dropload\" target=\"_blank\" rel=\"noopener\">vue-dropload</a> - 用以测试下拉加载与简单路由</li>\n<li><a href=\"https://github.com/soulcm/vue-cnode-mobile\" target=\"_blank\" rel=\"noopener\">vue-cnode-mobile</a> - 搭建cnode社区</li>\n<li><a href=\"https://github.com/fishenal/Vuejs-SalePlatform\" target=\"_blank\" rel=\"noopener\">Vuejs-SalePlatform</a> - vuejs搭建的售卖平台demo</li>\n<li><a href=\"https://github.com/youknowznm/vue-memo\" target=\"_blank\" rel=\"noopener\">vue-memo</a> - 用 vue写的记事本应用</li>\n<li><a href=\"https://github.com/sailengsi/sls-vuex2-demo\" target=\"_blank\" rel=\"noopener\">sls-vuex2-demo</a> - vuex2商城购物车demo</li>\n<li><a href=\"https://github.com/Halfeld/v-notes\" target=\"_blank\" rel=\"noopener\">v-notes</a> - 简单美观的记事本</li>\n<li><a href=\"https://github.com/BosNaufal/vue-starter\" target=\"_blank\" rel=\"noopener\">vue-starter</a> - VueJs项目的简单启动页</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"UI组件\"><a href=\"#UI组件\" class=\"headerlink\" title=\"UI组件\"></a>UI组件</h2><h3 id=\"框架\"><a href=\"#框架\" class=\"headerlink\" title=\"框架\"></a>框架</h3><ol>\n<li><a href=\"https://github.com/ElemeFE/element\" target=\"_blank\" rel=\"noopener\">element</a> - 饿了么出品的Vue2的web UI工具套件</li>\n<li><a href=\"https://github.com/ElemeFE/mint-ui\" target=\"_blank\" rel=\"noopener\">mint-ui</a> - Vue 2的移动UI元素</li>\n<li><a href=\"https://github.com/iview/iview\" target=\"_blank\" rel=\"noopener\">iview</a> - 基于 Vuejs 的开源 UI 组件库</li>\n<li><a href=\"https://github.com/JosephusPaye/Keen-UI\" target=\"_blank\" rel=\"noopener\">Keen-UI</a> - 轻量级的基本UI组件合集</li>\n<li><a href=\"https://github.com/marcosmoura/vue-material\" target=\"_blank\" rel=\"noopener\">vue-material</a> - 通过Vue Material和Vue 2建立精美的app应用</li>\n<li><a href=\"https://github.com/museui/muse-ui\" target=\"_blank\" rel=\"noopener\">muse-ui</a> - 三端样式一致的响应式 UI 库</li>\n<li><a href=\"https://github.com/vuetifyjs/vuetify\" target=\"_blank\" rel=\"noopener\">vuetify</a> - 为移动而生的Vue JS 2组件框架</li>\n<li><a href=\"https://github.com/wangdahoo/vonic\" target=\"_blank\" rel=\"noopener\">vonic</a> - 快速构建移动端单页应用</li>\n<li><a href=\"https://github.com/chenz24/vue-blu\" target=\"_blank\" rel=\"noopener\">vue-blu</a> - 帮助你轻松创建web应用</li>\n<li><a href=\"https://github.com/monterail/vue-multiselect\" target=\"_blank\" rel=\"noopener\">vue-multiselect</a> - Vue.js选择框解决方案</li>\n<li><a href=\"https://github.com/OYsun/VueCircleMenu\" target=\"_blank\" rel=\"noopener\">VueCircleMenu</a> - 漂亮的vue圆环菜单</li>\n<li><a href=\"https://github.com/Coffcer/vue-chat\" target=\"_blank\" rel=\"noopener\">vue-chat</a> - vuejs和vuex及webpack的聊天示例</li>\n<li><a href=\"https://github.com/luojilab/radon-ui\" target=\"_blank\" rel=\"noopener\">radon-ui</a> - 快速开发产品的Vue组件库</li>\n<li><a href=\"https://github.com/MopTym/vue-waterfall\" target=\"_blank\" rel=\"noopener\">vue-waterfall</a> - Vue.js的瀑布布局组件</li>\n<li><a href=\"https://github.com/myronliu347/vue-carbon\" target=\"_blank\" rel=\"noopener\">vue-carbon</a> - 基于 vue 开发MD风格的移动端</li>\n<li><a href=\"https://github.com/FE-Driver/vue-beauty\" target=\"_blank\" rel=\"noopener\">vue-beauty</a> - 由vue和ant design创建的优美UI组件</li>\n<li><a href=\"https://github.com/pi0/bootstrap-vue\" target=\"_blank\" rel=\"noopener\">bootstrap-vue</a> - 应用于Vuejs2的Twitter的Bootstrap 4组件</li>\n<li><a href=\"https://github.com/taylorchen709/vueAdmin\" target=\"_blank\" rel=\"noopener\">vueAdmin</a> - 基于vuejs2和element的简单的管理员模板</li>\n<li><a href=\"https://github.com/lisiyizu/vue-ztree\" target=\"_blank\" rel=\"noopener\">vue-ztree</a> - 用 vue 写的树层级组件</li>\n<li><a href=\"https://github.com/weibangtuo/vue-tree\" target=\"_blank\" rel=\"noopener\">vue-tree</a> - vue树视图组件</li>\n<li><a href=\"https://github.com/alexqdjay/vue-tabs\" target=\"_blank\" rel=\"noopener\">vue-tabs</a> - 多tab页轻型框架</li>\n</ol>\n<h3 id=\"编辑器\"><a href=\"#编辑器\" class=\"headerlink\" title=\"编辑器\"></a>编辑器</h3><ol>\n<li><a href=\"https://github.com/jrainlau/markcook\" target=\"_blank\" rel=\"noopener\">markcook</a> - 好看的markdown编辑器</li>\n<li><a href=\"https://github.com/egoist/eme\" target=\"_blank\" rel=\"noopener\">eme</a> - 优雅的Markdown编辑器</li>\n<li><a href=\"https://github.com/vuejs/vue-syntax-highlight\" target=\"_blank\" rel=\"noopener\">vue-syntax-highlight</a> - Sublime Text语法高亮</li>\n<li><a href=\"https://github.com/surmon-china/vue-quill-editor\" target=\"_blank\" rel=\"noopener\">vue-quill-editor</a> - 基于Quill适用于Vue2的富文本编辑器</li>\n<li><a href=\"https://github.com/hifarer/Vueditor\" target=\"_blank\" rel=\"noopener\">Vueditor</a> - 所见即所得的编辑器</li>\n<li><a href=\"https://github.com/PeakTai/vue-html5-editor\" target=\"_blank\" rel=\"noopener\">vue-html5-editor</a> - html5所见即所得编辑器</li>\n<li><a href=\"https://github.com/davidroyer/vue2-editor\" target=\"_blank\" rel=\"noopener\">vue2-editor</a> - HTML编辑器</li>\n<li><a href=\"https://github.com/F-loat/vue-simplemde\" target=\"_blank\" rel=\"noopener\">vue-simplemde</a> - VueJS的Markdown编辑器组件</li>\n<li><a href=\"https://github.com/CroudSupport/vue-quill\" target=\"_blank\" rel=\"noopener\">vue-quill</a> - vue组件构建quill编辑器</li>\n</ol>\n<h3 id=\"slider\"><a href=\"#slider\" class=\"headerlink\" title=\"slider\"></a>slider</h3><ol>\n<li><a href=\"https://github.com/surmon-china/vue-awesome-swiper\" target=\"_blank\" rel=\"noopener\">vue-awesome-swiper</a> - vue.js触摸滑动组件</li>\n<li><a href=\"https://github.com/staskjs/vue-slick\" target=\"_blank\" rel=\"noopener\">vue-slick</a> - 实现流畅轮播框的vue组件</li>\n<li><a href=\"https://github.com/ElemeFE/vue-swipe\" target=\"_blank\" rel=\"noopener\">vue-swipe</a> - VueJS触摸滑块</li>\n<li><a href=\"https://github.com/weilao/vue-swiper\" target=\"_blank\" rel=\"noopener\">vue-swiper</a> - 易于使用的滑块组件</li>\n<li><a href=\"https://github.com/littlewin-wang/vue-images\" target=\"_blank\" rel=\"noopener\">vue-images</a> - 显示一组图片的lightbox组件</li>\n<li><a href=\"https://github.com/Wlada/vue-carousel-3d\" target=\"_blank\" rel=\"noopener\">vue-carousel-3d</a> - VueJS的3D轮播组件</li>\n<li><a href=\"https://github.com/hilongjw/vue-slide\" target=\"_blank\" rel=\"noopener\">vue-slide</a> - vue轻量级滑动组件</li>\n<li><a href=\"https://github.com/warpcgd/vue-slider\" target=\"_blank\" rel=\"noopener\">vue-slider</a> - vue 滑动组件</li>\n<li><a href=\"https://github.com/shiye515/vue-m-carousel\" target=\"_blank\" rel=\"noopener\">vue-m-carousel</a> - vue 移动端轮播组件</li>\n<li><a href=\"https://github.com/ibufu/dd-vue-component\" target=\"_blank\" rel=\"noopener\">dd-vue-component</a> - 订单来了的公共组件库</li>\n<li><a href=\"https://github.com/shhdgit/vue-easy-slider\" target=\"_blank\" rel=\"noopener\">vue-easy-slider</a> - Vue 2.x的滑块组件</li>\n</ol>\n<h3 id=\"图表\"><a href=\"#图表\" class=\"headerlink\" title=\"图表\"></a>图表</h3><ol>\n<li><a href=\"https://github.com/ratiw/vue-table\" target=\"_blank\" rel=\"noopener\">vue-table</a> - 简化数据表格</li>\n<li><a href=\"https://github.com/apertureless/vue-chartjs\" target=\"_blank\" rel=\"noopener\">vue-chartjs</a> - vue中的Chartjs的封装</li>\n<li><a href=\"https://github.com/hchstera/vue-charts\" target=\"_blank\" rel=\"noopener\">vue-charts</a> - 轻松渲染一个图表</li>\n<li><a href=\"https://github.com/miaolz123/vue-chart\" target=\"_blank\" rel=\"noopener\">vue-chart</a> - 强大的高速的vue图表解析</li>\n<li><a href=\"https://github.com/weizhenye/vue-highcharts\" target=\"_blank\" rel=\"noopener\">vue-highcharts</a> - HighCharts组件</li>\n<li><a href=\"https://github.com/vue-bulma/chartjs\" target=\"_blank\" rel=\"noopener\">chartjs</a> - Vue Bulma的chartjs组件</li>\n<li><a href=\"https://github.com/ankane/vue-chartkick\" target=\"_blank\" rel=\"noopener\">vue-chartkick</a> - VueJS一行代码实现优美图表</li>\n</ol>\n<h3 id=\"日历\"><a href=\"#日历\" class=\"headerlink\" title=\"日历\"></a>日历</h3><ol>\n<li><a href=\"https://github.com/jinzhe/vue-calendar\" target=\"_blank\" rel=\"noopener\">vue-calendar</a> - 日期选择插件</li>\n<li><a href=\"https://github.com/hilongjw/vue-datepicker\" target=\"_blank\" rel=\"noopener\">vue-datepicker</a> - 日历和日期选择组件</li>\n<li><a href=\"https://github.com/Haixing-Hu/vue-datetime-picker\" target=\"_blank\" rel=\"noopener\">vue-datetime-picker</a> - 日期时间选择控件</li>\n<li><a href=\"https://github.com/icai/vue2-calendar\" target=\"_blank\" rel=\"noopener\">vue2-calendar</a> - 支持lunar和日期事件的日期选择器</li>\n<li><a href=\"https://github.com/Wanderxx/vue-fullcalendar\" target=\"_blank\" rel=\"noopener\">vue-fullcalendar</a> - 基于vue.js的全日历组件</li>\n<li><a href=\"https://github.com/weifeiyue/vue-datepicker\" target=\"_blank\" rel=\"noopener\">vue-datepicker</a> - 漂亮的Vue日期选择器组件</li>\n<li><a href=\"https://github.com/vue-bulma/datepicker\" target=\"_blank\" rel=\"noopener\">datepicker</a> - 基于flatpickr的时间选择组件</li>\n<li><a href=\"https://github.com/phoenixwong/vue2-timepicker\" target=\"_blank\" rel=\"noopener\">vue2-timepicker</a> - 下拉时间选择器</li>\n<li><a href=\"https://github.com/Bubblings/vue-date-picker\" target=\"_blank\" rel=\"noopener\">vue-date-picker</a> - VueJS日期选择器组件</li>\n<li><a href=\"https://github.com/dai-siki/vue-datepicker-simple\" target=\"_blank\" rel=\"noopener\">vue-datepicker-simple</a> - 基于vue的日期选择器</li>\n</ol>\n<h3 id=\"地址选择\"><a href=\"#地址选择\" class=\"headerlink\" title=\"地址选择\"></a>地址选择</h3><ol>\n<li><a href=\"https://github.com/xinxingyu/vue-city\" target=\"_blank\" rel=\"noopener\">vue-city</a> - 城市选择器</li>\n<li><a href=\"https://github.com/QingWei-Li/vue-region-picker\" target=\"_blank\" rel=\"noopener\">vue-region-picker</a> - 选择中国的省份市和地区</li>\n</ol>\n<h3 id=\"地图\"><a href=\"#地图\" class=\"headerlink\" title=\"地图\"></a>地图</h3><ol>\n<li><a href=\"https://github.com/ElemeFE/vue-amap\" target=\"_blank\" rel=\"noopener\">vue-amap</a> - 基于Vue 2和高德地图的地图组件</li>\n<li><a href=\"https://github.com/GuillaumeLeclerc/vue-google-maps\" target=\"_blank\" rel=\"noopener\">vue-google-maps</a> - 带有双向数据绑定Google地图组件</li>\n<li><a href=\"https://github.com/Dafrok/vue-baidu-map\" target=\"_blank\" rel=\"noopener\">vue-baidu-map</a>- 基于 Vue 2的百度地图组件库</li>\n<li><a href=\"https://github.com/doodlewind/vue-cmap\" target=\"_blank\" rel=\"noopener\">vue-cmap</a> - Vue China map可视化组件</li>\n</ol>\n<h3 id=\"播放器\"><a href=\"#播放器\" class=\"headerlink\" title=\"播放器\"></a>播放器</h3><ol>\n<li><a href=\"https://github.com/surmon-china/vue-video-player\" target=\"_blank\" rel=\"noopener\">vue-video-player</a> - VueJS视频及直播播放器</li>\n<li><a href=\"https://github.com/hilongjw/vue-video\" target=\"_blank\" rel=\"noopener\">vue-video</a> - Vue.js的HTML5视频播放器</li>\n<li><a href=\"https://github.com/yunyi1895/vue-music-master\" target=\"_blank\" rel=\"noopener\">vue-music-master</a> - vue手机端网页音乐播放器</li>\n</ol>\n<h3 id=\"滚动scroll\"><a href=\"#滚动scroll\" class=\"headerlink\" title=\"滚动scroll\"></a>滚动scroll</h3><ol>\n<li><a href=\"https://github.com/wangdahoo/vue-scroller\" target=\"_blank\" rel=\"noopener\">vue-scroller</a> - Vonic UI的功能性组件</li>\n<li><a href=\"https://github.com/egoist/vue-mugen-scroll\" target=\"_blank\" rel=\"noopener\">vue-mugen-scroll</a> - 无限滚动组件</li>\n<li><a href=\"https://github.com/PeachScript/vue-infinite-loading\" target=\"_blank\" rel=\"noopener\">vue-infinite-loading</a> - VueJS的无限滚动插件</li>\n<li><a href=\"https://github.com/Akryum/vue-virtual-scroller\" target=\"_blank\" rel=\"noopener\">vue-virtual-scroller</a> - 带任意数目数据的顺畅的滚动</li>\n<li><a href=\"https://github.com/ElemeFE/vue-infinite-scroll\" target=\"_blank\" rel=\"noopener\">vue-infinite-scroll</a> - VueJS的无限滚动指令</li>\n<li><a href=\"https://github.com/BosNaufal/vue-scrollbar\" target=\"_blank\" rel=\"noopener\">vue-scrollbar</a> - 最简单的滚动区域组件</li>\n<li><a href=\"https://github.com/suguangwen/vue-scroll\" target=\"_blank\" rel=\"noopener\">vue-scroll</a> - vue滚动</li>\n<li><a href=\"https://github.com/bajian/vue-pull-to-refresh\" target=\"_blank\" rel=\"noopener\">vue-pull-to-refresh</a> - Vue2的上拉下拉</li>\n<li><a href=\"https://github.com/mint-ui/mint-loadmore\" target=\"_blank\" rel=\"noopener\">mint-loadmore</a> - VueJS的双向下拉刷新组件</li>\n<li><a href=\"https://github.com/Teddy-Zhu/vue-smoothscroll\" target=\"_blank\" rel=\"noopener\">vue-smoothscroll</a> - smoothscroll的VueJS版本</li>\n</ol>\n<h3 id=\"文件上传\"><a href=\"#文件上传\" class=\"headerlink\" title=\"文件上传\"></a>文件上传</h3><ol>\n<li><a href=\"https://github.com/lian-yue/vue-upload-component\" target=\"_blank\" rel=\"noopener\">vue-upload-component</a> - Vuejs文件上传组件</li>\n<li><a href=\"https://github.com/Vanthink-UED/vue-core-image-upload\" target=\"_blank\" rel=\"noopener\">vue-core-image-upload</a> - 轻量级的vue上传插件</li>\n<li><a href=\"https://github.com/rowanwins/vue-dropzone\" target=\"_blank\" rel=\"noopener\">vue-dropzone</a> - 用于文件上传的Vue组件</li>\n</ol>\n<h3 id=\"图片处理\"><a href=\"#图片处理\" class=\"headerlink\" title=\"图片处理\"></a>图片处理</h3><ol>\n<li><a href=\"https://github.com/JALBAA/vue-lazyload-img\" target=\"_blank\" rel=\"noopener\">vue-lazyload-img</a> - 移动优化的vue图片懒加载插件</li>\n<li><a href=\"https://github.com/dai-siki/vue-image-crop-upload\" target=\"_blank\" rel=\"noopener\">vue-image-crop-upload</a> - vue图片剪裁上传组件</li>\n<li><a href=\"https://github.com/MMF-FE/vue-svgicon\" target=\"_blank\" rel=\"noopener\">vue-svgicon</a> - 创建svg图标组件的工具</li>\n<li><a href=\"https://github.com/JackGit/vue-img-loader\" target=\"_blank\" rel=\"noopener\">vue-img-loader</a> - 图片加载UI组件</li>\n<li><a href=\"https://github.com/legeneek/vue-image-clip\" target=\"_blank\" rel=\"noopener\">vue-image-clip</a>- 基于vue的图像剪辑组件</li>\n<li><a href=\"https://github.com/MatteoGabriele/vue-progressive-image\" target=\"_blank\" rel=\"noopener\">vue-progressive-image</a> - Vue的渐进图像加载插件</li>\n</ol>\n<h3 id=\"提示\"><a href=\"#提示\" class=\"headerlink\" title=\"提示\"></a>提示</h3><ol>\n<li><a href=\"https://github.com/ElemeFE/vue-toast-mobile\" target=\"_blank\" rel=\"noopener\">vue-toast-mobile</a> - VueJS的toast插件</li>\n<li><a href=\"https://github.com/ElemeFE/vue-msgbox\" target=\"_blank\" rel=\"noopener\">vue-msgbox</a> - vuejs的消息框</li>\n<li><a href=\"https://github.com/Akryum/vue-tooltip\" target=\"_blank\" rel=\"noopener\">vue-tooltip</a> - 带绑定信息提示的提示工具</li>\n<li><a href=\"https://github.com/aweiu/vue-verify-pop\" target=\"_blank\" rel=\"noopener\">vue-verify-pop</a> - 带气泡提示的vue校验插件</li>\n</ol>\n<h3 id=\"进度条\"><a href=\"#进度条\" class=\"headerlink\" title=\"进度条\"></a>进度条</h3><ol>\n<li><a href=\"https://github.com/wyzant-dev/vue-radial-progress\" target=\"_blank\" rel=\"noopener\">vue-radial-progress</a> - Vue.js放射性进度条组件</li>\n<li><a href=\"https://github.com/hilongjw/vue-progressbar\" target=\"_blank\" rel=\"noopener\">vue-progressbar</a> - vue轻量级进度条</li>\n<li><a href=\"https://github.com/BosNaufal/vue2-loading-bar\" target=\"_blank\" rel=\"noopener\">vue2-loading-bar</a> - 最简单的仿Youtube加载条视图</li>\n</ol>\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><ol>\n<li><a href=\"https://github.com/hilongjw/vue-dragging\" target=\"_blank\" rel=\"noopener\">vue-dragging</a>- 使元素可以拖拽</li>\n<li><a href=\"https://github.com/David-Desmaisons/Vue.Draggable\" target=\"_blank\" rel=\"noopener\">Vue.Draggable</a>- 实现拖放和视图模型数组同步</li>\n<li><a href=\"https://github.com/alessiomaffeis/vue-picture-input\" target=\"_blank\" rel=\"noopener\">vue-picture-input</a>- 移动友好的图片文件输入组件</li>\n<li><a href=\"https://github.com/ccforward/rubik\" target=\"_blank\" rel=\"noopener\">rubik</a>- 基于Vuejs2的开源 UI 组件库</li>\n<li><a href=\"https://github.com/OYsun/VueStar\" target=\"_blank\" rel=\"noopener\">VueStar</a>- 带星星动画的vue点赞按钮</li>\n<li><a href=\"https://github.com/matfish2/vue-tables-2\" target=\"_blank\" rel=\"noopener\">vue-tables-2</a>- 显示数据的bootstrap样式网格</li>\n<li><a href=\"https://github.com/SimonZhangITer/DataVisualization\" target=\"_blank\" rel=\"noopener\">DataVisualization</a>- 数据可视化</li>\n<li><a href=\"https://github.com/Alex-fun/vue-drag-and-drop-list\" target=\"_blank\" rel=\"noopener\">vue-drag-and-drop-list</a>- 创建排序列表的Vue指令</li>\n<li><a href=\"https://github.com/vuwe/vuwe\" target=\"_blank\" rel=\"noopener\">vuwe</a>- 基于微信WeUI所开发的专用于Vue2的组件库</li>\n<li><a href=\"https://github.com/cngu/vue-typer\" target=\"_blank\" rel=\"noopener\">vue-typer</a>- 模拟用户输入选择和删除文本的Vue组件</li>\n<li><a href=\"https://github.com/NewDadaFE/vue-impression\" target=\"_blank\" rel=\"noopener\">vue-impression</a>- 移动Vuejs2 UI元素</li>\n<li><a href=\"https://github.com/galenyuan/vue-datatable\" target=\"_blank\" rel=\"noopener\">vue-datatable</a>- 使用Vuejs创建的DataTableView</li>\n<li><a href=\"https://github.com/santiblanko/vue-instant\" target=\"_blank\" rel=\"noopener\">vue-instant</a>- 轻松创建自动提示的自定义搜索控件</li>\n<li><a href=\"https://github.com/NightCatSama/vue-slider-component\" target=\"_blank\" rel=\"noopener\">vue-slider-component</a>- 在vue1和vue2中使用滑块</li>\n<li><a href=\"https://github.com/surmon-china/vue-touch-ripple\" target=\"_blank\" rel=\"noopener\">vue-touch-ripple</a>- vuejs的触摸ripple组件</li>\n<li><a href=\"https://github.com/Kocisov/coffeebreak\" target=\"_blank\" rel=\"noopener\">coffeebreak</a>- 实时编辑CSS组件工具</li>\n<li><a href=\"https://github.com/coderdiaz/vue-datasource\" target=\"_blank\" rel=\"noopener\">vue-datasource</a>- 创建VueJS动态表格</li>\n<li><a href=\"https://github.com/vue-bulma/handsontable\" target=\"_blank\" rel=\"noopener\">handsontable</a>- 网页表格组件</li>\n<li><a href=\"https://github.com/jbaysolutions/vue-bootstrap-table\" target=\"_blank\" rel=\"noopener\">vue-bootstrap-table</a>- 可排序可检索的表格</li>\n<li><a href=\"https://github.com/phanan/vue-google-signin-button\" target=\"_blank\" rel=\"noopener\">vue-google-signin-button</a>- 导入谷歌登录按钮</li>\n<li><a href=\"https://github.com/bkzl/vue-float-label\" target=\"_blank\" rel=\"noopener\">vue-float-label</a>- VueJS浮动标签模式</li>\n<li><a href=\"https://github.com/Ginhing/vue-tagsinput\" target=\"_blank\" rel=\"noopener\">vue-tagsinput</a>- 基于VueJS的标签组件</li>\n<li><a href=\"https://github.com/nicolasbeauvais/vue-social-sharing\" target=\"_blank\" rel=\"noopener\">vue-social-sharing</a>- 社交分享组件</li>\n<li><a href=\"https://github.com/myronliu347/vue-popup-mixin\" target=\"_blank\" rel=\"noopener\">vue-popup-mixin</a>- 用于管理弹出框的遮盖层</li>\n<li><a href=\"https://github.com/fangyongbao/cubeex\" target=\"_blank\" rel=\"noopener\">cubeex</a>- 包含一套完整的移动UI</li>\n<li><a href=\"https://github.com/CroudSupport/vue-fullcalendar\" target=\"_blank\" rel=\"noopener\">vue-fullcalendar</a>- vue FullCalendar封装</li>\n<li><a href=\"https://github.com/loujiayu/vue-material-design\" target=\"_blank\" rel=\"noopener\">vue-material-design</a>- Vue MD风格组件</li>\n<li><a href=\"https://github.com/bbonnin/vue-morris\" target=\"_blank\" rel=\"noopener\">vue-morris</a>- Vuejs组件封装Morrisjs库</li>\n<li><a href=\"https://github.com/tianyong90/we-vue\" target=\"_blank\" rel=\"noopener\">we-vue</a>- Vue2及weui1开发的组件</li>\n<li><a href=\"https://github.com/matfish2/vue-form-2\" target=\"_blank\" rel=\"noopener\">vue-form-2</a>- 全面的HTML表单管理的解决方案</li>\n<li><a href=\"https://github.com/vue-comps/vue-side-nav\" target=\"_blank\" rel=\"noopener\">vue-side-nav</a>- 响应式的侧边导航</li>\n<li><a href=\"https://github.com/mint-ui/mint-indicator\" target=\"_blank\" rel=\"noopener\">mint-indicator</a>- VueJS移动加载指示器插件</li>\n<li><a href=\"https://github.com/BosNaufal/vue-ripple\" target=\"_blank\" rel=\"noopener\">vue-ripple</a>- 制作谷歌MD风格涟漪效果的Vue组件</li>\n<li><a href=\"https://github.com/icebob/vue-touch-keyboard\" target=\"_blank\" rel=\"noopener\">vue-touch-keyboard</a>- VueJS虚拟键盘组件</li>\n<li><a href=\"https://github.com/vue-comps/vue-parallax\" target=\"_blank\" rel=\"noopener\">vue-parallax</a>- 整洁的视觉效果</li>\n<li><a href=\"https://github.com/eduardostuart/vue-typewriter\" target=\"_blank\" rel=\"noopener\">vue-typewriter</a>- vue组件类型</li>\n<li><a href=\"https://github.com/Treri/vue-ios-alertview\" target=\"_blank\" rel=\"noopener\">vue-ios-alertview</a>- iOS7+ 风格的alertview服务</li>\n<li><a href=\"https://github.com/yeseason/paco-ui-vue\" target=\"_blank\" rel=\"noopener\">paco-ui-vue</a>- PACOUI的vue组件</li>\n<li><a href=\"https://github.com/steven5538/vue-button\" target=\"_blank\" rel=\"noopener\">vue-button</a>- Vue按钮组件</li>\n</ol>\n<h2 id=\"开发框架\"><a href=\"#开发框架\" class=\"headerlink\" title=\"开发框架\"></a>开发框架</h2><ol>\n<li><a href=\"https://github.com/vuejs/vue\" target=\"_blank\" rel=\"noopener\">vue.js</a> - 流行的轻量高效的前端组件化方案</li>\n<li><a href=\"https://github.com/fundon/vue-admin\" target=\"_blank\" rel=\"noopener\">vue-admin</a> - Vue管理面板框架</li>\n<li><a href=\"https://github.com/SimulatedGREG/electron-vue\" target=\"_blank\" rel=\"noopener\">electron-vue</a> - Electron及VueJS快速启动样板</li>\n<li><a href=\"https://github.com/petervmeijgaard/vue-2.0-boilerplate\" target=\"_blank\" rel=\"noopener\">vue-2.0-boilerplate</a> - Vue2单页应用样板</li>\n<li><a href=\"https://github.com/rodzzlessa24/vue-webgulp\" target=\"_blank\" rel=\"noopener\">vue-webgulp</a> - 仿VueJS Vue loader示例</li>\n<li><a href=\"https://github.com/wangxg2016/vue-bulma\" target=\"_blank\" rel=\"noopener\">vue-bulma</a> - 轻量级高性能MVVM Admin UI框架</li>\n<li><a href=\"https://github.com/hanan198501/vue-spa-template\" target=\"_blank\" rel=\"noopener\">vue-spa-template</a> - 前后端分离后的单页应用开发</li>\n<li><a href=\"https://github.com/nolimits4web/Framework7-Vue\" target=\"_blank\" rel=\"noopener\">Framework7-Vue</a> - VueJS与Framework7结合</li>\n<li><a href=\"https://github.com/Metnew/vue-element-starter\" target=\"_blank\" rel=\"noopener\">vue-element-starter</a> - vue启动页</li>\n</ol>\n<h2 id=\"实用库\"><a href=\"#实用库\" class=\"headerlink\" title=\"实用库\"></a>实用库</h2><ol>\n<li><a href=\"https://github.com/monterail/vuelidate\" target=\"_blank\" rel=\"noopener\">vuelidate</a> - 简单轻量级的基于模块的Vue.js验证</li>\n<li><a href=\"https://github.com/zerqu/qingcheng\" target=\"_blank\" rel=\"noopener\">qingcheng</a> - qingcheng主题</li>\n<li><a href=\"https://github.com/vuejs/vuex\" target=\"_blank\" rel=\"noopener\">vuex</a> - 专为 Vue.js 应用程序开发的状态管理模式</li>\n<li><a href=\"https://github.com/imcvampire/vue-axios\" target=\"_blank\" rel=\"noopener\">vue-axios</a> - 将axios整合到VueJS的封装</li>\n<li><a href=\"https://github.com/ElemeFE/vue-desktop\" target=\"_blank\" rel=\"noopener\">vue-desktop</a> - 创建管理面板网站的UI库</li>\n<li><a href=\"https://github.com/declandewet/vue-meta\" target=\"_blank\" rel=\"noopener\">vue-meta</a> - 管理app的meta信息</li>\n<li><a href=\"https://github.com/eddyerburgh/avoriaz\" target=\"_blank\" rel=\"noopener\">avoriaz</a> - VueJS测试实用工具库</li>\n<li><a href=\"https://github.com/lmk123/vue-framework7\" target=\"_blank\" rel=\"noopener\">vue-framework7</a> - 结合VueJS使用的Framework7组件</li>\n<li><a href=\"https://github.com/yeyuqiudeng/vue-lazy-render\" target=\"_blank\" rel=\"noopener\">vue-lazy-render</a> - 用于Vue组件的延迟渲染</li>\n<li><a href=\"https://github.com/cenkai88/vue-svg-icon\" target=\"_blank\" rel=\"noopener\">vue-svg-icon</a> - vue2的可变彩色svg图标方案</li>\n<li><a href=\"https://github.com/Sopamo/vue-online\" target=\"_blank\" rel=\"noopener\">vue-online</a> - reactive的在线和离线组件</li>\n<li><a href=\"https://github.com/apertureless/vue-password-strength-meter\" target=\"_blank\" rel=\"noopener\">vue-password-strength-meter</a> - 交互式密码强度计</li>\n<li><a href=\"https://github.com/QingWei-Li/vuep\" target=\"_blank\" rel=\"noopener\">vuep</a> - 用实时编辑和预览来渲染Vue组件</li>\n<li><a href=\"https://github.com/Coffcer/vue-bootstrap-modal\" target=\"_blank\" rel=\"noopener\">vue-bootstrap-modal</a> - vue的Bootstrap样式组件</li>\n<li><a href=\"https://github.com/lynzz/element-admin\" target=\"_blank\" rel=\"noopener\">element-admin</a> - 支持 vuecli 的 Element UI 的后台模板</li>\n<li><a href=\"https://github.com/iFgR/vue-shortkey\" target=\"_blank\" rel=\"noopener\">vue-shortkey</a> - 应用于Vue.js的Vue-ShortKey 插件</li>\n<li><a href=\"https://github.com/vue-bulma/cleave\" target=\"_blank\" rel=\"noopener\">cleave</a> - 基于cleave.js的Cleave组件</li>\n<li><a href=\"https://github.com/cklmercer/vue-events\" target=\"_blank\" rel=\"noopener\">vue-events</a> - 简化事件的VueJS插件</li>\n<li><a href=\"https://github.com/FranckFreiburger/http-vue-loader\" target=\"_blank\" rel=\"noopener\">http-vue-loader</a> - 从html及js环境加载vue文件</li>\n<li><a href=\"https://github.com/SimulatedGREG/vue-electron\" target=\"_blank\" rel=\"noopener\">vue-electron</a> - 将选择的API封装到Vue对象中的插件</li>\n<li><a href=\"https://github.com/weinot/vue-router-transition\" target=\"_blank\" rel=\"noopener\">vue-router-transition</a> - 页面过渡插件</li>\n<li><a href=\"https://github.com/gocanto/vuemit\" target=\"_blank\" rel=\"noopener\">vuemit</a> - 处理VueJS事件</li>\n<li><a href=\"https://github.com/kartsims/vue-cordova\" target=\"_blank\" rel=\"noopener\">vue-cordova</a> - Cordova的VueJS插件</li>\n<li><a href=\"https://github.com/superman66/vue-qart\" target=\"_blank\" rel=\"noopener\">vue-qart</a> - 用于qartjs的Vue2指令</li>\n<li><a href=\"https://github.com/icebob/vue-websocket\" target=\"_blank\" rel=\"noopener\">vue-websocket</a> - VueJS的Websocket插件</li>\n<li><a href=\"https://github.com/mlyknown/vue-gesture\" target=\"_blank\" rel=\"noopener\">vue-gesture</a> - VueJS的手势事件插件</li>\n<li><a href=\"https://github.com/pinguinjkeke/vue-local-storage\" target=\"_blank\" rel=\"noopener\">vue-local-storage</a> - 具有类型支持的Vuejs本地储存插件</li>\n<li><a href=\"https://github.com/gocanto/lazy-vue\" target=\"_blank\" rel=\"noopener\">lazy-vue</a> - 懒加载图片</li>\n<li><a href=\"https://github.com/yodfz/vue-lazyloadImg\" target=\"_blank\" rel=\"noopener\">vue-lazyloadImg</a> - 图片懒加载插件</li>\n<li><a href=\"https://github.com/yangmingshan/vue-bus\" target=\"_blank\" rel=\"noopener\">vue-bus</a> - VueJS的事件总线</li>\n<li><a href=\"https://github.com/Akryum/vue-observe-visibility\" target=\"_blank\" rel=\"noopener\">vue-observe-visibility</a> - 当元素在页面上可见或隐藏时检测</li>\n<li><a href=\"https://github.com/se-panfilov/vue-notifications\" target=\"_blank\" rel=\"noopener\">vue-notifications</a> - 非阻塞通知库</li>\n<li><a href=\"https://github.com/AStaroverov/v-media-query\" target=\"_blank\" rel=\"noopener\">v-media-query</a> - vue中添加用于配合媒体查询的方法</li>\n<li><a href=\"https://github.com/xanf/vuex-shared-mutations\" target=\"_blank\" rel=\"noopener\">vuex-shared-mutations</a> - 分享某种Vuex mutations</li>\n<li><a href=\"https://github.com/Coffcer/vue-lazy-component\" target=\"_blank\" rel=\"noopener\">vue-lazy-component</a> - 懒加载组件或者元素的Vue指令</li>\n<li><a href=\"https://github.com/ropbla9/vue-reactive-storage\" target=\"_blank\" rel=\"noopener\">vue-reactive-storage</a> - vue插件的Reactive层</li>\n<li><a href=\"https://github.com/HerringtonDarkholme/vue-ts-loader\" target=\"_blank\" rel=\"noopener\">vue-ts-loader</a> - 在Vue装载机检查脚本</li>\n<li><a href=\"https://github.com/matfish2/vue-pagination-2\" target=\"_blank\" rel=\"noopener\">vue-pagination-2</a> - 简单通用的分页组件</li>\n<li><a href=\"https://github.com/dkfbasel/vuex-i18n\" target=\"_blank\" rel=\"noopener\">vuex-i18n</a> - 定位插件</li>\n<li><a href=\"https://github.com/David-Desmaisons/Vue.resize\" target=\"_blank\" rel=\"noopener\">Vue.resize</a> - 检测HTML调整大小事件的vue指令</li>\n<li><a href=\"https://github.com/vue-comps/vue-zoombox\" target=\"_blank\" rel=\"noopener\">vue-zoombox</a> - 一个高级zoombox</li>\n<li><a href=\"https://github.com/LeoHuiyi/leo-vue-validator\" target=\"_blank\" rel=\"noopener\">leo-vue-validator</a> - 异步的表单验证组件</li>\n<li><a href=\"https://github.com/vue-bulma/modal\" target=\"_blank\" rel=\"noopener\">modal</a> - Vue Bulma的modal组件</li>\n<li><a href=\"https://github.com/irwansyahwii/Famous-Vue\" target=\"_blank\" rel=\"noopener\">Famous-Vue</a> - Famous库的vue组件</li>\n<li><a href=\"https://github.com/syropian/vue-input-autosize\" target=\"_blank\" rel=\"noopener\">vue-input-autosize</a> - 基于内容自动调整文本输入的大小</li>\n<li><a href=\"https://github.com/BosNaufal/vue-file-base64\" target=\"_blank\" rel=\"noopener\">vue-file-base64</a> - 将文件转换为Base64的vue组件</li>\n<li><a href=\"https://github.com/MetinSeylan/Vue-Easy-Validator\" target=\"_blank\" rel=\"noopener\">Vue-Easy-Validator</a> - 简单的表单验证</li>\n<li><a href=\"https://github.com/imcvampire/vue-truncate-filter\" target=\"_blank\" rel=\"noopener\">vue-truncate-filter</a> - 截断字符串的VueJS过滤器</li>\n</ol>\n<h2 id=\"服务端\"><a href=\"#服务端\" class=\"headerlink\" title=\"服务端\"></a>服务端</h2><ol>\n<li><a href=\"https://github.com/hilongjw/vue-ssr\" target=\"_blank\" rel=\"noopener\">vue-ssr</a> - 结合Express使用Vue2服务端渲染</li>\n<li><a href=\"https://github.com/nuxt/nuxt.js\" target=\"_blank\" rel=\"noopener\">nuxt.js</a> - 用于服务器渲染Vue app的最小化框架</li>\n<li><a href=\"https://github.com/ccforward/vue-ssr\" target=\"_blank\" rel=\"noopener\">vue-ssr</a> - 非常简单的VueJS服务器端渲染模板</li>\n<li><a href=\"https://github.com/leaves4j/vue-easy-renderer\" target=\"_blank\" rel=\"noopener\">vue-easy-renderer</a> - Nodejs服务端渲染</li>\n<li><a href=\"https://github.com/danmademe/express-vue\" target=\"_blank\" rel=\"noopener\">express-vue</a> - 简单的使用服务器端渲染vue.js</li>\n</ol>\n<h2 id=\"辅助工具\"><a href=\"#辅助工具\" class=\"headerlink\" title=\"辅助工具\"></a>辅助工具</h2><ol>\n<li><a href=\"https://github.com/MiCottOn/DejaVue\" target=\"_blank\" rel=\"noopener\">DejaVue</a> - Vuejs可视化及压力测试</li>\n<li><a href=\"https://github.com/NetanelBasal/vue-generate-component\" target=\"_blank\" rel=\"noopener\">vue-generate-component</a> - 轻松生成Vue js组件的CLI工具</li>\n<li><a href=\"https://github.com/OYsun/vscode-VueHelper\" target=\"_blank\" rel=\"noopener\">vscode-VueHelper</a> - 目前vscode最好的vue代码提示插件</li>\n<li><a href=\"https://github.com/vue-play/vue-play\" target=\"_blank\" rel=\"noopener\">vue-play</a> - 展示Vue组件的最小化框架</li>\n<li><a href=\"https://github.com/MetinSeylan/VuejsStarterKit\" target=\"_blank\" rel=\"noopener\">VuejsStarterKit</a> - vuejs starter套件</li>\n<li><a href=\"https://github.com/xwpongithub/vue-multipage-cli\" target=\"_blank\" rel=\"noopener\">vue-multipage-cli</a> - 简单的多页CLI</li>\n</ol>\n<h2 id=\"应用实例\"><a href=\"#应用实例\" class=\"headerlink\" title=\"应用实例\"></a>应用实例</h2><ol>\n<li><a href=\"https://github.com/pagekit/pagekit\" target=\"_blank\" rel=\"noopener\">pagekit</a> - 轻量级的CMS建站系统</li>\n<li><a href=\"https://github.com/Vuedo/vuedo\" target=\"_blank\" rel=\"noopener\">vuedo</a> - 博客平台</li>\n<li><a href=\"https://github.com/phanan/koel\" target=\"_blank\" rel=\"noopener\">koel</a> - 基于网络的个人音频流媒体服务</li>\n<li><a href=\"https://github.com/ycwalker/CMS-of-Blog\" target=\"_blank\" rel=\"noopener\">CMS-of-Blog</a> - 博客内容管理器</li>\n<li><a href=\"https://github.com/lzxb/vue-cnode\" target=\"_blank\" rel=\"noopener\">vue-cnode</a> - 重写vue版cnode社区</li>\n<li><a href=\"https://github.com/viko16/vue-ghpages-blog\" target=\"_blank\" rel=\"noopener\">vue-ghpages-blog</a> - 依赖GitHub Pages无需本地生成的静态博客</li>\n<li><a href=\"https://github.com/wh469012917/swoole-vue-webim\" target=\"_blank\" rel=\"noopener\">swoole-vue-webim</a> - Web版的聊天应用</li>\n<li><a href=\"https://github.com/sapjax/fewords\" target=\"_blank\" rel=\"noopener\">fewords</a> - 功能极其简单的笔记本</li>\n<li><a href=\"https://github.com/jackhutu/jackblog-vue\" target=\"_blank\" rel=\"noopener\">jackblog-vue</a> - 个人博客系统</li>\n<li><a href=\"https://github.com/surmon-china/vue-blog\" target=\"_blank\" rel=\"noopener\">vue-blog</a> - 使用Vue2.0 和Vuex的vue-blog</li>\n<li><a href=\"https://github.com/thelinuxlich/vue-dashing-js\" target=\"_blank\" rel=\"noopener\">vue-dashing-js</a> - nuvo-dashing-js的fork</li>\n<li><a href=\"https://github.com/mrgodhani/rss-reader\" target=\"_blank\" rel=\"noopener\">rss-reader</a> - 简单的rss阅读器</li>\n</ol>\n<h2 id=\"Demo示例\"><a href=\"#Demo示例\" class=\"headerlink\" title=\"Demo示例\"></a>Demo示例</h2><ol>\n<li><a href=\"https://github.com/liangxiaojuan/eleme\" target=\"_blank\" rel=\"noopener\">eleme</a> - 高仿饿了么app商家详情</li>\n<li><a href=\"https://github.com/javaSwing/NeteaseCloudWebApp\" target=\"_blank\" rel=\"noopener\">NeteaseCloudWebApp</a> - 高仿网易云音乐的webapp</li>\n<li><a href=\"https://github.com/hilongjw/vue-zhihu-daily\" target=\"_blank\" rel=\"noopener\">vue-zhihu-daily</a> - 知乎日报 with Vuejs</li>\n<li><a href=\"https://github.com/shinygang/Vue-cnodejs\" target=\"_blank\" rel=\"noopener\">Vue-cnodejs</a> - 基于vue重写Cnodejs.org的webapp</li>\n<li><a href=\"https://github.com/lzxb/vue2-demo\" target=\"_blank\" rel=\"noopener\">vue2-demo</a> - 从零构建vue2 + vue-router + vuex 开发环境</li>\n<li><a href=\"https://github.com/useryangtao/vue-wechat\" target=\"_blank\" rel=\"noopener\">vue-wechat</a> - vue.js开发微信app界面</li>\n<li><a href=\"https://github.com/Sioxas/vue-music\" target=\"_blank\" rel=\"noopener\">vue-music</a> - Vue 音乐搜索播放</li>\n<li><a href=\"https://github.com/zhengguorong/maizuo\" target=\"_blank\" rel=\"noopener\">maizuo</a> - vue/vuex/redux仿卖座网</li>\n<li><a href=\"https://github.com/kenberkeley/vue-demo\" target=\"_blank\" rel=\"noopener\">vue-demo</a> - vue简易留言板</li>\n<li><a href=\"https://github.com/codecasts/spa-starter-kit\" target=\"_blank\" rel=\"noopener\">spa-starter-kit</a> - 单页应用启动套件</li>\n<li><a href=\"https://github.com/yatessss/zhihudaily-vue\" target=\"_blank\" rel=\"noopener\">zhihudaily-vue</a> - 知乎日报web版</li>\n<li><a href=\"https://github.com/jiakeqi/douban\" target=\"_blank\" rel=\"noopener\">douban</a> - 模仿豆瓣前端</li>\n<li><a href=\"https://github.com/liangxiaojuan/vue-Meizi\" target=\"_blank\" rel=\"noopener\">vue-Meizi</a> - vue最新实战项目</li>\n<li><a href=\"https://github.com/lavyun/vue-demo-kugou\" target=\"_blank\" rel=\"noopener\">vue-demo-kugou</a> - vuejs仿写酷狗音乐webapp</li>\n<li><a href=\"https://github.com/canfoo/vue2.0-taopiaopiao\" target=\"_blank\" rel=\"noopener\">vue2.0-taopiaopiao</a> - vue2.0与express构建淘票票页面</li>\n<li><a href=\"https://github.com/yjj5855/node-vue-server-webpack\" target=\"_blank\" rel=\"noopener\">node-vue-server-webpack</a> - Node.js+Vue.js+webpack快速开发框架</li>\n<li><a href=\"https://github.com/SimonZhangITer/VueDemo_Sell_Eleme\" target=\"_blank\" rel=\"noopener\">VueDemo_Sell_Eleme</a> - Vue2高仿饿了么外卖平台</li>\n<li><a href=\"https://github.com/jiangjiu/vue-leancloud-blog\" target=\"_blank\" rel=\"noopener\">vue-leancloud-blog</a> - 一个前后端完全分离的单页应用</li>\n<li><a href=\"https://github.com/okoala/vue-fis3\" target=\"_blank\" rel=\"noopener\">vue-fis3</a> - 流行开源工具集成demo</li>\n<li><a href=\"https://github.com/wendaosanshou/mi-by-vue\" target=\"_blank\" rel=\"noopener\">mi-by-vue</a> - VueJS仿小米官网</li>\n<li><a href=\"https://github.com/ChuckCZC/vue-demo-maizuo\" target=\"_blank\" rel=\"noopener\">vue-demo-maizuo</a> - 使用Vue2全家桶仿制卖座电影</li>\n<li><a href=\"https://github.com/superman66/vue2.x-douban\" target=\"_blank\" rel=\"noopener\">vue2.x-douban</a> - Vue2实现简易豆瓣电影webApp</li>\n<li><a href=\"https://github.com/liujians/vue-adminLte-vue-router\" target=\"_blank\" rel=\"noopener\">vue-adminLte-vue-router</a> - vue和adminLte整合应用</li>\n<li><a href=\"https://github.com/iHaPBoy/vue-zhihudaily\" target=\"_blank\" rel=\"noopener\">vue-zhihudaily</a> - 知乎日报 Web 版本</li>\n<li><a href=\"https://github.com/pomelo-chuan/Zhihu-Daily-Vue.js\" target=\"_blank\" rel=\"noopener\">Zhihu-Daily-Vue.js</a> - Vuejs单页网页应用</li>\n<li><a href=\"https://github.com/superman66/vue-axios-github\" target=\"_blank\" rel=\"noopener\">vue-axios-github</a> - 登录拦截登出功能</li>\n<li><a href=\"https://github.com/vincentSea/vue2.x-Cnode\" target=\"_blank\" rel=\"noopener\">vue2.x-Cnode</a> - 基于vue全家桶的Cnode社区</li>\n<li><a href=\"https://github.com/rokups/hello-vue-django\" target=\"_blank\" rel=\"noopener\">hello-vue-django</a> - 使用带有Django的vuejs的样板项目</li>\n<li><a href=\"https://github.com/secreter/websocket_chat\" target=\"_blank\" rel=\"noopener\">websocket_chat</a> - 基于vue和websocket的多人在线聊天室</li>\n<li><a href=\"https://github.com/CommanderXL/x-blog\" target=\"_blank\" rel=\"noopener\">x-blog</a> - 开源的个人blog项目</li>\n<li><a href=\"https://github.com/wszgxa/vue-cnode\" target=\"_blank\" rel=\"noopener\">vue-cnode</a> - vue单页应用demo</li>\n<li><a href=\"https://github.com/xrr2016/vue-express-mongodb\" target=\"_blank\" rel=\"noopener\">vue-express-mongodb</a> - 简单的前后端分离案例</li>\n<li><a href=\"https://github.com/beidan/photoShare\" target=\"_blank\" rel=\"noopener\">photoShare</a> - 基于图片分享的社交平台</li>\n<li><a href=\"https://github.com/lin-xin/notepad\" target=\"_blank\" rel=\"noopener\">notepad</a> - 本地存储的记事本</li>\n<li><a href=\"https://github.com/cs1707/vue-zhihudaily-2.0\" target=\"_blank\" rel=\"noopener\">vue-zhihudaily-2.0</a> - 使用Vue2.0+vue-router+vuex创建的zhihudaily</li>\n<li><a href=\"https://github.com/elva2596/vueBlog\" target=\"_blank\" rel=\"noopener\">vueBlog</a> - 前后端分离博客</li>\n<li><a href=\"https://github.com/littlewin-wang/Zhihu_Daily\" target=\"_blank\" rel=\"noopener\">Zhihu_Daily</a> - 基于Vue和Nodejs的Web单页应用</li>\n<li><a href=\"https://github.com/hql123/vue-ruby-china\" target=\"_blank\" rel=\"noopener\">vue-ruby-china</a> - VueJS框架搭建的rubychina平台</li>\n<li><a href=\"https://github.com/Molunerfinn/vue-koa-demo\" target=\"_blank\" rel=\"noopener\">vue-koa-demo</a> - 使用Vue2和Koa1的全栈demo</li>\n<li><a href=\"https://github.com/shaqihe/life-app-vue\" target=\"_blank\" rel=\"noopener\">life-app-vue</a> - 使用vue2完成多功能集合到小webapp</li>\n<li><a href=\"https://github.com/wenye123/vue-trip\" target=\"_blank\" rel=\"noopener\">vue-trip</a> - vue2做的出行webapp</li>\n<li><a href=\"https://github.com/SidKwok/github-explorer\" target=\"_blank\" rel=\"noopener\">github-explorer</a> - 寻找最有趣的GitHub库</li>\n<li><a href=\"https://github.com/albertchan/vue-ssr-boilerplate\" target=\"_blank\" rel=\"noopener\">vue-ssr-boilerplate</a> - 精简版的ofvue-hackernews-2</li>\n<li><a href=\"https://github.com/nswbmw/vue-bushishiren\" target=\"_blank\" rel=\"noopener\">vue-bushishiren</a> - 不是诗人应用</li>\n<li><a href=\"https://github.com/peng1992/houtai\" target=\"_blank\" rel=\"noopener\">houtai</a> - 基于vue和Element的后台管理系统</li>\n<li><a href=\"https://github.com/QRL909109/ios7-vue\" target=\"_blank\" rel=\"noopener\">ios7-vue</a> - 使用vue2.0 vue-router vuex模拟ios7</li>\n<li><a href=\"https://github.com/tyllo/Framework7-VueJS\" target=\"_blank\" rel=\"noopener\">Framework7-VueJS</a> - 使用移动框架的示例</li>\n<li><a href=\"https://github.com/BubblyPoker/cnode-vue\" target=\"_blank\" rel=\"noopener\">cnode-vue</a> - 基于vue和vue-router构建的cnodejs web网站SPA</li>\n<li><a href=\"https://github.com/zhoou/vue-cli-multipage-bootstrap\" target=\"_blank\" rel=\"noopener\">vue-cli-multipage-bootstrap</a> - 将vue官方在线示例整合到组件中</li>\n<li><a href=\"https://github.com/jiananle/vue-cnode\" target=\"_blank\" rel=\"noopener\">vue-cnode</a> - 用 Vue 做的 CNode 官网</li>\n<li><a href=\"https://github.com/Alex-xd/seeMusic\" target=\"_blank\" rel=\"noopener\">seeMusic</a> - 跨平台云音乐播放器</li>\n<li><a href=\"https://github.com/GitaiQAQ/HyaReader\" target=\"_blank\" rel=\"noopener\">HyaReader</a> - 移动友好的阅读器</li>\n<li><a href=\"https://github.com/xrr2016/zhihu-daily\" target=\"_blank\" rel=\"noopener\">zhihu-daily</a> - 轻松查看知乎日报内容</li>\n<li><a href=\"https://github.com/Damonlw/vue-cnode\" target=\"_blank\" rel=\"noopener\">vue-cnode</a> - 使用cNode社区提供的接口</li>\n<li><a href=\"https://github.com/moonou/zhihu-daily-vue\" target=\"_blank\" rel=\"noopener\">zhihu-daily-vue</a> - 知乎日报</li>\n<li><a href=\"https://github.com/ITCNZ/vue-dropload\" target=\"_blank\" rel=\"noopener\">vue-dropload</a> - 用以测试下拉加载与简单路由</li>\n<li><a href=\"https://github.com/soulcm/vue-cnode-mobile\" target=\"_blank\" rel=\"noopener\">vue-cnode-mobile</a> - 搭建cnode社区</li>\n<li><a href=\"https://github.com/fishenal/Vuejs-SalePlatform\" target=\"_blank\" rel=\"noopener\">Vuejs-SalePlatform</a> - vuejs搭建的售卖平台demo</li>\n<li><a href=\"https://github.com/youknowznm/vue-memo\" target=\"_blank\" rel=\"noopener\">vue-memo</a> - 用 vue写的记事本应用</li>\n<li><a href=\"https://github.com/sailengsi/sls-vuex2-demo\" target=\"_blank\" rel=\"noopener\">sls-vuex2-demo</a> - vuex2商城购物车demo</li>\n<li><a href=\"https://github.com/Halfeld/v-notes\" target=\"_blank\" rel=\"noopener\">v-notes</a> - 简单美观的记事本</li>\n<li><a href=\"https://github.com/BosNaufal/vue-starter\" target=\"_blank\" rel=\"noopener\">vue-starter</a> - VueJs项目的简单启动页</li>\n</ol>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cl78qfonz0001qic9sev25okv","category_id":"cl78qfoo60003qic9r2z8vao8","_id":"cl78qfooe000cqic9d6ag0od1"},{"post_id":"cl78qfooc000aqic9uds2da2z","category_id":"cl78qfoob0008qic9y2tg734a","_id":"cl78qfooi000hqic9ux95bltm"},{"post_id":"cl78qfoo40002qic9hecjfudy","category_id":"cl78qfoob0008qic9y2tg734a","_id":"cl78qfook000lqic9q7p5fts2"},{"post_id":"cl78qfoo80005qic9w9lua5ie","category_id":"cl78qfooe000dqic9as91dhwl","_id":"cl78qfoom000pqic92or0o7a2"},{"post_id":"cl78qfoo90006qic9dl352bge","category_id":"cl78qfooj000iqic9z0t4e5z0","_id":"cl78qfooo000wqic9z5qfs9lu"},{"post_id":"cl78qfoob0007qic9fqsn456r","category_id":"cl78qfoom000qqic98sg9tdfu","_id":"cl78qfoos0013qic9d1mafyui"},{"post_id":"cl78qfooq0011qic9fiq3ksud","category_id":"cl78qfooe000dqic9as91dhwl","_id":"cl78qfoou0019qic9beic0gis"},{"post_id":"cl78qfood000bqic9ehrsno38","category_id":"cl78qfoop000yqic9xa7orxko","_id":"cl78qfoov001dqic9hpr48zhs"},{"post_id":"cl78qfoor0012qic9lv7fa7fc","category_id":"cl78qfoom000qqic98sg9tdfu","_id":"cl78qfoow001fqic9ockhpsg1"},{"post_id":"cl78qfoot0016qic97gx46ey0","category_id":"cl78qfoop000yqic9xa7orxko","_id":"cl78qfoox001jqic9ujq35teu"},{"post_id":"cl78qfoof000fqic92d3lcly1","category_id":"cl78qfoos0014qic9yk60vcje","_id":"cl78qfooy001mqic9zmufxbom"},{"post_id":"cl78qfoot0018qic9rozc34yt","category_id":"cl78qfoop000yqic9xa7orxko","_id":"cl78qfop0001pqic9ep50qedm"},{"post_id":"cl78qfooh000gqic9t7uzakl6","category_id":"cl78qfoou001aqic9abrajuvd","_id":"cl78qfop3001uqic9l5cg0x3g"},{"post_id":"cl78qfoov001eqic9lki534v8","category_id":"cl78qfoop000yqic9xa7orxko","_id":"cl78qfop4001wqic9x568xbw0"},{"post_id":"cl78qfooy001lqic9rp8i90wm","category_id":"cl78qfoob0008qic9y2tg734a","_id":"cl78qfop50021qic9zpv0b06p"},{"post_id":"cl78qfooj000kqic9o9rk1aeq","category_id":"cl78qfoow001gqic95xkz321u","_id":"cl78qfop70024qic9j745y47e"},{"post_id":"cl78qfop2001tqic9oq032u0p","category_id":"cl78qfoob0008qic9y2tg734a","_id":"cl78qfop80028qic98c33ca2l"},{"post_id":"cl78qfook000nqic9gukzr3p3","category_id":"cl78qfoom000qqic98sg9tdfu","_id":"cl78qfop9002bqic9e4bnl9s5"},{"post_id":"cl78qfop50020qic9qjyuq3p7","category_id":"cl78qfoom000qqic98sg9tdfu","_id":"cl78qfopa002gqic9dtwdo9ip"},{"post_id":"cl78qfoom000sqic94ka0ku1q","category_id":"cl78qfop4001xqic92cq6w538","_id":"cl78qfopb002iqic9b1v3ale0"},{"post_id":"cl78qfop70027qic9eury17k8","category_id":"cl78qfoom000qqic98sg9tdfu","_id":"cl78qfopc002lqic9wsa3y5ay"},{"post_id":"cl78qfooo000xqic98fsrehir","category_id":"cl78qfop9002cqic9o08doe8c","_id":"cl78qfope002pqic91g564n4g"},{"post_id":"cl78qfopa002hqic9l0ptarft","category_id":"cl78qfooe000dqic9as91dhwl","_id":"cl78qfopg002uqic9g6olhavf"},{"post_id":"cl78qfopb002kqic9wjik4ohg","category_id":"cl78qfooe000dqic9as91dhwl","_id":"cl78qfoph002xqic96wqeipkk"},{"post_id":"cl78qfoou001cqic9l810yy1z","category_id":"cl78qfopb002jqic9zdqit9ph","_id":"cl78qfopi0031qic9x2xyi2lw"},{"post_id":"cl78qfopf002rqic9e4fdnc54","category_id":"cl78qfooe000dqic9as91dhwl","_id":"cl78qfopj0034qic9alljagt5"},{"post_id":"cl78qfooz001oqic9u2jct27p","category_id":"cl78qfopi002zqic94pg87g6o","_id":"cl78qfopm003bqic9a0h2fhc0"},{"post_id":"cl78qfopl0038qic9vjwp3rqf","category_id":"cl78qfoop000yqic9xa7orxko","_id":"cl78qfopo003hqic9hc45md0j"},{"post_id":"cl78qfop3001vqic9as0qq1t5","category_id":"cl78qfoob0008qic9y2tg734a","_id":"cl78qfopp003kqic94xm00gi1"},{"post_id":"cl78qfop3001vqic9as0qq1t5","category_id":"cl78qfopk0036qic9qjgqtdxh","_id":"cl78qfopq003nqic98v69t3xi"},{"post_id":"cl78qfopn003eqic9x4ivy3zg","category_id":"cl78qfoob0008qic9y2tg734a","_id":"cl78qfopq003pqic94uwlxx88"},{"post_id":"cl78qfop60023qic9i81ja7eu","category_id":"cl78qfopm003cqic9n8kq30ps","_id":"cl78qfopr003sqic9m6x080j8"},{"post_id":"cl78qfoon000uqic9udbmrdh9","category_id":"cl78qfop70025qic96j278x2j","_id":"cl78qfopr003uqic9ixlz7yj5"},{"post_id":"cl78qfoon000uqic9udbmrdh9","category_id":"cl78qfopp003iqic9bq2zw0c3","_id":"cl78qfops003xqic9e6bzojwy"},{"post_id":"cl78qfop8002aqic95qe383ko","category_id":"cl78qfopq003qqic9si61v4me","_id":"cl78qfopt003zqic98pof9zod"},{"post_id":"cl78qfop9002fqic95p995z80","category_id":"cl78qfopq003qqic9si61v4me","_id":"cl78qfopt0042qic9b77p68iv"},{"post_id":"cl78qfopg002vqic9vs9bacxe","category_id":"cl78qfopt0043qic9zjcipvg2","_id":"cl78qfopv0049qic9oapy2j0l"},{"post_id":"cl78qfoox001iqic9ixxfx261","category_id":"cl78qfop70025qic96j278x2j","_id":"cl78qfopw004cqic9yfoqfeo8"},{"post_id":"cl78qfoox001iqic9ixxfx261","category_id":"cl78qfopp003iqic9bq2zw0c3","_id":"cl78qfopw004gqic9dibnuoqw"},{"post_id":"cl78qfoph002yqic99bbl7v1u","category_id":"cl78qfopv0048qic90kp6dpwp","_id":"cl78qfopx004jqic93ywqi2zu"},{"post_id":"cl78qfopj0032qic9lqvjxhjz","category_id":"cl78qfopv0048qic90kp6dpwp","_id":"cl78qfopy004oqic98z2loimt"},{"post_id":"cl78qfopj0035qic9t4hnd31c","category_id":"cl78qfopv0048qic90kp6dpwp","_id":"cl78qfopz004sqic9omsmvpsu"},{"post_id":"cl78qfopm003aqic9wc04jn7f","category_id":"cl78qfopv0048qic90kp6dpwp","_id":"cl78qfoq0004vqic960mlqu17"},{"post_id":"cl78qfopo003gqic9dyl7xcnv","category_id":"cl78qfopz004rqic9hhdu1985","_id":"cl78qfoq1004zqic9ctoub32p"},{"post_id":"cl78qfopp003jqic939bkeg33","category_id":"cl78qfopv0048qic90kp6dpwp","_id":"cl78qfoq10052qic95l8nvbuf"},{"post_id":"cl78qfopd002oqic99dqbyq54","category_id":"cl78qfops003yqic92ekyuamm","_id":"cl78qfoq20056qic9mk344e7f"},{"post_id":"cl78qfopd002oqic99dqbyq54","category_id":"cl78qfoq1004yqic9kbpezz1t","_id":"cl78qfoq30059qic9cj3h7kc4"},{"post_id":"cl78qfoqh006kqic9ga5net7l","category_id":"cl78qfoom000qqic98sg9tdfu","_id":"cl78qfoqn006qqic9f0vq2wjk"},{"post_id":"cl78qfoqj006oqic91s1dsnke","category_id":"cl78qfop70025qic96j278x2j","_id":"cl78qfoqo006wqic91ciy6a7j"},{"post_id":"cl78qfoqg006jqic9969mqwck","category_id":"cl78qfoqi006lqic9aj5eqiyy","_id":"cl78qfoqp0070qic9tz5x5ez0"},{"post_id":"cl78qfoqn006uqic9n0gavezo","category_id":"cl78qfoos0014qic9yk60vcje","_id":"cl78qfoqp0072qic9t5o1k30x"},{"post_id":"cl78qfoqi006nqic9prgpm4vv","category_id":"cl78qfoqn006rqic9w44of7p3","_id":"cl78qfoqq0075qic9g3vupc94"},{"post_id":"cl78qfoqk006pqic9vv19h6nt","category_id":"cl78qfoqo006xqic9jla5koxi","_id":"cl78qfoqq0076qic942xgr9mo"},{"post_id":"cl78qfor1007dqic95ykp0hgw","category_id":"cl78qfoom000qqic98sg9tdfu","_id":"cl78qfor2007fqic9ld7tkdsf"}],"PostTag":[{"post_id":"cl78qfonz0001qic9sev25okv","tag_id":"cl78qfoo80004qic9b9t3mxq6","_id":"cl78qfook000mqic9nhavovza"},{"post_id":"cl78qfonz0001qic9sev25okv","tag_id":"cl78qfoob0009qic96bh9pmw0","_id":"cl78qfool000oqic99wjybdzi"},{"post_id":"cl78qfonz0001qic9sev25okv","tag_id":"cl78qfooe000eqic9mcgw43zq","_id":"cl78qfoon000tqic9qvkxklha"},{"post_id":"cl78qfoo40002qic9hecjfudy","tag_id":"cl78qfooj000jqic9acf30lax","_id":"cl78qfooo000vqic9fp5z9cfn"},{"post_id":"cl78qfoo80005qic9w9lua5ie","tag_id":"cl78qfoom000rqic9vju53uwx","_id":"cl78qfooq0010qic9igi06yss"},{"post_id":"cl78qfoo90006qic9dl352bge","tag_id":"cl78qfoop000zqic9g0uvmjx7","_id":"cl78qfoot0017qic9ex1eq64a"},{"post_id":"cl78qfoob0007qic9fqsn456r","tag_id":"cl78qfoos0015qic9263ygln8","_id":"cl78qfoox001kqic9vop7merl"},{"post_id":"cl78qfoob0007qic9fqsn456r","tag_id":"cl78qfoou001bqic9pwqpu8f0","_id":"cl78qfooz001nqic9vhhbuynh"},{"post_id":"cl78qfooc000aqic9uds2da2z","tag_id":"cl78qfoow001hqic99rwppl2u","_id":"cl78qfop2001sqic97jicvhnl"},{"post_id":"cl78qfop2001tqic9oq032u0p","tag_id":"cl78qfoow001hqic99rwppl2u","_id":"cl78qfop5001zqic90x0aqu30"},{"post_id":"cl78qfood000bqic9ehrsno38","tag_id":"cl78qfop0001rqic9jfdeq9be","_id":"cl78qfop60022qic9mwkznjl8"},{"post_id":"cl78qfoof000fqic92d3lcly1","tag_id":"cl78qfop4001yqic9oyzv53a2","_id":"cl78qfop80029qic9wi9tueoc"},{"post_id":"cl78qfop70027qic9eury17k8","tag_id":"cl78qfoos0015qic9263ygln8","_id":"cl78qfop9002dqic90npys5av"},{"post_id":"cl78qfooh000gqic9t7uzakl6","tag_id":"cl78qfop70026qic922qbnujm","_id":"cl78qfopd002nqic9xk417u8s"},{"post_id":"cl78qfooh000gqic9t7uzakl6","tag_id":"cl78qfop9002eqic9630bl3ss","_id":"cl78qfope002qqic95zfkduvu"},{"post_id":"cl78qfooj000kqic9o9rk1aeq","tag_id":"cl78qfopc002mqic9fsdkrcyp","_id":"cl78qfoph002wqic9rho63r8u"},{"post_id":"cl78qfook000nqic9gukzr3p3","tag_id":"cl78qfopg002tqic9hgxst9pr","_id":"cl78qfopj0033qic99gdm62ws"},{"post_id":"cl78qfoom000sqic94ka0ku1q","tag_id":"cl78qfopi0030qic9ycnsjuzd","_id":"cl78qfopl0039qic97laa0ym1"},{"post_id":"cl78qfopl0038qic9vjwp3rqf","tag_id":"cl78qfop0001rqic9jfdeq9be","_id":"cl78qfopm003dqic963jt7ku6"},{"post_id":"cl78qfoon000uqic9udbmrdh9","tag_id":"cl78qfopk0037qic9xx4nnbc5","_id":"cl78qfopq003mqic9eluwn7cj"},{"post_id":"cl78qfoon000uqic9udbmrdh9","tag_id":"cl78qfoow001hqic99rwppl2u","_id":"cl78qfopq003oqic9z8ljce64"},{"post_id":"cl78qfooo000xqic98fsrehir","tag_id":"cl78qfopq003lqic9m1danm1u","_id":"cl78qfopr003tqic9vh1nohd7"},{"post_id":"cl78qfooq0011qic9fiq3ksud","tag_id":"cl78qfopr003rqic988m8a48x","_id":"cl78qfopt0041qic9l96iga6c"},{"post_id":"cl78qfooq0011qic9fiq3ksud","tag_id":"cl78qfops003wqic9asnd9dwc","_id":"cl78qfopu0044qic91x9j6pmv"},{"post_id":"cl78qfoor0012qic9lv7fa7fc","tag_id":"cl78qfopt0040qic9lhjgzu90","_id":"cl78qfopv004bqic9lswp09tv"},{"post_id":"cl78qfoor0012qic9lv7fa7fc","tag_id":"cl78qfopg002tqic9hgxst9pr","_id":"cl78qfopw004eqic97y3c7cw7"},{"post_id":"cl78qfoor0012qic9lv7fa7fc","tag_id":"cl78qfopv0047qic9w9tcmytv","_id":"cl78qfopw004hqic9jm2et0cm"},{"post_id":"cl78qfoot0016qic97gx46ey0","tag_id":"cl78qfop0001rqic9jfdeq9be","_id":"cl78qfopx004kqic99o99iav0"},{"post_id":"cl78qfoot0018qic9rozc34yt","tag_id":"cl78qfop0001rqic9jfdeq9be","_id":"cl78qfopy004mqic9gfqtwz47"},{"post_id":"cl78qfoou001cqic9l810yy1z","tag_id":"cl78qfopx004lqic9cvklya1j","_id":"cl78qfopz004qqic9ieertsl0"},{"post_id":"cl78qfoov001eqic9lki534v8","tag_id":"cl78qfop0001rqic9jfdeq9be","_id":"cl78qfoq0004uqic9o1vjkxhi"},{"post_id":"cl78qfoox001iqic9ixxfx261","tag_id":"cl78qfopk0037qic9xx4nnbc5","_id":"cl78qfoq10051qic9m3fnk6tg"},{"post_id":"cl78qfoox001iqic9ixxfx261","tag_id":"cl78qfoow001hqic99rwppl2u","_id":"cl78qfoq10053qic9p3xwp29g"},{"post_id":"cl78qfooy001lqic9rp8i90wm","tag_id":"cl78qfoow001hqic99rwppl2u","_id":"cl78qfoq20055qic9crauabu9"},{"post_id":"cl78qfooy001lqic9rp8i90wm","tag_id":"cl78qfoq10050qic9026sbw9a","_id":"cl78qfoq20057qic9r66m4z9z"},{"post_id":"cl78qfooz001oqic9u2jct27p","tag_id":"cl78qfoq20054qic9nju49i48","_id":"cl78qfoq3005aqic9qlf7barw"},{"post_id":"cl78qfop3001vqic9as0qq1t5","tag_id":"cl78qfopg002tqic9hgxst9pr","_id":"cl78qfoq3005dqic9nwx8sufx"},{"post_id":"cl78qfop3001vqic9as0qq1t5","tag_id":"cl78qfoq3005bqic9fww3ifnc","_id":"cl78qfoq3005eqic9ai7quii8"},{"post_id":"cl78qfop50020qic9qjyuq3p7","tag_id":"cl78qfoos0015qic9263ygln8","_id":"cl78qfoq4005gqic9pagctui8"},{"post_id":"cl78qfop50020qic9qjyuq3p7","tag_id":"cl78qfoou001bqic9pwqpu8f0","_id":"cl78qfoq4005hqic9lug4bl8u"},{"post_id":"cl78qfop50020qic9qjyuq3p7","tag_id":"cl78qfoq3005cqic939cv6z0n","_id":"cl78qfoq4005jqic93epqiqr8"},{"post_id":"cl78qfop60023qic9i81ja7eu","tag_id":"cl78qfoq3005fqic9vd8dy2tq","_id":"cl78qfoq4005kqic98n8ldrsl"},{"post_id":"cl78qfop8002aqic95qe383ko","tag_id":"cl78qfop9002eqic9630bl3ss","_id":"cl78qfoq5005mqic9e9k01npd"},{"post_id":"cl78qfop9002fqic95p995z80","tag_id":"cl78qfop9002eqic9630bl3ss","_id":"cl78qfoq6005pqic9akbrbkmz"},{"post_id":"cl78qfop9002fqic95p995z80","tag_id":"cl78qfoq5005nqic96w2ex0l9","_id":"cl78qfoq6005qqic9xqyz1qal"},{"post_id":"cl78qfopa002hqic9l0ptarft","tag_id":"cl78qfops003wqic9asnd9dwc","_id":"cl78qfoq7005sqic9cqjgxte7"},{"post_id":"cl78qfopb002kqic9wjik4ohg","tag_id":"cl78qfops003wqic9asnd9dwc","_id":"cl78qfoq7005uqic9wmgr9bpu"},{"post_id":"cl78qfopd002oqic99dqbyq54","tag_id":"cl78qfoq7005tqic9no7qk551","_id":"cl78qfoq9005xqic9vmb95jp2"},{"post_id":"cl78qfopd002oqic99dqbyq54","tag_id":"cl78qfoq8005vqic9ez6d0rhw","_id":"cl78qfoqa005yqic91uxuyqmj"},{"post_id":"cl78qfopf002rqic9e4fdnc54","tag_id":"cl78qfops003wqic9asnd9dwc","_id":"cl78qfoqa0060qic98vw8b3zz"},{"post_id":"cl78qfopg002vqic9vs9bacxe","tag_id":"cl78qfoqa005zqic9mmnxlb2b","_id":"cl78qfoqa0062qic9p1kjch2f"},{"post_id":"cl78qfoph002yqic99bbl7v1u","tag_id":"cl78qfoqa0061qic9sqvhamx8","_id":"cl78qfoqb0064qic9ze45n4tt"},{"post_id":"cl78qfopj0032qic9lqvjxhjz","tag_id":"cl78qfoqa0061qic9sqvhamx8","_id":"cl78qfoqb0067qic9h31kkbak"},{"post_id":"cl78qfopj0032qic9lqvjxhjz","tag_id":"cl78qfoqb0065qic9o5tfs5m8","_id":"cl78qfoqb0068qic9425chgfo"},{"post_id":"cl78qfopj0035qic9t4hnd31c","tag_id":"cl78qfoqa0061qic9sqvhamx8","_id":"cl78qfoqc006aqic9orl5lh0v"},{"post_id":"cl78qfopm003aqic9wc04jn7f","tag_id":"cl78qfoqa0061qic9sqvhamx8","_id":"cl78qfoqc006cqic9rdnhh8pp"},{"post_id":"cl78qfopn003eqic9x4ivy3zg","tag_id":"cl78qfoow001hqic99rwppl2u","_id":"cl78qfoqc006eqic9h85yqfxp"},{"post_id":"cl78qfopn003eqic9x4ivy3zg","tag_id":"cl78qfoqc006bqic9xki9ftth","_id":"cl78qfoqc006fqic9bnnddwd5"},{"post_id":"cl78qfopo003gqic9dyl7xcnv","tag_id":"cl78qfoqc006dqic951oiu8yc","_id":"cl78qfoqd006hqic9ojfxiggw"},{"post_id":"cl78qfopp003jqic939bkeg33","tag_id":"cl78qfoqa0061qic9sqvhamx8","_id":"cl78qfoqd006iqic9gb5a7zcn"},{"post_id":"cl78qfoqg006jqic9969mqwck","tag_id":"cl78qfoqi006mqic9sevqx0dj","_id":"cl78qfoqn006tqic9vpazybly"},{"post_id":"cl78qfoqk006pqic9vv19h6nt","tag_id":"cl78qfoow001hqic99rwppl2u","_id":"cl78qfoqo006vqic9eoq17mvl"},{"post_id":"cl78qfoqn006uqic9n0gavezo","tag_id":"cl78qfop4001yqic9oyzv53a2","_id":"cl78qfoqp006zqic9v44knlts"},{"post_id":"cl78qfoqh006kqic9ga5net7l","tag_id":"cl78qfoqn006sqic9ybv79lmd","_id":"cl78qfoqp0071qic9esg0fs87"},{"post_id":"cl78qfoqh006kqic9ga5net7l","tag_id":"cl78qfoos0015qic9263ygln8","_id":"cl78qfoqq0074qic9w0cx10t3"},{"post_id":"cl78qfoqi006nqic9prgpm4vv","tag_id":"cl78qfoqp006yqic96mdcgf82","_id":"cl78qfoqq0078qic915hz2pnl"},{"post_id":"cl78qfoqi006nqic9prgpm4vv","tag_id":"cl78qfoqq0073qic9vrt22z4r","_id":"cl78qfoqq0079qic9r6im83m8"},{"post_id":"cl78qfoqj006oqic91s1dsnke","tag_id":"cl78qfoqq0077qic9ai8tt6oy","_id":"cl78qfoqr007bqic9rgpda4od"},{"post_id":"cl78qfoqj006oqic91s1dsnke","tag_id":"cl78qfoqq007aqic9qy5bbds3","_id":"cl78qfoqr007cqic9kcyrkite"},{"post_id":"cl78qfor1007dqic95ykp0hgw","tag_id":"cl78qfoos0015qic9263ygln8","_id":"cl78qfor2007gqic9syvvzyhz"},{"post_id":"cl78qfor1007dqic95ykp0hgw","tag_id":"cl78qfor2007eqic9y1d6lufa","_id":"cl78qfor2007hqic9jncfeq57"}],"Tag":[{"name":"AnyProxy","_id":"cl78qfoo80004qic9b9t3mxq6"},{"name":"Thor","_id":"cl78qfoob0009qic96bh9pmw0"},{"name":"抓包","_id":"cl78qfooe000eqic9mcgw43zq"},{"name":"AutoJs","_id":"cl78qfooj000jqic9acf30lax"},{"name":"CSS技巧","_id":"cl78qfoom000rqic9vju53uwx"},{"name":"AndroidStudio","_id":"cl78qfoop000zqic9g0uvmjx7"},{"name":"Vue","_id":"cl78qfoos0015qic9263ygln8"},{"name":"Axios","_id":"cl78qfoou001bqic9pwqpu8f0"},{"name":"JavaScript","_id":"cl78qfoow001hqic99rwppl2u"},{"name":"Git","_id":"cl78qfop0001rqic9jfdeq9be"},{"name":"Flutter","_id":"cl78qfop4001yqic9oyzv53a2"},{"name":"Mac","_id":"cl78qfop70026qic922qbnujm"},{"name":"Node","_id":"cl78qfop9002eqic9630bl3ss"},{"name":"Markdown","_id":"cl78qfopc002mqic9fsdkrcyp"},{"name":"vue","_id":"cl78qfopg002tqic9hgxst9pr"},{"name":"Moment","_id":"cl78qfopi0030qic9ycnsjuzd"},{"name":"JS插件","_id":"cl78qfopk0037qic9xx4nnbc5"},{"name":"ThreeJs","_id":"cl78qfopq003lqic9m1danm1u"},{"name":"Bootstrap","_id":"cl78qfopr003rqic988m8a48x"},{"name":"CSS","_id":"cl78qfops003wqic9asnd9dwc"},{"name":"mockjs","_id":"cl78qfopt0040qic9lhjgzu90"},{"name":"axios","_id":"cl78qfopv0047qic9w9tcmytv"},{"name":"MySQL","_id":"cl78qfopx004lqic9cvklya1j"},{"name":"js插件","_id":"cl78qfoq10050qic9026sbw9a"},{"name":"Sublime","_id":"cl78qfoq20054qic9nju49i48"},{"name":"vue-router","_id":"cl78qfoq3005bqic9fww3ifnc"},{"name":"vue-cli3","_id":"cl78qfoq3005cqic939cv6z0n"},{"name":"Webstrom","_id":"cl78qfoq3005fqic9vd8dy2tq"},{"name":"数据优化","_id":"cl78qfoq5005nqic96w2ex0l9"},{"name":"微信","_id":"cl78qfoq7005tqic9no7qk551"},{"name":"调试","_id":"cl78qfoq8005vqic9ez6d0rhw"},{"name":"Docker","_id":"cl78qfoqa005zqic9mmnxlb2b"},{"name":"小程序","_id":"cl78qfoqa0061qic9sqvhamx8"},{"name":"小程序反编译","_id":"cl78qfoqb0065qic9o5tfs5m8"},{"name":"正则表达式","_id":"cl78qfoqc006bqic9xki9ftth"},{"name":"HTML","_id":"cl78qfoqc006dqic951oiu8yc"},{"name":"Dayjs","_id":"cl78qfoqi006mqic9sevqx0dj"},{"name":"ag-grid","_id":"cl78qfoqn006sqic9ybv79lmd"},{"name":"Blog","_id":"cl78qfoqp006yqic96mdcgf82"},{"name":"Github","_id":"cl78qfoqq0073qic9vrt22z4r"},{"name":"jQuer","_id":"cl78qfoqq0077qic9ai8tt6oy"},{"name":"jQuer动画","_id":"cl78qfoqq007aqic9qy5bbds3"},{"name":"Vue插件","_id":"cl78qfor2007eqic9y1d6lufa"}]}}